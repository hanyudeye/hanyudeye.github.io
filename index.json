[{"categories":["任务"],"contents":"DOING 把主机和显示器搬回来，主机更强大。大屏幕双界面更利于测试，而且那里桌子不适合编程，碰，只能用移动的小屏幕。 TODO 这个计划不好，只是一个长远规划\n写满500篇文章 [20/500] 做满200个视频 [0/200] 交10个网友 [0/10] 做个博客程序 [0/1] 做个工具程序 [0/1] 如何做好自己的计划 2023.09.26\n做好规划可以省时间 每天做一个科技资讯 ? ","permalink":"https://aming.xyz/post/todo/","tags":["tag1","tag2"],"title":"TodoList 长远任务"},{"categories":[""],"contents":"在wsl中设置子系统的默认用户 1 ubuntu.exe config --default-user {username} ","permalink":"https://aming.xyz/post/wsl%E5%88%9B%E5%BB%BA%E9%BB%98%E8%AE%A4%E7%94%A8%E6%88%B7/","tags":null,"title":"wsl创建默认用户"},{"categories":[""],"contents":"科技资讯 09.26 信息孤岛 现在的互联网，资讯入口不再是搜索引擎，而是在一个个大的互联网公司\n","permalink":"https://aming.xyz/post/todo%E7%A7%91%E6%8A%80%E8%B5%84%E8%AE%AF/","tags":null,"title":"科技资讯"},{"categories":["人文"],"contents":"不要用\u0026quot;生产力\u0026quot;这个词评价程序员，因为它是评价机器的。\n当你强调生产力时，实际上是在强调，人必须始终忙碌。每一刻都有事情要做，而且总是有更多事情要做！ 因此，你会有做不完的工作，闲暇时间越来越少，工作压力越来越大。\n程序员的真正目标，应该是\u0026quot;有效性\u0026quot;（effective）。你的劳动是有效的，切实完成了项目。\n当你把\u0026quot;有效性\u0026quot;当作目标时，只要有效完成了项目，你就可以停下来了。因此，你可以追求做更少的事情、用更少的时间达到目标，这样你会得到更多的闲暇和休息，这才是可持久的。\n生产力目标（productive）占用你所有的时间，把你的日程排满，追求尽可能多的产出。\n有效性目标（effective）正好相反，它不追求添加更多的任务，而且减少那些不该做的事情。\n","permalink":"https://aming.xyz/post/%E4%B8%8D%E8%A6%81%E7%94%A8%E7%94%9F%E4%BA%A7%E5%8A%9B%E8%AF%84%E4%BB%B7%E7%A8%8B%E5%BA%8F%E5%91%98/","tags":null,"title":"不要用生产力评价程序员"},{"categories":["技术"],"contents":"什么是计算机 计算机原来是一种 进行数字处理的机器，后来随着 可编程的加入，产生了软件的概念，可以进行其它数据的处理。\n计算机原理 现代计算机是可编程的，软硬件分离，要处理某类对象要先载入某类程序，然后执行程序实现功能。 计算机中的指令： 就是程序的命令 处理器（CPU），负责解析程序，并执行的硬件。 操作系统软件 Linux，Windows操作软件的功能是 管理其它应用软件 （载入，载出），并给它们提供操纵设备的接口。\n应用软件 文件和目录管理软件 ls , cat ,mv (修改文件名) 数学计算软件 calc 图片处理软件 photoshop 内容展示软件 163新闻 计算机教学软件 manual ,help ,info 系统配置 /etc/ init.d 启动脚本 ","permalink":"https://aming.xyz/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/","tags":null,"title":"计算机原理"},{"categories":[""],"contents":"mac 版 PS 将 Ctrl 替换为 CMD 即可\n一、文件\n新建CTRL+N\n打开CTRL+O\n打开为ALT+CTRL+O\n关闭CTRL+W\n保存CTRL+S\n另存为CTRL+SHIFT+S\n另存为网页格式CTRL+ALT+S\n打印设置CTRL+ALT+P\n页面设置CTRL+SHIFT+P\n打印CTRL+P\n退出CTRL+Q\n二、编辑\n撤消CTRL+Z\n向前一步CTRL+SHIFT+Z\n向后一步CTRL+ALT+Z\n退取CTRL+SHIFT+F\n剪切CTRL+X\n复制CTRL+C\n合并复制CTRL+SHIFT+C\n粘贴CTRL+V\n原位粘贴CTRL+SHIFT+V\n自由变换CTRL+T\n再次变换CTRL+SHIFT+T\n色彩设置CTRL+SHIFT+K\n三、图象\n调整→色阶CTRL+L\n调整→自动色阶CTRL+SHIFT+L\n调整→自动对比度CTRL+SHIFT+ALT+L\n调整→曲线CTRL+M\n调整→色彩平衡CTRL+B\n调整→色相/饱和度CTRL+U\n调整→去色CTRL+SHIFT+U\n调整→反向CTRL+I\n提取CTRL+ALT+X\n液化CTRL+SHIFT+X\n四、图层\n新建图层CTRL+SHIFT+N\n新建通过复制的图层CTRL+J\n与前一图层编组CTRL+G\n取消编组CTRL+SHIFT+G\n合并图层CTRL+E\n合并可见图层CTRL+SHIFT+E\n五、选择\n全选CTRL+A\n取消选择CTRL+D\n全部选择CTRL+SHIFT+D\n反选CTRL+SHIFT+I\n羽化CTRL+ALT+D\n六、滤镜\n上次滤镜操作CTRL+F\n七、视图\n校验颜色CTRL+Y\n色域警告CTRL+SHIFT+Y\n放大CTRL++\n缩小CTRL+-\n满画布显示CTRL+0\n实际像素CTRL+ALT+0\n显示附加CTRL+H\n显示网格CTRL+ALT+'\n显示标尺CTRL+R\n启用对齐CTRL+；\n琐定参考线CTRL+ALT+；\n八、窗口\n关闭全部CTRL+SHIFT+W\n九、帮助\n目录F1\n矩形、椭圆选框工具【M】\n裁剪工具【C】\n移动工具【V】\n套索、多边形套索、磁性套索【L】\n魔棒工具【W】\n喷枪工具【J】\n画笔工具【B】\n像皮图章、图案图章【S】\n历史记录画笔工具【Y】\n像皮擦工具【E】\n铅笔、直线工具【N】\n模糊、锐化、涂抹工具【R】\n减淡、加深、海棉工具【O】\n钢笔、自由钢笔、磁性钢笔【P】\n添加锚点工具【+】\n删除锚点工具【-】\n直接选取工具【A】\n文字、文字蒙板、直排文字、直排文字蒙板【T】\n度量工具【U】\n直线渐变、径向渐变、对称渐变、角度渐变、菱形渐变【G】\n油漆桶工具【K】\n吸管、颜色取样器【I】\n抓手工具【H】\n缩放工具【Z】\n默认前景色和背景色【D】\n切换前景色和背景色【X】\n切换标准模式和快速蒙板模式【Q】\n标准屏幕模式、带有菜单栏的全屏模式、全屏模式【F】\n临时使用移动工具【Ctrl】\n临时使用吸色工具【Alt】\n临时使用抓手工具【空格】\n打开工具选项面板【Enter】\n快速输入工具选项(当前工具选项面板中至少有一个可调节数字):【0】至【9】\n循环选择画笔【[】或【]】\n选择第一个画笔【Shift】+【[】\n选择最后一个画笔【Shift】+【]】\n建立新渐变(在”渐变编辑器”中)【Ctrl】+【N】\n文件操作\n新建图形文件【Ctrl】+【N】\n用默认设置创建新文件【Ctrl】+【Alt】+【N】\n打开已有的图像【Ctrl】+【O】\n打开为\u0026hellip;【Ctrl】+【Alt】+【O】\n关闭当前图像【Ctrl】+【W】\n保存当前图像【Ctrl】+【S】\n另存为\u0026hellip;【Ctrl】+【Shift】+【S】\n存储副本【Ctrl】+【Alt】+【S】\n页面设置【Ctrl】+【Shift】+【P】\n打印【Ctrl】+【P】\n打开“预置”对话框【Ctrl】+【K】\n显示最后一次显示的“预置”对话框【Alt】+【Ctrl】+【K】\n设置“常规”选项(在预置对话框中)【Ctrl】+【1】\n设置“存储文件”(在预置对话框中)【Ctrl】+【2】\n设置“显示和光标”(在预置对话框中)【Ctrl】+【3】\n设置“透明区域与色域”(在预置对话框中)【Ctrl】+【4】\n设置“单位与标尺”(在预置对话框中)【Ctrl】+【5】\n设置“参考线与网格”(在预置对话框中)【Ctrl】+【6】\n设置“增效工具与暂存盘”(在预置对话框中)【Ctrl】+【7】\n设置“内存与图像高速缓存”(在预置对话框中)【Ctrl】+【8】\n编辑操作\n还原/重做前一步操作【Ctrl】+【Z】\n还原两步以上操作【Ctrl】+【Alt】+【Z】\n重做两步以上操作【Ctrl】+【Shift】+【Z】\n剪切选取的图像或路径【Ctrl】+【X】或【F2】\n拷贝选取的图像或路径【Ctrl】+【C】\n合并拷贝【Ctrl】+【Shift】+【C】\n将剪贴板的内容粘到当前图形中【Ctrl】+【V】或【F4】\n将剪贴板的内容粘到选框中【Ctrl】+【Shift】+【V】\n自由变换【Ctrl】+【T】\n应用自由变换(在自由变换模式下)【Enter】\n从中心或对称点开始变换(在自由变换模式下)【Alt】\n限制(在自由变换模式下)【Shift】\n扭曲(在自由变换模式下)【Ctrl】\n取消变形(在自由变换模式下)【Esc】\n自由变换复制的象素数据【Ctrl】+【Shift】+【T】\n再次变换复制的象素数据并建立一个副本:\n【Ctrl】+【Shift】+【Alt】+【T】\n删除选框中的图案或选取的路径【DEL】\n用背景色填充所选区域或整个图层:\n【Ctrl】+【BackSpace】或【Ctrl】+【Del】\n用前景色填充所选区域或整个图层:\n【Alt】+【BackSpace】或【Alt】+【Del】\n弹出“填充”对话框【Shift】+【BackSpace】\n从历史记录中填充【Alt】+【Ctrl】+【Backspace】\n图像调整\n调整色阶【Ctrl】+【L】\n自动调整色阶【Ctrl】+【Shift】+【L】\n打开曲线调整对话框【Ctrl】+【M】\n取消选择所选通道上的所有点(‘曲线’对话框中)【Ctrl】+【D】\n打开“色彩平衡”对话框【Ctrl】+【B】\n打开“色相/饱和度”对话框【Ctrl】+【U】\n全图调整(在色相/饱和度”对话框中)【Ctrl】+【~】\n只调整红色(在色相/饱和度”对话框中)【Ctrl】+【1】\n只调整黄色(在色相/饱和度”对话框中)【Ctrl】+【2】\n只调整绿色(在色相/饱和度”对话框中)【Ctrl】+【3】\n只调整青色(在色相/饱和度”对话框中)【Ctrl】+【4】\n只调整蓝色(在色相/饱和度”对话框中)【Ctrl】+【5】\n只调整洋红(在色相/饱和度”对话框中)【Ctrl】+【6】\n去色【Ctrl】+【Shift】+【U】\n反相【Ctrl】+【I】\n图层操作\n从对话框新建一个图层【Ctrl】+【Shift】+【N】\n以默认选项建立一个新的图层【Ctrl】+【Alt】+【Shift】+【N】\n通过拷贝建立一个图层【Ctrl】+【J】\n通过剪切建立一个图层【Ctrl】+【Shift】+【J】\n与前一图层编组【Ctrl】+【G】\n取消编组【Ctrl】+【Shift】+【G】\n向下合并或合并联接图层【Ctrl】+【E】\n合并可见图层【Ctrl】+【Shift】+【E】\n盖印或盖印联接图层【Ctrl】+【Alt】+【E】\n盖印可见图层【Ctrl】+【Alt】+【Shift】+【E】\n将当前层下移一层【Ctrl】+【[】\n将当前层上移一层【Ctrl】+【]】\n将当前层移到最下面【Ctrl】+【Shift】+【[】\n将当前层移到最上面【Ctrl】+【Shift】+【]】\n激活下一个图层【Alt】+【[】\n激活上一个图层【Alt】+【]】\n激活底部图层【Shift】+【Alt】+【[】\n激活顶部图层【Shift】+【Alt】+【]】\n调整当前图层的透明度(当前工具为无数字参数的,如移动工具):\n【0】至【9】\n保留当前图层的透明区域(开关)【/】\n投影效果(在”效果”对话框中)【Ctrl】+【1】\n内阴影效果(在”效果”对话框中)【Ctrl】+【2】\n外发光效果(在”效果”对话框中)【Ctrl】+【3】\n内发光效果(在”效果”对话框中)【Ctrl】+【4】\n斜面和浮雕效果(在”效果”对话框中)【Ctrl】+【5】\n应用当前所选效果并使参数可调(在”效果”对话框中):\n【A】\n图层混合模式\n循环选择混合模式【Alt】+【-】或【+】\n正常【Ctrl】+【Alt】+【N】\n阈值（位图模式）【Ctrl】+【Alt】+【L】\n溶解【Ctrl】+【Alt】+【I】\n背后【Ctrl】+【Alt】+【Q】\n清除【Ctrl】+【Alt】+【R】\n正片叠底【Ctrl】+【Alt】+【M】\n屏幕【Ctrl】+【Alt】+【S】\n叠加【Ctrl】+【Alt】+【O】\n柔光【Ctrl】+【Alt】+【F】\n强光【Ctrl】+【Alt】+【H】\n颜色减淡【Ctrl】+【Alt】+【D】\n颜色加深【Ctrl】+【Alt】+【B】\n变暗【Ctrl】+【Alt】+【K】\n变亮【Ctrl】+【Alt】+【G】\n差值【Ctrl】+【Alt】+【E】\n排除【Ctrl】+【Alt】+【X】\n色相【Ctrl】+【Alt】+【U】\n饱和度【Ctrl】+【Alt】+【T】\n颜色【Ctrl】+【Alt】+【C】\n光度【Ctrl】+【Alt】+【Y】\n去色海棉工具+【Ctrl】+【Alt】+【J】\n加色海棉工具+【Ctrl】+【Alt】+【A】\n暗调减淡/加深工具+【Ctrl】+【Alt】+【W】\n中间调减淡/加深工具+【Ctrl】+【Alt】+【V】\n高光减淡/加深工具+【Ctrl】+【Alt】+【Z】选择功能\n全部选取【Ctrl】+【A】\n取消选择【Ctrl】+【D】\n重新选择【Ctrl】+【Shift】+【D】\n羽化选择【Ctrl】+【Alt】+【D】\n反向选择【Ctrl】+【Shift】+【I】\n路径变选区数字键盘的【Enter】\n载入选区【Ctrl】+点按图层、路径、通道面板中的缩约图\n按上次的参数再做一次上次的滤镜【Ctrl】+【F】\n退去上次所做滤镜的效果【Ctrl】+【Shift】+【F】\n重复上次所做的滤镜(可调参数):\n【Ctrl】+【Alt】+【F】\n选择工具(在“3D变化”滤镜中)【V】\n立方体工具(在“3D变化”滤镜中)【M】\n球体工具(在“3D变化”滤镜中)【N】\n柱体工具(在“3D变化”滤镜中)【C】\n轨迹球(在“3D变化”滤镜中)【R】\n全景相机工具(在“3D变化”滤镜中)【E】\n视图操作\n显示彩色通道【Ctrl】+【~】\n显示单色通道【Ctrl】+【数字】\n显示复合通道【~】\n以CMYK方式预览(开关)【Ctrl】+【Y】\n打开/关闭色域警告【Ctrl】+【Shift】+【Y】\n放大视图【Ctrl】+【+】\n缩小视图【Ctrl】+【-】\n满画布显示【Ctrl】+【0】\n实际象素显示【Ctrl】+【Alt】+【0】\n向上卷动一屏【PageUp】\n向下卷动一屏【PageDown】\n向左卷动一屏【Ctrl】+【PageUp】\n向右卷动一屏【Ctrl】+【PageDown】\n向上卷动10个单位【Shift】+【PageUp】\n向下卷动10个单位【Shift】+【PageDown】\n向左卷动10个单位【Shift】+【Ctrl】+【PageUp】\n向右卷动10个单位【Shift】+【Ctrl】+【PageDown】\n将视图移到左上角【Home】\n将视图移到右下角【End】\n显示/隐藏选择区域【Ctrl】+【H】\n显示/隐藏路径【Ctrl】+【Shift】+【H】\n显示/隐藏标尺【Ctrl】+【R】\n显示/隐藏参考线【Ctrl】+【;】\n显示/隐藏网格【Ctrl】+【”】\n贴紧参考线【Ctrl】+【Shift】+【;】\n锁定参考线【Ctrl】+【Alt】+【;】\n贴紧网格【Ctrl】+【Shift】+【”】\n显示/隐藏“画笔”面板【F5】\n显示/隐藏“颜色”面板【F6】\n显示/隐藏“图层”面板【F7】\n显示/隐藏“信息”面板【F8】\n显示/隐藏“动作”面板【F9】\n显示/隐藏所有命令面板【TAB】\n显示或隐藏工具箱以外的所有调板【Shift】+【TAB】\n文字处理(在”文字工具”对话框中)\n左对齐或顶对齐【Ctrl】+【Shift】+【L】\n中对齐【Ctrl】+【Shift】+【C】\n右对齐或底对齐【Ctrl】+【Shift】+【R】\n左／右选择1个字符【Shift】+【←】/【→】\n下／上选择1行【Shift】+【↑】/【↓】\n选择所有字符【Ctrl】+【A】\n将所选文本的文字大小减小2点象素【Ctrl】+【Shift】+【\u0026lt;】\n将所选文本的文字大小增大2点象素【Ctrl】+【Shift】+【\u0026gt;】\n将所选文本的文字大小减小10点象素【Ctrl】+【Alt】+【Shift】+【\u0026lt;】\n将所选文本的文字大小增大10点象素【Ctrl】+【Alt】+【Shift】+【\u0026gt;】\n将行距减小2点象素【Alt】+【↓】\n将行距增大2点象素【Alt】+【↑】\n将基线位移减小2点象素【Shift】+【Alt】+【↓】\n将基线位移增加2点象素【Shift】+【Alt】+【↑】\n将字距微调或字距调整减小20/1000ems:\n【Alt】+【←】\n将字距微调或字距调整增加20/1000ems:\n【Alt】+【→】\n将字距微调或字距调整减小100/1000ems:\n【Ctrl】+【Alt】+【←】\n将字距微调或字距调整增加100/1000ems:\n【Ctrl】+【Alt】+【→】\n选择通道中白的像素（包括半色调）:\n【Ctrl】+【Alt】+【1~9】mac 版 PS 将 Ctrl 替换为 CMD 即可\n一、文件\n新建CTRL+N\n打开CTRL+O\n打开为ALT+CTRL+O\n关闭CTRL+W\n保存CTRL+S\n另存为CTRL+SHIFT+S\n另存为网页格式CTRL+ALT+S\n打印设置CTRL+ALT+P\n页面设置CTRL+SHIFT+P\n打印CTRL+P\n退出CTRL+Q\n二、编辑\n撤消CTRL+Z\n向前一步CTRL+SHIFT+Z\n向后一步CTRL+ALT+Z\n退取CTRL+SHIFT+F\n剪切CTRL+X\n复制CTRL+C\n合并复制CTRL+SHIFT+C\n粘贴CTRL+V\n原位粘贴CTRL+SHIFT+V\n自由变换CTRL+T\n再次变换CTRL+SHIFT+T\n色彩设置CTRL+SHIFT+K\n三、图象\n调整→色阶CTRL+L\n调整→自动色阶CTRL+SHIFT+L\n调整→自动对比度CTRL+SHIFT+ALT+L\n调整→曲线CTRL+M\n调整→色彩平衡CTRL+B\n调整→色相/饱和度CTRL+U\n调整→去色CTRL+SHIFT+U\n调整→反向CTRL+I\n提取CTRL+ALT+X\n液化CTRL+SHIFT+X\n四、图层\n新建图层CTRL+SHIFT+N\n新建通过复制的图层CTRL+J\n与前一图层编组CTRL+G\n取消编组CTRL+SHIFT+G\n合并图层CTRL+E\n合并可见图层CTRL+SHIFT+E\n五、选择\n全选CTRL+A\n取消选择CTRL+D\n全部选择CTRL+SHIFT+D\n反选CTRL+SHIFT+I\n羽化CTRL+ALT+D\n六、滤镜\n上次滤镜操作CTRL+F\n七、视图\n校验颜色CTRL+Y\n色域警告CTRL+SHIFT+Y\n放大CTRL++\n缩小CTRL+-\n满画布显示CTRL+0\n实际像素CTRL+ALT+0\n显示附加CTRL+H\n显示网格CTRL+ALT+'\n显示标尺CTRL+R\n启用对齐CTRL+；\n琐定参考线CTRL+ALT+；\n八、窗口\n关闭全部CTRL+SHIFT+W\n九、帮助\n目录F1\n矩形、椭圆选框工具【M】\n裁剪工具【C】\n移动工具【V】\n套索、多边形套索、磁性套索【L】\n魔棒工具【W】\n喷枪工具【J】\n画笔工具【B】\n像皮图章、图案图章【S】\n历史记录画笔工具【Y】\n像皮擦工具【E】\n铅笔、直线工具【N】\n模糊、锐化、涂抹工具【R】\n减淡、加深、海棉工具【O】\n钢笔、自由钢笔、磁性钢笔【P】\n添加锚点工具【+】\n删除锚点工具【-】\n直接选取工具【A】\n文字、文字蒙板、直排文字、直排文字蒙板【T】\n度量工具【U】\n直线渐变、径向渐变、对称渐变、角度渐变、菱形渐变【G】\n油漆桶工具【K】\n吸管、颜色取样器【I】\n抓手工具【H】\n缩放工具【Z】\n默认前景色和背景色【D】\n切换前景色和背景色【X】\n切换标准模式和快速蒙板模式【Q】\n标准屏幕模式、带有菜单栏的全屏模式、全屏模式【F】\n临时使用移动工具【Ctrl】\n临时使用吸色工具【Alt】\n临时使用抓手工具【空格】\n打开工具选项面板【Enter】\n快速输入工具选项(当前工具选项面板中至少有一个可调节数字):【0】至【9】\n循环选择画笔【[】或【]】\n选择第一个画笔【Shift】+【[】\n选择最后一个画笔【Shift】+【]】\n建立新渐变(在”渐变编辑器”中)【Ctrl】+【N】\n文件操作\n新建图形文件【Ctrl】+【N】\n用默认设置创建新文件【Ctrl】+【Alt】+【N】\n打开已有的图像【Ctrl】+【O】\n打开为\u0026hellip;【Ctrl】+【Alt】+【O】\n关闭当前图像【Ctrl】+【W】\n保存当前图像【Ctrl】+【S】\n另存为\u0026hellip;【Ctrl】+【Shift】+【S】\n存储副本【Ctrl】+【Alt】+【S】\n页面设置【Ctrl】+【Shift】+【P】\n打印【Ctrl】+【P】\n打开“预置”对话框【Ctrl】+【K】\n显示最后一次显示的“预置”对话框【Alt】+【Ctrl】+【K】\n设置“常规”选项(在预置对话框中)【Ctrl】+【1】\n设置“存储文件”(在预置对话框中)【Ctrl】+【2】\n设置“显示和光标”(在预置对话框中)【Ctrl】+【3】\n设置“透明区域与色域”(在预置对话框中)【Ctrl】+【4】\n设置“单位与标尺”(在预置对话框中)【Ctrl】+【5】\n设置“参考线与网格”(在预置对话框中)【Ctrl】+【6】\n设置“增效工具与暂存盘”(在预置对话框中)【Ctrl】+【7】\n设置“内存与图像高速缓存”(在预置对话框中)【Ctrl】+【8】\n编辑操作\n还原/重做前一步操作【Ctrl】+【Z】\n还原两步以上操作【Ctrl】+【Alt】+【Z】\n重做两步以上操作【Ctrl】+【Shift】+【Z】\n剪切选取的图像或路径【Ctrl】+【X】或【F2】\n拷贝选取的图像或路径【Ctrl】+【C】\n合并拷贝【Ctrl】+【Shift】+【C】\n将剪贴板的内容粘到当前图形中【Ctrl】+【V】或【F4】\n将剪贴板的内容粘到选框中【Ctrl】+【Shift】+【V】\n自由变换【Ctrl】+【T】\n应用自由变换(在自由变换模式下)【Enter】\n从中心或对称点开始变换(在自由变换模式下)【Alt】\n限制(在自由变换模式下)【Shift】\n扭曲(在自由变换模式下)【Ctrl】\n取消变形(在自由变换模式下)【Esc】\n自由变换复制的象素数据【Ctrl】+【Shift】+【T】\n再次变换复制的象素数据并建立一个副本:\n【Ctrl】+【Shift】+【Alt】+【T】\n删除选框中的图案或选取的路径【DEL】\n用背景色填充所选区域或整个图层:\n【Ctrl】+【BackSpace】或【Ctrl】+【Del】\n用前景色填充所选区域或整个图层:\n【Alt】+【BackSpace】或【Alt】+【Del】\n弹出“填充”对话框【Shift】+【BackSpace】\n从历史记录中填充【Alt】+【Ctrl】+【Backspace】\n图像调整\n调整色阶【Ctrl】+【L】\n自动调整色阶【Ctrl】+【Shift】+【L】\n打开曲线调整对话框【Ctrl】+【M】\n取消选择所选通道上的所有点(‘曲线’对话框中)【Ctrl】+【D】\n打开“色彩平衡”对话框【Ctrl】+【B】\n打开“色相/饱和度”对话框【Ctrl】+【U】\n全图调整(在色相/饱和度”对话框中)【Ctrl】+【~】\n只调整红色(在色相/饱和度”对话框中)【Ctrl】+【1】\n只调整黄色(在色相/饱和度”对话框中)【Ctrl】+【2】\n只调整绿色(在色相/饱和度”对话框中)【Ctrl】+【3】\n只调整青色(在色相/饱和度”对话框中)【Ctrl】+【4】\n只调整蓝色(在色相/饱和度”对话框中)【Ctrl】+【5】\n只调整洋红(在色相/饱和度”对话框中)【Ctrl】+【6】\n去色【Ctrl】+【Shift】+【U】\n反相【Ctrl】+【I】\n图层操作\n从对话框新建一个图层【Ctrl】+【Shift】+【N】\n以默认选项建立一个新的图层【Ctrl】+【Alt】+【Shift】+【N】\n通过拷贝建立一个图层【Ctrl】+【J】\n通过剪切建立一个图层【Ctrl】+【Shift】+【J】\n与前一图层编组【Ctrl】+【G】\n取消编组【Ctrl】+【Shift】+【G】\n向下合并或合并联接图层【Ctrl】+【E】\n合并可见图层【Ctrl】+【Shift】+【E】\n盖印或盖印联接图层【Ctrl】+【Alt】+【E】\n盖印可见图层【Ctrl】+【Alt】+【Shift】+【E】\n将当前层下移一层【Ctrl】+【[】\n将当前层上移一层【Ctrl】+【]】\n将当前层移到最下面【Ctrl】+【Shift】+【[】\n将当前层移到最上面【Ctrl】+【Shift】+【]】\n激活下一个图层【Alt】+【[】\n激活上一个图层【Alt】+【]】\n激活底部图层【Shift】+【Alt】+【[】\n激活顶部图层【Shift】+【Alt】+【]】\n调整当前图层的透明度(当前工具为无数字参数的,如移动工具):\n【0】至【9】\n保留当前图层的透明区域(开关)【/】\n投影效果(在”效果”对话框中)【Ctrl】+【1】\n内阴影效果(在”效果”对话框中)【Ctrl】+【2】\n外发光效果(在”效果”对话框中)【Ctrl】+【3】\n内发光效果(在”效果”对话框中)【Ctrl】+【4】\n斜面和浮雕效果(在”效果”对话框中)【Ctrl】+【5】\n应用当前所选效果并使参数可调(在”效果”对话框中):\n【A】\n图层混合模式\n循环选择混合模式【Alt】+【-】或【+】\n正常【Ctrl】+【Alt】+【N】\n阈值（位图模式）【Ctrl】+【Alt】+【L】\n溶解【Ctrl】+【Alt】+【I】\n背后【Ctrl】+【Alt】+【Q】\n清除【Ctrl】+【Alt】+【R】\n正片叠底【Ctrl】+【Alt】+【M】\n屏幕【Ctrl】+【Alt】+【S】\n叠加【Ctrl】+【Alt】+【O】\n柔光【Ctrl】+【Alt】+【F】\n强光【Ctrl】+【Alt】+【H】\n颜色减淡【Ctrl】+【Alt】+【D】\n颜色加深【Ctrl】+【Alt】+【B】\n变暗【Ctrl】+【Alt】+【K】\n变亮【Ctrl】+【Alt】+【G】\n差值【Ctrl】+【Alt】+【E】\n排除【Ctrl】+【Alt】+【X】\n色相【Ctrl】+【Alt】+【U】\n饱和度【Ctrl】+【Alt】+【T】\n颜色【Ctrl】+【Alt】+【C】\n光度【Ctrl】+【Alt】+【Y】\n去色海棉工具+【Ctrl】+【Alt】+【J】\n加色海棉工具+【Ctrl】+【Alt】+【A】\n暗调减淡/加深工具+【Ctrl】+【Alt】+【W】\n中间调减淡/加深工具+【Ctrl】+【Alt】+【V】\n高光减淡/加深工具+【Ctrl】+【Alt】+【Z】选择功能\n全部选取【Ctrl】+【A】\n取消选择【Ctrl】+【D】\n重新选择【Ctrl】+【Shift】+【D】\n羽化选择【Ctrl】+【Alt】+【D】\n反向选择【Ctrl】+【Shift】+【I】\n路径变选区数字键盘的【Enter】\n载入选区【Ctrl】+点按图层、路径、通道面板中的缩约图\n按上次的参数再做一次上次的滤镜【Ctrl】+【F】\n退去上次所做滤镜的效果【Ctrl】+【Shift】+【F】\n重复上次所做的滤镜(可调参数):\n【Ctrl】+【Alt】+【F】\n选择工具(在“3D变化”滤镜中)【V】\n立方体工具(在“3D变化”滤镜中)【M】\n球体工具(在“3D变化”滤镜中)【N】\n柱体工具(在“3D变化”滤镜中)【C】\n轨迹球(在“3D变化”滤镜中)【R】\n全景相机工具(在“3D变化”滤镜中)【E】\n视图操作\n显示彩色通道【Ctrl】+【~】\n显示单色通道【Ctrl】+【数字】\n显示复合通道【~】\n以CMYK方式预览(开关)【Ctrl】+【Y】\n打开/关闭色域警告【Ctrl】+【Shift】+【Y】\n放大视图【Ctrl】+【+】\n缩小视图【Ctrl】+【-】\n满画布显示【Ctrl】+【0】\n实际象素显示【Ctrl】+【Alt】+【0】\n向上卷动一屏【PageUp】\n向下卷动一屏【PageDown】\n向左卷动一屏【Ctrl】+【PageUp】\n向右卷动一屏【Ctrl】+【PageDown】\n向上卷动10个单位【Shift】+【PageUp】\n向下卷动10个单位【Shift】+【PageDown】\n向左卷动10个单位【Shift】+【Ctrl】+【PageUp】\n向右卷动10个单位【Shift】+【Ctrl】+【PageDown】\n将视图移到左上角【Home】\n将视图移到右下角【End】\n显示/隐藏选择区域【Ctrl】+【H】\n显示/隐藏路径【Ctrl】+【Shift】+【H】\n显示/隐藏标尺【Ctrl】+【R】\n显示/隐藏参考线【Ctrl】+【;】\n显示/隐藏网格【Ctrl】+【”】\n贴紧参考线【Ctrl】+【Shift】+【;】\n锁定参考线【Ctrl】+【Alt】+【;】\n贴紧网格【Ctrl】+【Shift】+【”】\n显示/隐藏“画笔”面板【F5】\n显示/隐藏“颜色”面板【F6】\n显示/隐藏“图层”面板【F7】\n显示/隐藏“信息”面板【F8】\n显示/隐藏“动作”面板【F9】\n显示/隐藏所有命令面板【TAB】\n显示或隐藏工具箱以外的所有调板【Shift】+【TAB】\n文字处理(在”文字工具”对话框中)\n左对齐或顶对齐【Ctrl】+【Shift】+【L】\n中对齐【Ctrl】+【Shift】+【C】\n右对齐或底对齐【Ctrl】+【Shift】+【R】\n左／右选择1个字符【Shift】+【←】/【→】\n下／上选择1行【Shift】+【↑】/【↓】\n选择所有字符【Ctrl】+【A】\n将所选文本的文字大小减小2点象素【Ctrl】+【Shift】+【\u0026lt;】\n将所选文本的文字大小增大2点象素【Ctrl】+【Shift】+【\u0026gt;】\n将所选文本的文字大小减小10点象素【Ctrl】+【Alt】+【Shift】+【\u0026lt;】\n将所选文本的文字大小增大10点象素【Ctrl】+【Alt】+【Shift】+【\u0026gt;】\n将行距减小2点象素【Alt】+【↓】\n将行距增大2点象素【Alt】+【↑】\n将基线位移减小2点象素【Shift】+【Alt】+【↓】\n将基线位移增加2点象素【Shift】+【Alt】+【↑】\n将字距微调或字距调整减小20/1000ems:\n【Alt】+【←】\n将字距微调或字距调整增加20/1000ems:\n【Alt】+【→】\n将字距微调或字距调整减小100/1000ems:\n【Ctrl】+【Alt】+【←】\n将字距微调或字距调整增加100/1000ems:\n【Ctrl】+【Alt】+【→】\n选择通道中白的像素（包括半色调）:\n【Ctrl】+【Alt】+【1~9】\n","permalink":"https://aming.xyz/post/ps%E5%BF%85%E5%A4%87%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%A7%E5%85%A8%E8%B6%85%E8%AF%A6%E7%BB%86-%E7%9F%A5%E4%B9%8E/","tags":null,"title":"ps必备的快捷键大全（超详细） - 知乎"},{"categories":null,"contents":"穷困，别把自己困住了，别给自己围城，现在是网络时代，很容易与外面交流。\n","permalink":"https://aming.xyz/post/%E7%A9%B7%E5%9B%B0/","tags":null,"title":"穷困"},{"categories":["编程框架"],"contents":"ThinkPHP 是 开源 的Web应用框架，用于快速构建Web应用程序。\nWeb 应用程序（Web Application）是一种通过网络（通常是互联网）访问和使用的软件应用。 与传统的桌面应用程序不同，Web 应用程序在用户的 Web 浏览器中运行，用户可以通过输入 URL 或点击链接来访问它们。这些应用程序在远程服务器上托管，用户通过浏览器与服务器进行交互，从而获取所需的功能和信息。\n主要功能 MVC 架构： ThinkPHP 使用经典的 MVC（Model-View-Controller）设计模式，将应用程序分为数据模型、视图和控制器，以便更好地组织和管理代码。\n路由和 URL 映射： 框架提供了灵活的路由功能，允许开发者定义 URL 和控制器之间的映射关系，从而实现更友好的 URL 结构。\n数据库操作： ThinkPHP 提供了便捷的数据库操作接口，支持多种数据库系统，包括 MySQL、SQLite、Oracle 等，以及使用查询构建器来方便地进行数据库查询。\n模板引擎： 框架内置了模板引擎，帮助开发者将视图和业务逻辑分离，从而更好地管理前端代码。\n安全性： ThinkPHP 提供了一些安全机制，如参数过滤、数据验证和防止 SQL 注入等，帮助开发者编写更安全的代码。\n扩展性： 框架支持模块化开发，允许开发者将应用程序分解为多个独立的模块，从而实现更好的可维护性和扩展性。\n丰富的工具和库： ThinkPHP 提供了许多常用的工具和库，如缓存、日志、认证、上传、图像处理等，减少了开发者在构建应用时的重复劳动。\n","permalink":"https://aming.xyz/post/tp6%E4%BD%BF%E7%94%A8/","tags":null,"title":"TP6使用"},{"categories":["互联网"],"contents":"互联网资源有失效的可能\n视频资源 抠图 pngimg.com removebg. emojidaquan.com 视频素材\nwww.pexels.com\nmoviesoon.com\n33.agilestudio.cn\n辅助下载工具\nidm\ndownkyi\n哔哩哔哩视频下载网页端\n英伟达自带录屏\n图片素材\nunsplash\n花瓣网\n免费抠图\n佐糖抠图\nremove.bg\n包装\n新cg儿\n书生影视网\nlookae\n字体\n音乐\n小森平\n爱给\n网易云F12\n配音\n魔音工坊 收费\n微软ai配音网站 免费\n人声与音乐分离\nezstems\n","permalink":"https://aming.xyz/post/%E4%BA%92%E8%81%94%E7%BD%91%E8%B5%84%E6%BA%90/","tags":null,"title":"互联网资源"},{"categories":["网飞","读书"],"contents":"网飞的自由与责任工作法 提高人才密度 提高公司坦诚度 以积极的态度说出真实的想法 我们不喜欢但需要坦诚 无私的坦诚与不羁的天才 4A 反馈原则 减少管控 ","permalink":"https://aming.xyz/post/%E4%B8%8D%E6%8B%98%E4%B8%80%E6%A0%BC/","tags":null,"title":"《不拘一格》"},{"categories":["框架"],"contents":"jQuery是一个快速、简洁且功能强大的JavaScript库。它是为了简化JavaScript编程而创建的，通过提供简洁的API和跨浏览器兼容性，使开发者能够更轻松地处理HTML文档的操纵、事件处理、动画效果、AJAX交互等任务。\njQuery的设计目标是提供一种简单的方式来处理复杂的JavaScript操作。它封装了许多常见的JavaScript任务，使得开发者能够使用更少的代码来实现相同的功能。通过使用jQuery，开发者可以更快速地开发交互性强的网页和Web应用程序。\n以下是一些jQuery的特点和功能：\nDOM操作：jQuery提供了简洁的API来选择和操作HTML文档中的元素。开发者可以使用CSS选择器来选择元素，并使用jQuery提供的方法来修改元素的样式、内容、属性等。\n事件处理：jQuery简化了事件处理的过程。开发者可以使用jQuery的事件处理方法来绑定事件、触发事件和处理事件。它还提供了方便的方法来处理常见的用户交互事件，如点击、鼠标移动、键盘输入等。\n动画效果：jQuery提供了丰富的动画效果和过渡效果。开发者可以使用jQuery的动画方法来创建平滑的过渡效果，如淡入淡出、滑动、展开收起等。\nAJAX交互：jQuery简化了使用AJAX进行服务器交互的过程。它提供了简单的方法来发送AJAX请求、处理响应数据，并支持各种数据格式如JSON、XML等。\n插件扩展：jQuery拥有一个庞大的插件生态系统，开发者可以使用这些插件来扩展jQuery的功能。这些插件提供了各种各样的功能，如图表绘制、表单验证、轮播图等。\n总之，jQuery是一个流行的JavaScript库，它简化了JavaScript编程的复杂性，提供了丰富的功能和简洁的API，使得开发者能够更高效地开发交互性强的网页和Web应用程序。\n选择器 实例 选取 $(\u0026quot;.intro,.demo\u0026quot;) class 为 \u0026ldquo;intro\u0026rdquo; 或 \u0026ldquo;demo\u0026rdquo; 的所有元素 $(\u0026ldquo;p:first\u0026rdquo;) 整个页面中的第一个 元素 $(\u0026ldquo;p:last\u0026rdquo;) 最后一个 元素 $(\u0026ldquo;tr:even\u0026rdquo;) 所有偶数 元素，索引值从 0 开始，第一个元素是偶数 (0)，第二个元素是奇数 (1)，以此类推。 $(\u0026ldquo;tr:odd\u0026rdquo;) 所有奇数 元素，索引值从 0 开始，第一个元素是偶数 (0)，第二个元素是奇数 (1)，以此类推。 $(\u0026ldquo;p:first-child\u0026rdquo;) 子节点中第一个 元素 $(\u0026ldquo;p:first-of-type\u0026rdquo;) 属于其父元素的第一个 元素的所有 元素 $(\u0026ldquo;p:last-child\u0026rdquo;) 属于其父元素的最后一个子元素的所有 元素 $(\u0026ldquo;p:last-of-type\u0026rdquo;) 属于其父元素的最后一个 元素的所有 元素 $(\u0026ldquo;p:nth-child(2)\u0026rdquo;) 属于其父元素的第二个子元素的所有 元素 $(\u0026ldquo;p:nth-last-child(2)\u0026rdquo;) 属于其父元素的第二个子元素的所有 元素，从最后一个子元素开始计数 $(\u0026ldquo;p:nth-of-type(2)\u0026rdquo;) 属于其父元素的第二个 元素的所有 元素 $(\u0026ldquo;p:nth-last-of-type(2)\u0026rdquo;) 属于其父元素的第二个 元素的所有 元素，从最后一个子元素开始计数 $(\u0026ldquo;p:only-child\u0026rdquo;) 属于其父元素的唯一子元素的所有 元素 $(\u0026ldquo;p:only-of-type\u0026rdquo;) 属于其父元素的特定类型的唯一子元素的所有 元素 $(\u0026ldquo;div \u0026gt; p\u0026rdquo;) 元素的直接子元素的所有 元素 $(\u0026ldquo;div p\u0026rdquo;) 元素的后代的所有 元素 $(\u0026ldquo;div + p\u0026rdquo;) 每个 元素相邻的下一个 元素 $(\u0026ldquo;div ~ p\u0026rdquo;) 元素同级的所有 元素 $(\u0026ldquo;ul li:eq(3)\u0026rdquo;) 列表中的第四个元素（index 值从 0 开始） $(\u0026ldquo;ul li:gt(3)\u0026rdquo;) 列举 index 大于 3 的元素 $(\u0026ldquo;ul li:lt(3)\u0026rdquo;) 列举 index 小于 3 的元素 $(\u0026ldquo;input:not(:empty)\u0026rdquo;) 所有不为空的输入元素 $(\u0026quot;:header\u0026quot;) 所有标题元素 , \u0026hellip; $(\u0026quot;:animated\u0026quot;) 所有动画元素 $(\u0026quot;:focus\u0026quot;) 当前具有焦点的元素 $(\u0026quot;:contains(\u0026lsquo;Hello\u0026rsquo;)\u0026quot;) 所有包含文本 \u0026ldquo;Hello\u0026rdquo; 的元素 $(\u0026ldquo;div:has(p)\u0026rdquo;) 所有包含有 元素在其内的 元素 $(\u0026quot;:empty\u0026quot;) 所有空元素 $(\u0026quot;:parent\u0026quot;) 匹配所有含有子元素或者文本的父元素。 $(\u0026ldquo;p:hidden\u0026rdquo;) 所有隐藏的 元素 $(\u0026ldquo;table:visible\u0026rdquo;) 所有可见的表格 $(\u0026quot;:root\u0026quot;) 文档的根元素 $(\u0026ldquo;p:lang(de)\u0026rdquo;) 所有 lang 属性值为 \u0026ldquo;de\u0026rdquo; 的 元素 $(\u0026quot;[href]\u0026quot;) 所有带有 href 属性的元素 $(\u0026quot;[href=\u0026lsquo;default.htm\u0026rsquo;]\u0026quot;) 所有带有 href 属性且值等于 \u0026ldquo;default.htm\u0026rdquo; 的元素 $(\u0026quot;[href!=\u0026lsquo;default.htm\u0026rsquo;]\u0026quot;) 所有带有 href 属性且值不等于 \u0026ldquo;default.htm\u0026rdquo; 的元素 $(\u0026quot;[href$=\u0026rsquo;.jpg\u0026rsquo;]\u0026quot;) 所有带有 href 属性且值以 \u0026ldquo;.jpg\u0026rdquo; 结尾的元素 $(\u0026quot;[title^=\u0026lsquo;Tom\u0026rsquo;]\u0026quot;) 所有带有 title 属性且值以 \u0026ldquo;Tom\u0026rdquo; 开头的元素 $(\u0026quot;[title~=\u0026lsquo;hello\u0026rsquo;]\u0026quot;) 所有带有 title 属性且值包含单词 \u0026ldquo;hello\u0026rdquo; 的元素 $(\u0026quot;[title*=\u0026lsquo;hello\u0026rsquo;]\u0026quot;) 所有带有 title 属性且值包含字符串 \u0026ldquo;hello\u0026rdquo; 的元素 $(\u0026quot;:input\u0026quot;) 所有 input 元素 $(\u0026quot;:text\u0026quot;) 所有带有 type=\u0026ldquo;text\u0026rdquo; 的 input 元素 $(\u0026quot;:password\u0026quot;) 所有带有 type=\u0026ldquo;password\u0026rdquo; 的 input 元素 $(\u0026quot;:radio\u0026quot;) 所有带有 type=\u0026ldquo;radio\u0026rdquo; 的 input 元素 $(\u0026quot;:checkbox\u0026quot;) 所有带有 type=\u0026ldquo;checkbox\u0026rdquo; 的 input 元素 $(\u0026quot;:submit\u0026quot;) 所有带有 type=\u0026ldquo;submit\u0026rdquo; 的 input 元素 $(\u0026quot;:reset\u0026quot;) 所有带有 type=\u0026ldquo;reset\u0026rdquo; 的 input 元素 $(\u0026quot;:button\u0026quot;) 所有带有 type=\u0026ldquo;button\u0026rdquo; 的 input 元素 $(\u0026quot;:image\u0026quot;) 所有带有 type=\u0026ldquo;image\u0026rdquo; 的 input 元素 $(\u0026quot;:file\u0026quot;) 所有带有 type=\u0026ldquo;file\u0026rdquo; 的 input 元素 $(\u0026quot;:enabled\u0026quot;) 所有启用的元素 $(\u0026quot;:disabled\u0026quot;) 所有禁用的元素 $(\u0026quot;:selected\u0026quot;) 所有选定的下拉列表元素 $(\u0026quot;:checked\u0026quot;) 所有选中的复选框选项 $( \u0026ldquo;p:target\u0026rdquo; ) 选择器将选中ID和URI中一个格式化的标识符相匹配的元素 事件 jQuery 是为事件处理特别设计的。\n页面对不同访问者的响应叫做事件。\n事件处理程序指的是当 HTML 中发生某些事件时所调用的方法。\n常见 DOM 事件：\n鼠标事件 键盘事件 表单事件 文档/窗口事件 click - 点击 keypress - 键被按下 submit - 表单提交 load - 全部加载（1.8已废弃） dbclick - 双击 keydown - 键按下的过程 change - 文本改变 resize - 浏览器窗口大小调试 mouseenter - 鼠标进入 keyup - 键被松开 focus - 获得焦点 scroll - 滚动 mouseleave - 鼠标离开 blur - 失去焦点 unload - 离开页面（1.8已废弃） 效果 隐藏/显示 $(selector).hide(speed,callback);\n$(selector).show(speed,callback); 可选的 speed 参数规定隐藏/显示的速度，可以取以下值：\u0026ldquo;slow\u0026rdquo;、\u0026ldquo;fast\u0026rdquo; 或毫秒。\n可选的 callback 参数是隐藏或显示完成后所执行的函数名称。\ntoggle()\n淡入淡出 fadeIn()\nfadeOut()\nfadeToggle()\nfadeTo()\n$(\u0026quot;#div2\u0026quot;).fadeIn(\u0026ldquo;slow\u0026rdquo;);\n$(\u0026quot;#div3\u0026quot;).fadeIn(3000);\n渐变：$(selector).fadeTo(speed,opacity,callback); speed：速度 opacity：透明度 callback：回调函数 滑动 语法：\n$(selector).slideDown(speed,callback); $(selector).slideUp(speed,callback); $(selector).slideToggle(speed,callback); speed：时间 callback：回调函数 动画 $(selector).animate({params},speed,callback); params：css 属性（键值对形式，-号替换为驼峰 → border-radius=borderRadius:'15px'） speed：时间 callback：回调函数 操作：\n能操作单个属性 能操作多个属性 值能使用相对值（+=、-=） 属性值能为\u0026quot;show\u0026quot;、\u0026ldquo;hide\u0026rdquo; 或 \u0026ldquo;toggle\u0026quot;等 编写多个animate能使用队列功能 捕获 text()：捕获文本 html()：捕获HTML val()：捕获表单文本值 attr()：捕获属性值 添加元素 append() - 在被选的元素的结尾插入内容 prepend() - 在被选的元素的开头插入内容 after() - 在被选元素之后插入内容 before() - 在被选元素之前插入内容 删除元素 remove() - 删除被选元素（及其子元素）（可附加参数） empty() - 从被选元素中删除子元素 类 addClass() - 向被选元素添加一个类或多个类 removeClass() - 从被选元素删除一个或多个类 toggleClass() - 对被选元素进行添加/删除类的切换操作 css() - 设置或返回样式属性 尺寸 width() - 元素宽度 height() - 元素高度 innerWidth() - padding+元素 宽度 innerHeight() - padding+元素 高度 outerWidth() - border+padding+元素 宽度 outerHeight() - border+padding+元素 高度 祖先选择器 parent() - 上一级父元素 parents() - 上至html标签 parentsUntil() - 介于目前元素与选择元素之间的所有标签。 后代选择器 children() - 所选元素的所有直接子元素 find() - 找到符合条件的子元素 同胞选择器 siblings() - 被选元素的所有同胞元素 next() - 被选元素的下一个元素 nextAll() - 被选元素的下面所有元素 nextUntil() - 被选元素到后面指定元素中间的所有元素 prev() - 被选元素的前一个元素 prevAll() - 被选元素的前面所有元素 prevUntil() - 被选元素到前面指定元素中间的所有元素 过滤选择器 first() - 第一个匹配条件的元素 last() - 最后一个匹配条件的元素 eq() - 符合索引号的元素 filter() - 匹配filter里条件的元素 not() - 去掉not里符合条件的元素后的其他元素 请求 load 语法：$(selector).load(URL,data,callback);\nURL：请求加载的URL data：查询字符串键值对集合 callback：load() 方法完成后所执行的函数名称 responseTxt - 包含调用成功时的结果内容 statusTxt - 包含调用的状态 xhr - 包含XMLHttpRequest对象 get/post get - 从指定的资源请求数据\npost - 向指定的资源提交要处理的数据\n语法：\n$.get(URL,callback); URL：请求的 URL callback：请求成功后所执行的函数名 Ajax 1 2 3 4 5 6 7 8 9 10 11 12 13 14 $.ajax({ url: host + \u0026#39;/addressInfo\u0026#39;, type: \u0026#39;get\u0026#39;, dataType: \u0026#39;json\u0026#39;, data: { addressName: $serA } }).done(function (res) { console.log(res); }).fail(function () { console.log(\u0026#34;error\u0026#34;); }).always(function () { console.log(\u0026#34;complete\u0026#34;); }); 或\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 $.ajax({ url: host + \u0026#39;/olduser/up\u0026#39;, type: \u0026#39;get\u0026#39;, dataType: \u0026#39;json\u0026#39;, data: { userName: $(\u0026#34;#search-name\u0026#34;).val(), adsl: $(\u0026#34;#search-id\u0026#34;).val() }, success:function(res){ if(res.code == 0) { \u0026#34;#search-name\u0026#34;).val()) + \u0026#34;\u0026amp;adsl=\u0026#34; + escape($(\u0026#34;#search-id\u0026#34;).val()); } else { alert(res.msg); } } }) JSONP 跨域读取数据，请用 JSONP。\n注意：JSONP 与 Ajax 没任何关系！JSONP 是利用 script 标签来 get 到被包裹的 json 数据。\n1 2 3 4 5 6 7 8 9 10 11 $.getJSON(\u0026#34;http://www.runoob.com/try/ajax/jsonp.php?jsoncallback=?\u0026#34;, function (data) { var html = \u0026#39;\u0026lt;ul\u0026gt;\u0026#39;; for (var i = 0; i \u0026lt; data.length; i++) { html += \u0026#39;\u0026lt;li\u0026gt;\u0026#39; + data[i] + \u0026#39;\u0026lt;/li\u0026gt;\u0026#39;; } html += \u0026#39;\u0026lt;/ul\u0026gt;\u0026#39;; $(\u0026#39;#divCustomers\u0026#39;).html(html); }); 插件扩展 jQuery Validate 说明：jQuery Validate是在jQuery基础上扩展的为表单提供验证功能的插件。\nJQuery Accordion 说明：jQuery Accordion插件用于创建折叠菜单\njQuery Autocomplete 说明：jQuery Autocomplete插件根据用户输入值进行搜索和过滤\njQuery Growl 说明：jQuery Growl用户做消息提醒\njQuery Password Validation 说明：jQuery Password Validation 在jQuery Validation 的基础上扩展，专门对密码进行验证\n","permalink":"https://aming.xyz/post/jquery%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","tags":null,"title":"JQuery使用方法"},{"categories":["编程"],"contents":"给HTML 元素着色\n语法： 元素选择器 『着色属性』\n选择符 标签选择器 属性选择器 代码 说明 [attribute=\u0026ldquo;value\u0026rdquo;] attribute值是value [attribute~=\u0026ldquo;value\u0026rdquo;] 有一个是value [attribute |= \u0026ldquo;value\u0026rdquo;] 是value或以value-开头的字符串 [attribute^=\u0026ldquo;value\u0026rdquo;] 最前是value [attribute$=\u0026ldquo;value\u0026rdquo;] 最后是value [attribute*=\u0026ldquo;value\u0026rdquo;] value出现过至少一次 位置选择器 符号 说明 A \u0026gt; B 子代选择器，选择A下一层的元素B A ~ B 兄弟选择器，选择与A同层的元素B A + B 相邻兄弟选择器，选择与A相邻的元素B A B 后代选择器，包含选择符 其他 符号 说明 :link 选择所有未访问链接 :visited\ta:visited 选择所有访问过的链接 :active\ta:active 选择正在活动链接 :hover\ta:hover 把鼠标放在链接上的状态 :focus\tinput:focus 选择元素输入后具有焦点 :first-letter 元素的第一个字母 :first-line 元素的第一行 :first-child 选择器匹配属于元素的第一个子元素 :before 在元素之前插入内容 :after 在元素之后插入内容 :lang(language) 为元素的 lang 属性选择一个开始值 :nth-child 第几个，从1开始 :nth-child(an+b)或 :nth-child(n) :not() 排除 页面布局 浮动布局\n纵向对齐: align-items 横向对齐 justify-content (单行) 横向对齐 align-content( 多行 ) 元素 扩展: flex-grow 收缩: flex-shrink 基础长度: flex-basis 兼容 浏览器特殊前缀 -o- Opera -webkit- safari 和 chrome -moz- mozilla 增强某样式的权重 !important 单位 绝对长度(不推荐) cm,mm,in 相对长度 px,em(字体大小) , rem(根元素字体大小),%,vw(视口宽度1%),vh 1 in=2.54cm=25.4mm=72pt=6pc=96px。\n页面元素着色 边框 margin (外边框) border (边框) padding (内边框) width (最里面) 默认这些都在 width(宽度的外面)\n1 2 3 4 5 -webkit-box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -o-box-sizing: border-box; box-sizing: border-box; 使 width ,height 包含 padding,border 边框\n- 边框图像（border-image）\r* border-image-source //背景图片源\r* border-image-slice //图片边框内偏移\r* border-image-width //图片边框的宽度\r* border-image-outset //边框图像区域超出边框的量\r* border-image-repeat //边框是否适应平铺(repeated)、铺满(rounded)、拉伸(stretched)\r- 投影（border-shadow）\r- 圆角（border-radius）\r- border-top-left-radius:10px;\r- border-top-right-radius:10px;\r- border-bottom-right-radius:10px;\r- border-bottom-left-radius:10px;\r盒倒影 box-reflect\nbox-reflect：none , direction offset, mask-box-image - direction (above | below | left | right) - offset (length | percentage) - mask-box-image (none | url | linear-gradient | radial-gradient | repeating-linear-gradient | repeating-radial-gradient)\n-webkit-box-reflect:below 0 -webkit-linear-gradient(transparent,transparent 50%,rgba(255,255,255,.3));\r背景 background-color background-image:url(\u0026rsquo;') 渐变背景 background-image: linear-gradient(direction, color-stop1, color-stop2, \u0026hellip;);\n1 2 3 4 5 6 7 8 /* 从上到下，蓝色渐变到红色 */ linear-gradient(blue, red); /* 渐变轴为45度，从蓝色渐变到红色 */ linear-gradient(45deg, blue, red); /* 从右下到左上、从蓝色渐变到红色 */ linear-gradient(to left top, blue, red); /* 从下到上，从蓝色开始渐变、到高度40%位置是绿色渐变开始、最后以红色结束 */ linear-gradient(0deg, blue, green 40%, red); 1 2 3 4 5 6 7 8 9 body{ width: 100%; height: 100vh; background: #63c0e1; background: linear-gradient(-150deg, #4ad8c3, #83a2f1); display: flex; justify-content: center; align-items:center; } 多背景 background: url() left top no-repeat ,url() right bottom no-repeat;\n遮罩 mask-box-image:url() 75 stretch; mask-image: linear-gradient(left, rgba(209, 36, 36, 0), rgba(33, 30, 30, 0) 30%);\n文本 内容排列 text-align 不光是文字排列 (left,right,center,word-spacing ,letter-spacing) line-height 行高 文本装饰 text-decoration underline(下划线) overline(上划线) line-through(穿过线) blink(闪烁)\tinherit 字体 font-family 字型 font-family: Times, Times New Roman, Georgia, serif; 字体大小 font-size 颜色 color (rgb、rgba，hsla) hsl(127,80%,80%) 透明度 opacity: 0.6; 字符转换 text-transform (uppercase , lowercase, capitalize) 粗细、样式、拉伸和装饰(font-weight / font-style / font-stretch / text-decoration) 行间距(line-height)、字母间距(letter-spacing)和单词间距(word-spacing) 对齐 (text-align)方式 缩进 (text-indent) 链接样式（:link / :visited / :active / :hover） 阴影效果 - text-shadow: 水平偏移 垂直偏移 [模糊半径][颜色] 首字母和首行文本(:first-letter / :first-line) 响应用户 换行模式 white-space (nowrap 不换行, normal 换行) word-break: break-all box-shadow: 10px 10px 5px #888888; box-shadow: h-shadow v-shadow blur spread color inset; 值 描述 h-shadow 必需。水平阴影的位置。允许负值。 v-shadow 必需。垂直阴影的位置。允许负值。 blur 可选。模糊距离。 spread 可选。阴影的尺寸。 color 可选。阴影的颜色。请参阅 CSS 颜色值。 inset 可选。将外部阴影 (outset) 改为内部阴影。 链接 a:link 普通的、未被访问的链接 a:visited 用户已访问的链接 a:hover -鼠标指针位于链接的上方 a:active 链接被点击的时刻 列表 列表的项目符号 list-style 表格的边框和背景 border-collapse 列表橫向顯示 display:none 图像 控制图像的大小（display: inline-block） 对齐图像 背景图像（background / background-image / background-repeat / background-position） 定位 position - 普通流 默认\r- 相对定位 relative 相对于原来所在的位置进行定位，元素占有空间\r- 绝对定位 absolute 相对于原来所在的位置进行定位, 元素没有空间\r- 固定定位 fixed\r- 浮动元素（float / clear） 左右浮动\r定位方式\ntop 距窗口顶部距离 right bottom left overflow 溢出 vertical-align 垂直对齐 z-index 堆叠顺序 解决子div设float后导致父div无法自动撑开(常用2种)\n原因：内部的DIV因为float:left之后，就丢失了clear:both和display:block的样式，所以外部的DIV不会被撑开。\n1)直接给父div设置 \u0026ldquo;display: inline-block;\u0026rdquo; 2)在最后添加一个 div 用来清除浮动 \u0026lt;div style=\u0026quot;clear:both;\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; 弹性布局 flexbox 任何一个容器都可以指定为 Flex 布局\n1 2 3 .box{ display: flex; } 行内元素也可以使用 Flex 布局。\n1 2 3 .box{ display: inline-flex; } Webkit 内核的浏览器，必须加上 =-webkit=前缀。\n1 2 3 4 .box{ display: -webkit-flex; /* Safari */ display: flex; } 容器的属性 以下6个属性设置在容器上。\nflex-direction 排列方向 row (默认)| row-reverse | column | column-reverse; flex-wrap 截断方式 nowrap | wrap 第一行在上方| wrap-reverse 第一行在下方 flex-flow flex-direction和 flex-wrap的简写形式 justify-content 对齐方式 flex-start | flex-end | center | space-between | space-around align-items 逆向轴对齐方式 flex-start | flex-end | center | baseline | stretch; align-content 定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。 align-content: flex-start | flex-end | center | space-between | space-around | stretch; 项目属性 order 定义项目的排列顺序。数值越小，排列越靠前，默认为0 flex-grow 放大比例 如果存在剩余空间，也不放大 flex-shrink 缩小比例，默认为1，即如果空间不足，该项目将缩小 flex-basis flex flex是 flex-grow, flex-shrink 和 flex-basis的简写，默认值为 (0 1 auto) align-self 允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items align-self: auto | flex-start | flex-end | center | baseline | stretch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /* 设置 Flex 模式 */ display: flex; /* 决定元素是横排还是竖着排，要不要倒序 */ flex-direction: column; /* 决定元素换行格式，一行排不下的时候如何排 */ flex-wrap: wrap; /* flex-flow = flex-direction + flex-wrap */ flex-flow: column wrap; /* 同一排下对齐方式，空格如何隔开各个元素 */ justify-content: space-between; /* 同一排下元素如何对齐，顶部对齐、中部对齐还是其他 */ align-items: center; /* 多行对齐方式 */ align-content: space-between; 定义要引入的网络字体 (注意版权) 1 2 3 4 @font-face{ font-family:Calibri; src:url(http://www.examples.com/fonts/Calibri.ttf); } 媒体查询 (根据不同设备适配不同样式) 1 2 3 4 5 6 7 8 9 10 11 .my-class { width: 40px; } @media (min-width: 480px) { /* 仅在 480px 或更宽的屏幕上生效的样式规则 */ .my-class { width: 200px; } } 1 2 3 @media all and (min-width: 800px) and (max-width: 1024px) { ...; } 定义变换 transform transform: translate(X,Y) 平移多少位置 rotate() 旋转多少角度 ( 30deg ) 多少圈 (0.5turn 半圈) scale(2,4) 缩放 skew(30deg,20deg) 倾斜 matrix() 需要六个参数，包含数学函数，旋转、缩放、移动以及倾斜 transform-origin 允许你改变被转换元素的位置 过渡效果 动画 div{transition:width 2s;} div:hover{width:300px;}\ntransition-property 规定应用过渡的 CSS 属性的名称 transition-duration 定义过渡效果花费的时间 transition-timing-function 规定过渡效果的时间曲线 transition-delay 规定过渡效果何时开始 高级功能 viewport (视窗) 禁用缩放(手机默认会启用缩放) 1 2 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\u0026#34; /\u0026gt; 设备无关像素(dip device-independent pixel )\nwidth=device-width 可指示网页与屏幕宽度（以设备无关像素为单位）进行匹配。这样，网页就可以重排内容以匹配不同的屏幕尺寸。\n移动优先 当用手机打开网页的时候，默认打开的只是相对比较简单的手机版样式，而复杂一些的桌面版的相应样式都在 media-query 中包裹着，所以不会加载，那么这样页面访问速度是最佳的。 参考下面代码\n.content {\r/* 一些简单的样式，专门为手机而生 */\r}\r@media screen and (min-width: 400px) {\r.content {\r/* 为大屏设备设计的比较复杂的样式 */\r}\r}\r滚动条 用 max-width 代替 width 可以防止窗口太小时出现滚动条\n溢出用省略号 1 2 3 4 5 6 7 /*1.强制在同一行内显示所有文本，直到文本结束或者遭遇br标签对象才换行*/ white-space: nowrap; /* 2. 超出的部分 隐藏*/ overflow: hidden; /* 3. 溢出的部分用省略号替代*/ text-overflow: ellipsis; /* 以上3个步骤一个都不能少*/ CSS中添加 文本内容 content 1 2 3 4 5 6 7 8 9 q { color: #00008B; font-style: italic; } q::before { content: open-quote } q::after { content: close-quote } h1::before { content: \u0026#34;Chapter \u0026#34;; } 灰度 filter: blur(px);模糊度 filter: grayscale(%);灰度 filter: hue-rotate(deg);色相转换 filter: drop-shadow(px px px green);阴影\nselect option 设置样式 1 2 3 4 5 6 7 8 \u0026lt;!-- select外面必须包裹一个div,用来覆盖select原有的样式 --\u0026gt; \u0026lt;div class=\u0026#34;option\u0026#34;\u0026gt; \u0026lt;select name=\u0026#34;\u0026#34;\u0026gt; \u0026lt;option value=\u0026#34; \u0026#34;\u0026gt;筛选实验类型\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;实验1\u0026#34;\u0026gt;实验1\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;实验2\u0026#34;\u0026gt;实验2\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 .option{ /*用div的样式代替select的样式*/ margin: 100px; width: 140px; height: 40px; /*border-radius: 5px;*/ /*盒子阴影修饰作用,自己随意*/ /* box-shadow: 0 0 5px #ccc;*/ border: 1px solid #cccccc; position: relative; } .option select{ /*清除select的边框样式*/ border: none; /*清除select聚焦时候的边框颜色*/ outline: none; /*将select的宽高等于div的宽高*/ width: 100%; height: 40px; line-height: 40px; /*隐藏select的下拉图标*/ appearance: none; -webkit-appearance: none; -moz-appearance: none; /*通过padding-left的值让文字居中*/ padding-left: 20px; } /*使用伪类给select添加自己想用的图标*/ .option:after{ content: \u0026#34;\u0026#34;; width: 14px; height: 8px; background: url(../assets/arrow-down.png) no-repeat center; /*通过定位将图标放在合适的位置*/ position: absolute; right: 20px; top: 41%; /*给自定义的图标实现点击下来功能*/ pointer-events: none; } 颜色 颜色名\r十六进制颜色值\r颜色\rAliceBlue\u0026nbsp;\r#F0F8FF\r\u0026nbsp;\rAntiqueWhite\u0026nbsp;\r#FAEBD7\r\u0026nbsp;\rAqua\u0026nbsp;\r#00FFFF\r\u0026nbsp;\rAquamarine\u0026nbsp;\r#7FFFD4\r\u0026nbsp;\rAzure\u0026nbsp;\r#F0FFFF\r\u0026nbsp;\rBeige\u0026nbsp;\r#F5F5DC\r\u0026nbsp;\rBisque\u0026nbsp;\r#FFE4C4\r\u0026nbsp;\rBlack\u0026nbsp;\r#000000\r\u0026nbsp;\rBlanchedAlmond\u0026nbsp;\r#FFEBCD\r\u0026nbsp;\rBlue\u0026nbsp;\r#0000FF\r\u0026nbsp;\rBlueViolet\u0026nbsp;\r#8A2BE2\r\u0026nbsp;\rBrown\u0026nbsp;\r#A52A2A\r\u0026nbsp;\rBurlyWood\u0026nbsp;\r#DEB887\r\u0026nbsp;\rCadetBlue\u0026nbsp;\r#5F9EA0\r\u0026nbsp;\rChartreuse\u0026nbsp;\r#7FFF00\r\u0026nbsp;\rChocolate\u0026nbsp;\r#D2691E\r\u0026nbsp;\rCoral\u0026nbsp;\r#FF7F50\r\u0026nbsp;\rCornflowerBlue\u0026nbsp;\r#6495ED\r\u0026nbsp;\rCornsilk\u0026nbsp;\r#FFF8DC\r\u0026nbsp;\rCrimson\u0026nbsp;\r#DC143C\r\u0026nbsp;\rCyan\u0026nbsp;\r#00FFFF\r\u0026nbsp;\rDarkBlue\u0026nbsp;\r#00008B\r\u0026nbsp;\rDarkCyan\u0026nbsp;\r#008B8B\r\u0026nbsp;\rDarkGoldenRod\u0026nbsp;\r#B8860B\r\u0026nbsp;\rDarkGray\u0026nbsp;\r#A9A9A9\r\u0026nbsp;\rDarkGreen\u0026nbsp;\r#006400\r\u0026nbsp;\rDarkKhaki\u0026nbsp;\r#BDB76B\r\u0026nbsp;\rDarkMagenta\u0026nbsp;\r#8B008B\r\u0026nbsp;\rDarkOliveGreen\u0026nbsp;\r#556B2F\r\u0026nbsp;\rDarkorange\u0026nbsp;\r#FF8C00\r\u0026nbsp;\rDarkOrchid\u0026nbsp;\r#9932CC\r\u0026nbsp;\rDarkRed\u0026nbsp;\r#8B0000\r\u0026nbsp;\rDarkSalmon\u0026nbsp;\r#E9967A\r\u0026nbsp;\rDarkSeaGreen\u0026nbsp;\r#8FBC8F\r\u0026nbsp;\rDarkSlateBlue\u0026nbsp;\r#483D8B\r\u0026nbsp;\rDarkSlateGray\u0026nbsp;\r#2F4F4F\r\u0026nbsp;\rDarkTurquoise\u0026nbsp;\r#00CED1\r\u0026nbsp;\rDarkViolet\u0026nbsp;\r#9400D3\r\u0026nbsp;\rDeepPink\u0026nbsp;\r#FF1493\r\u0026nbsp;\rDeepSkyBlue\u0026nbsp;\r#00BFFF\r\u0026nbsp;\rDimGray\u0026nbsp;\r#696969\r\u0026nbsp;\rDodgerBlue\u0026nbsp;\r#1E90FF\r\u0026nbsp;\rFeldspar\u0026nbsp;\r#D19275\r\u0026nbsp;\rFireBrick\u0026nbsp;\r#B22222\r\u0026nbsp;\rFloralWhite\u0026nbsp;\r#FFFAF0\r\u0026nbsp;\rForestGreen\u0026nbsp;\r#228B22\r\u0026nbsp;\rFuchsia\u0026nbsp;\r#FF00FF\r\u0026nbsp;\rGainsboro\u0026nbsp;\r#DCDCDC\r\u0026nbsp;\rGhostWhite\u0026nbsp;\r#F8F8FF\r\u0026nbsp;\rGold\u0026nbsp;\r#FFD700\r\u0026nbsp;\rGoldenRod\u0026nbsp;\r#DAA520\r\u0026nbsp;\rGray\u0026nbsp;\r#808080\r\u0026nbsp;\rGreen\u0026nbsp;\r#008000\r\u0026nbsp;\rGreenYellow\u0026nbsp;\r#ADFF2F\r\u0026nbsp;\rHoneyDew\u0026nbsp;\r#F0FFF0\r\u0026nbsp;\rHotPink\u0026nbsp;\r#FF69B4\r\u0026nbsp;\rIndianRed \u0026nbsp;\r#CD5C5C\r\u0026nbsp;\rIndigo \u0026nbsp;\r#4B0082\r\u0026nbsp;\rIvory\u0026nbsp;\r#FFFFF0\r\u0026nbsp;\rKhaki\u0026nbsp;\r#F0E68C\r\u0026nbsp;\rLavender\u0026nbsp;\r#E6E6FA\r\u0026nbsp;\rLavenderBlush\u0026nbsp;\r#FFF0F5\r\u0026nbsp;\rLawnGreen\u0026nbsp;\r#7CFC00\r\u0026nbsp;\rLemonChiffon\u0026nbsp;\r#FFFACD\r\u0026nbsp;\rLightBlue\u0026nbsp;\r#ADD8E6\r\u0026nbsp;\rLightCoral\u0026nbsp;\r#F08080\r\u0026nbsp;\rLightCyan\u0026nbsp;\r#E0FFFF\r\u0026nbsp;\rLightGoldenRodYellow\u0026nbsp;\r#FAFAD2\r\u0026nbsp;\rLightGrey\u0026nbsp;\r#D3D3D3\r\u0026nbsp;\rLightGreen\u0026nbsp;\r#90EE90\r\u0026nbsp;\rLightPink\u0026nbsp;\r#FFB6C1\r\u0026nbsp;\rLightSalmon\u0026nbsp;\r#FFA07A\r\u0026nbsp;\rLightSeaGreen\u0026nbsp;\r#20B2AA\r\u0026nbsp;\rLightSkyBlue\u0026nbsp;\r#87CEFA\r\u0026nbsp;\rLightSlateBlue\u0026nbsp;\r#8470FF\r\u0026nbsp;\rLightSlateGray\u0026nbsp;\r#778899\r\u0026nbsp;\rLightSteelBlue\u0026nbsp;\r#B0C4DE\r\u0026nbsp;\rLightYellow\u0026nbsp;\r#FFFFE0\r\u0026nbsp;\rLime\u0026nbsp;\r#00FF00\r\u0026nbsp;\rLimeGreen\u0026nbsp;\r#32CD32\r\u0026nbsp;\rLinen\u0026nbsp;\r#FAF0E6\r\u0026nbsp;\rMagenta\u0026nbsp;\r#FF00FF\r\u0026nbsp;\rMaroon\u0026nbsp;\r#800000\r\u0026nbsp;\rMediumAquaMarine\u0026nbsp;\r#66CDAA\r\u0026nbsp;\rMediumBlue\u0026nbsp;\r#0000CD\r\u0026nbsp;\rMediumOrchid\u0026nbsp;\r#BA55D3\r\u0026nbsp;\rMediumPurple\u0026nbsp;\r#9370D8\r\u0026nbsp;\rMediumSeaGreen\u0026nbsp;\r#3CB371\r\u0026nbsp;\rMediumSlateBlue\u0026nbsp;\r#7B68EE\r\u0026nbsp;\rMediumSpringGreen\u0026nbsp;\r#00FA9A\r\u0026nbsp;\rMediumTurquoise\u0026nbsp;\r#48D1CC\r\u0026nbsp;\rMediumVioletRed\u0026nbsp;\r#C71585\r\u0026nbsp;\rMidnightBlue\u0026nbsp;\r#191970\r\u0026nbsp;\rMintCream\u0026nbsp;\r#F5FFFA\r\u0026nbsp;\rMistyRose\u0026nbsp;\r#FFE4E1\r\u0026nbsp;\rMoccasin\u0026nbsp;\r#FFE4B5\r\u0026nbsp;\rNavajoWhite\u0026nbsp;\r#FFDEAD\r\u0026nbsp;\rNavy\u0026nbsp;\r#000080\r\u0026nbsp;\rOldLace\u0026nbsp;\r#FDF5E6\r\u0026nbsp;\rOlive\u0026nbsp;\r#808000\r\u0026nbsp;\rOliveDrab\u0026nbsp;\r#6B8E23\r\u0026nbsp;\rOrange\u0026nbsp;\r#FFA500\r\u0026nbsp;\rOrangeRed\u0026nbsp;\r#FF4500\r\u0026nbsp;\rOrchid\u0026nbsp;\r#DA70D6\r\u0026nbsp;\rPaleGoldenRod\u0026nbsp;\r#EEE8AA\r\u0026nbsp;\rPaleGreen\u0026nbsp;\r#98FB98\r\u0026nbsp;\rPaleTurquoise\u0026nbsp;\r#AFEEEE\r\u0026nbsp;\rPaleVioletRed\u0026nbsp;\r#D87093\r\u0026nbsp;\rPapayaWhip\u0026nbsp;\r#FFEFD5\r\u0026nbsp;\rPeachPuff\u0026nbsp;\r#FFDAB9\r\u0026nbsp;\rPeru\u0026nbsp;\r#CD853F\r\u0026nbsp;\rPink\u0026nbsp;\r#FFC0CB\r\u0026nbsp;\rPlum\u0026nbsp;\r#DDA0DD\r\u0026nbsp;\rPowderBlue\u0026nbsp;\r#B0E0E6\r\u0026nbsp;\rPurple\u0026nbsp;\r#800080\r\u0026nbsp;\rRed\u0026nbsp;\r#FF0000\r\u0026nbsp;\rRosyBrown\u0026nbsp;\r#BC8F8F\r\u0026nbsp;\rRoyalBlue\u0026nbsp;\r#4169E1\r\u0026nbsp;\rSaddleBrown\u0026nbsp;\r#8B4513\r\u0026nbsp;\rSalmon\u0026nbsp;\r#FA8072\r\u0026nbsp;\rSandyBrown\u0026nbsp;\r#F4A460\r\u0026nbsp;\rSeaGreen\u0026nbsp;\r#2E8B57\r\u0026nbsp;\rSeaShell\u0026nbsp;\r#FFF5EE\r\u0026nbsp;\rSienna\u0026nbsp;\r#A0522D\r\u0026nbsp;\rSilver\u0026nbsp;\r#C0C0C0\r\u0026nbsp;\rSkyBlue\u0026nbsp;\r#87CEEB\r\u0026nbsp;\rSlateBlue\u0026nbsp;\r#6A5ACD\r\u0026nbsp;\rSlateGray\u0026nbsp;\r#708090\r\u0026nbsp;\rSnow\u0026nbsp;\r#FFFAFA\r\u0026nbsp;\rSpringGreen\u0026nbsp;\r#00FF7F\r\u0026nbsp;\rSteelBlue\u0026nbsp;\r#4682B4\r\u0026nbsp;\rTan\u0026nbsp;\r#D2B48C\r\u0026nbsp;\rTeal\u0026nbsp;\r#008080\r\u0026nbsp;\rThistle\u0026nbsp;\r#D8BFD8\r\u0026nbsp;\rTomato\u0026nbsp;\r#FF6347\r\u0026nbsp;\rTurquoise\u0026nbsp;\r#40E0D0\r\u0026nbsp;\rViolet\u0026nbsp;\r#EE82EE\r\u0026nbsp;\rVioletRed\u0026nbsp;\r#D02090\r\u0026nbsp;\rWheat\u0026nbsp;\r#F5DEB3\r\u0026nbsp;\rWhite\u0026nbsp;\r#FFFFFF\r\u0026nbsp;\rWhiteSmoke\u0026nbsp;\r#F5F5F5\r\u0026nbsp;\rYellow\u0026nbsp;\r#FFFF00\r\u0026nbsp;\rYellowGreen\u0026nbsp;\r#9ACD32\r\u0026nbsp;\r","permalink":"https://aming.xyz/post/%E4%BD%BF%E7%94%A8css%E5%88%9B%E5%BB%BA%E5%9B%BE%E5%BD%A2%E7%BB%84%E4%BB%B6/","tags":null,"title":"使用CSS创建图形组件"},{"categories":["前端"],"contents":"组件 生成Favicon favicon generator (Google) 。 ","permalink":"https://aming.xyz/post/%E5%89%8D%E7%AB%AF%E7%BB%84%E4%BB%B6/","tags":null,"title":"前端组件"},{"categories":["hugo"],"contents":"hugo - hugo builds your site，且提供了自己的网络服务器来构建和服务网站，他会监视文件改动，并自动重新构建。\nhugo list [command] Available Commands:\nall List all posts drafts List all drafts expired List all posts already expired future List all posts dated in the future hugo theme的使用 创建主题 hugo new theme 1 2 3 4 5 6 7 8 9 archetypes layouts partials _default static css js index.html 主页文件 404.html 创建入口文件 layouts/_default/baseof.html ,在这个文件里可以定义网站的基本组成部分，比如 head，main，footer 等等，下面是我主题里这个文件的内容。\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; {{- partial \u0026#34;head.html\u0026#34; . -}} \u0026lt;title\u0026gt;{{ block \u0026#34;title\u0026#34; . }}{{ .Site.Title }}{{ end }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; {{- partial \u0026#34;header.html\u0026#34; . -}} \u0026lt;main class=\u0026#34;container\u0026#34;\u0026gt;{{- block \u0026#34;main\u0026#34; . }} {{- end }}\u0026lt;/main\u0026gt; {{- partial \u0026#34;footer.html\u0026#34; . -}} {{- partial \u0026#34;script.html\u0026#34; . -}} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 调试 Print 大法，简而言之就是在模板中插入如下语句，$. 代表全局上下文。\n{{ printf \u0026ldquo;%#v\u0026rdquo; $.Site }}\n使用统计 Umami 添加搜索 搜索可以迅速定位 头脑中的 认知片段，找到认知结果，所以很方便\n步骤 在 config.toml 做好配置 在 layouts/_default 目录添加 index.json文件 ","permalink":"https://aming.xyz/post/hugo%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","tags":null,"title":"Hugo的使用"},{"categories":["ahk"],"contents":"windows 下使用ahk 设置 i3wm 快捷键\n","permalink":"https://aming.xyz/post/ahk%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","tags":null,"title":"AHK使用方法"},{"categories":["编程"],"contents":"JavaScript基础 类型转换 1 console.log(\u0026#39;A\u0026#39;.charCodeAt()) 内置对象 Array (concat,fill,find,join,indexOf,pop,slice ,shift,sort,splice,resuce) Function( apply,bind,call) JSON Map Math (abs,ceil,floor,pow,round) Number Object RegExp Set String (chatAt ,concat,indexOf,lastIndexOf,search,slice,split,substring,toLowerCase,trim) JavaScript客户端 在客户端，全局变量都在 window 对象里面 JQuery 的实现 实现 $对象的构造方法 class ${ function $() } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class $ { constructor(arg) { const elements = document.querySelectorAll(arg); } click(fn){ for (let i = 0; i \u0026lt; this.length; i++) { this[i].onclick = () =\u0026gt; { fn(); // \u0026#39;回调\u0026#39; } } } 前端组件化 页面 -\u0026gt; 区块 -\u0026gt; 组件 -\u0026gt; 基础 UI 组件\n基础 UI 组件：将常用的逻辑、功能统一封装起来。例如：Table、Input 业务组件：基于【基础 UI 组件】，将功能或者需求类似的有机体封装成一个业务组件，对外暴露接口来实现灵活的可定制性，这样就可以在不同的页面中复用同样的逻辑和功能。例如：基于 Table 和 Input 实现的可输入表格 区块：有些页面会展示同样的区块，这时候可以基于【基础 UI 组件】和【业务组件】再进行一次分装，成为一个独立的区块以便直接复用。例如：基于 Table 和 Input 实现的可输入表格以及其他内容构成的区块 组件库划分：\n通用型组件：按钮 Button、图标 Icon 布局型组件：布局 Grid、布局 Layout 导航型组件：面包屑 Breadcrumb、下拉菜单 Dropdown、菜单 Menu 数据录入型组件：表单 Form、开关 Switch、文件上传 Upload 数据展示型组件：头像 Avator、表格 Table、列表 List 反馈型组件：进度条 Process、抽屉 Drawer、对话框 Modal 其他业务类型 箭头函数 ES6 标准新增了一种新的函数：Arrow Function(箭头函数)。\n为什么叫箭头函数？\n1 x =\u0026gt; x * x; 因为它的定义用的就是一个箭头。上面代码相当于：\n1 2 3 function(x) { return x * x; } 什么时候不能使用箭头函数呢？\n定义对象方法 定义原型方法 定义构造函数 定义事件回调函数 跨域 同源策略 「同源策略」是一个重要的安全策略，它用于限制一个 origin 的文档或者它加载的脚本如何能与另一个源的资源进行交互。它能帮助阻隔恶意文档，减少可能被攻击的媒介。\n如果你违背了同源策略并且没有做跨域优化的话，当你调用接口的时候，会看到如下报错提示：\n1 2 3 XMLHttpRequest cannot load http://www.???.com/. No \u0026#39;Access-Control-Allow-Origin\u0026#39; header is present on the requested resource. Origin \u0026#39;null\u0026#39; is therefore not allowed access. 协议：http:// 域名：www.baidu.com 端口：:80 请求路径：/myfile.html 请求参数：?name=jsliang 锚点：#chapter-one 只有当：\nprotocol（协议）、domain（域名）、port（端口）三者一致，才是同源。 注意 http 可以省略端口 80，而 https 可以省略端口 443。\n跨域限制 跨域只存在于浏览器端，浏览器为 web 提供访问入口，正是这样的开放形态，所以我们需要对他有所限制\n可以在 http 返回头 添加 X-Frame-Options: SAMEORIGIN 防止被别人添加至 iframe。\n解决跨域的方法 CORS\nNode 正向代理\nNginx 反向代理\nJSONP\nWebSocket\n……\n设置 Node 的 res.setHeader('Access-Control-Allow-Origin', '*');\n","permalink":"https://aming.xyz/post/javascript%E6%95%99%E7%A8%8B/","tags":null,"title":"JavaScript教程"},{"categories":["vue"],"contents":"vue 可以挂载界面元素\nnvm NVM, 全名为\u0026quot;Node Version Manager\u0026quot;, 是非常好用的Node版本管理器。\n安装 新建一个页面 做一些简单的变量的渲染 实现页面的跳转 (路由) 实现页面间的参数的传递 (路由) 实现真实的http请求（访问接口) 提交表单 使用一些技巧来让代码层次化（组件） 1 2 3 4 在Vuejs中创建页面需要两步： 1. 新建路由 2. 新建vue页面 使用 载入 1 \u0026lt;script src=\u0026#34;https://cdn.bootcss.com/vue/2.5.21/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; webpack 1 npm i @vue/cli -g 指令 指令决定怎么渲染data里面的数据\nv-text —— 将数据解析为纯文本。另外还可以使用 {{ }}，它也会将数据解析为纯文本，与 v-text 的区别就是花括号在网络加载慢的时候会显示 {{ *** }}。 v-html —— 输出真正的 HTML，在 v-html 中可以使用 HTML 标签，但是请注意防范 XSS 攻击。 v-if —— 通过值 true 或者 false 来 添加/删除标签，一般会结合三元表达式使用。与 v-show 的区别是，v-if 的标签，如果为 false 是直接删掉该节点，而 v-show 是通过 display:none 来控制标签。同时，v-if 与 v-else-if、v-else 可以配套使用。 v-show —— 通过值 true 或者 false 来切换 display 显示/隐藏标签，一般会结合三元表达式。 v-for —— 常见形式：v-for=\u0026quot;(item, index) in items。item 是单个元素，index 是数组下标。其他形式：v-for=\u0026quot;item of items。 v-bind —— 可以通过 v-bind 或者其简写 :bind 绑定到 HTML 的属性字段上，例如 \u0026lt;a\u0026gt; 标签动态绑定 url 的时候 :url 或者自定义属性 :disabled 或者动态绑定 class、style 中使用 :class、style 等…… v-on —— 可以通过 v-on 或者其简写 @ 来绑定到 HTML 事件上，例如点击事件 @click 或者鼠标回车事件 v-on:keyup.enter。v-on 与 methods 是一对搭档。 v-model —— 双向数据绑定。通常与 \u0026lt;input\u0026gt;、\u0026lt;textarea\u0026gt; 及 \u0026lt;select\u0026gt; 进行绑定。 v-once —— 只渲染元素和组件一次。之后重新渲染，该元素及其子元素会被视为静态内容忽略。 数据监听 watch 与 computed：\ncomputed 强调计算。例如 c = a + b，因为你只要显示 c，所以不需要理会 a 与 b 的值是否动态传入，只需要使用 computed 监察 c 即可。 watch 属性强调自身值的变化前后的动作。如果需要完成 c = a + b，那么你需要 watch 数据 a 与 b 的变化，在这两者变化的时候，在方法中执行 c = a + b。 watch 在处理异步操作或者开销较大的操作上有优势。执行异步操作不能串行返回结果、执行开销较大的操作避免堵塞主线程的时候，使用 watch。 简单且串行返回的，使用 computed。 computed 对绑定的值有依赖，如果每次操作的值不变化，则不进行计算，具有缓存特性。 watch 会侦听前后变化的状态，无论操作的值是否变化，都会执行定义的函数体，所以会有 data(newVal, oldVal)。 样式 类型 说明 :class 动态绑定 Class，可以通过多分类：:class=\u0026quot;{ a: true, 'b', c: false }，或者结合计算属性 :class=\u0026quot;computedClass\u0026quot;，或者通过三元表达式：:class=\u0026quot;{ a ? a == 1 : a == 2 }\u0026quot; :style 动态绑定行内样式，如果是 font-size 之类的，最好通过驼峰式 fontSize 来编写。如果采用 :style=\u0026quot;{styleOne, styleTwo}\u0026quot; 的形式，当遇到 transform 时，Vue 会自动添加相应的前缀。 数组操作 改变原数组的方法：\npush() - 向数组尾部添加元素 pop() - 删除并导出数组最后一个元素 shift() - 删除并导出数组第一个元素 unshift() - 向数组开头添加元素 splice() - 向数组中添加/删除元素并返回新的数组 sort() - 排序 reverse() - 反转数组 不改变原数组的方法：\nfilter() - 过滤数组 concat() - 拼接两至多个数组 slice() - 获取数组指定位置数据 不改变原数组的方法比改变原数组的方法高效，至于怎么姿势才爽，那就看个人感受了。\n事件修饰符 .stop - 阻止事件冒泡。例如：@click.stop=\u0026quot;say\u0026quot; 阻止 say 方法传递到上一级 DOM。 .prevent - 阻止默认事件。例如：@click.prevent=\u0026quot;say\u0026quot;，阻止点击事件，然后执行 say。 .capture - 给元素添加监听器，在一个 HTML 模块中，如果有 4 层嵌套，前 2 层使用了 .capture 修饰符，第 3/4 层未使用，点击第 4 层触发点击事件，则顺序为：1 -\u0026gt; 2 -\u0026gt; 4 -\u0026gt; 3，因为 .capture 会先触发。 .self - 只触发该 DOM 本身的事件。相比于 .stop 阻止事件冒泡，.self 忽略事件冒泡和捕获的影响。 .once - 事件将只会触发一次。例如：@click.once='doOnce'，doOnce 只会执行一次。 .passive - 不要阻止事件的默认行为。例如：v-on:scroll.passive=\u0026quot;onScroll\u0026quot;，在进行滚动的时候同时执行 onScroll，而不是等 onScroll 执行完再滚动。 按键修饰符 v-on:keyup.13 = @click.enter\n.enter - 回车 .tab - Tab 键 .delete - Back Space 或者 Delete .esc - Esc 键 .space - 空格键 .up - 上箭头 .down - 下箭头 .left - 左箭头 .right - 右箭头 .ctrl - Ctrl 键 .alt - Alt 键 .shift - Shift 键 父子组件及其通讯 基础组件的写法 全局组件与局部组件 父组件传递数据给子组件 子组件传递数据给父组件 父子组件的 v-model 实现 \u0026lt;slot\u0026gt; - 默认插槽与其具名插槽 :is 的灵活应用 \u0026lt;keep-alive\u0026gt; 缓存状态，避免重新渲染 静态赋值 props：title=\u0026quot;My name is jsliang\u0026quot;；动态赋值 props：:title=\u0026quot;article.title + ' by ' + article.name；props 可以传入 String、Number、Boolean、Array、Object、Date、Function、Symbol 并且对其进行以上类型验证。\n过渡动画 单组件过渡 \u0026lt;transition\u0026gt; 过渡 6 状态：v-enter、v-enter-active、v-enter-to、v-leave、v-leave-active、v-leave-to 过渡系统 + 第三方 CSS 动画库（Animate.css） 过渡时间：:duration 过渡钩子：@:before-enter、@:enter、@:after-enter、@:enter-cancelled、@:before-leave、@:leave、@:after-leave、@:leave-cancelled key 在 \u0026lt;transition\u0026gt; 的作用 过渡模式：in-out 与 out-in 数字过渡 颜色过渡 自定义指令 局部指令：directives 全局指令：Vue.directive 自定义指令钩子函数：bind、inserted、update、componentUpdated、unbind 作用：\nfocus 自动聚焦 过滤器 使用方法：{{ message | messageFilter }}，然后定义 filters: { messageFilter(value) { // ...代码 } }\n局部过滤器 全局过滤器 串联过滤器 Vue Router Vue Router 的基础使用。 动态路由匹配，动态设置匹配路径，动态匹配任意路径。 路由可以嵌套匹配，每个页面都可以有自己的 \u0026lt;router-view\u0026gt;\u0026lt;/router-view\u0026gt;。 编程式导航：不仅可以通过 \u0026lt;router-link :to=\u0026quot;...\u0026quot;\u0026gt;\u0026lt;/router-link\u0026gt; 来定义导航链接，也可以通过 router.push(\u0026quot;...\u0026quot;) 的形式来实现。同时，我们还可以采用 router.replace(\u0026quot;...\u0026quot;) 来实现路由替换，通过 router.go(n) 来实现前进或者后退多少步路由。 命名路由的两种形式：在 \u0026lt;router-link\u0026gt; 中通过 :to=\u0026quot;{name, params}\u0026quot; 或者在 router.push() 中通过 {name, params} 来定义。 一个页面可以同时存在多个 \u0026lt;router-view\u0026gt;，只需要通过给它们命名 name 就可以实现。 路由可以通过 redirect 进行重定向，或者通过 alias 取别名，从而自由地将 UI 结构映射到任意的 URL。 路由还可以进行传参，通过取代与 $route 的耦合或者通过 props 解耦。其中有三种模式：布尔模式、对象模式以及函数模式。 Vue Router 的默认模式是 hash 模式，我们可以通过 mode，将其设置为 history 模式。 通过 router.beforeEach((to, from, next) =\u0026gt; { ... }) 来注册全局路由守卫，它会在访问某个路由前进行拦截。其中 to 为即将进入的目标，from 为当前路由即将离开的位置，next 类似于 Promise 的 resolve。在 2.5+ 版本添加了 router.beforeResolve，作用类似于 router.beforeEach 路由全局后置钩子：router.afterEach((to, from) =\u0026gt; {})。 可以针对某个路由进行守卫，即在 new VueRouter({}) 中通过 beforeEnter: (to, from, next) =\u0026gt; {} 进行守卫。 可以直接在路由组件中定义：beforeRouteEnter、beforeRouteUpdate 以及 beforeRouteLeave。 完整的导航解析流程： 导航被触发。 在失活的组件里调用离开守卫。 调用全局的 beforeEach 守卫。 在重用的组件里调用 beforeRouteUpdate 守卫。 在路由配置里调用 beforeEnter。 解析异步路由组件。 在被激活的组件里调用 beforeRouteEnter。 调用全局的 beforeResolve 守卫。 导航被确认。 调用全局的 afterEach 钩子。 触发 DOM 更新。 用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。 Vue Router 通过定义 meta，可以制定路由鉴权，缓存，标题信息等。 通过给 \u0026lt;router-view\u0026gt; 添加 \u0026lt;transition\u0026gt; 包裹，并给 \u0026lt;transition\u0026gt; 设置不同的 name，则添加过渡效果。同时，可以根据当前路由与目标路由的关系，动态设置过渡效果。 Vue Router 的引用，可以让我们动态设置数据是在导航完成之后获取还是在导航完成之前获取。 路由可以设置滚动行为，在切换到新路由时，可以滚动到顶部或者保持原先的滚动位置。 当路由过多，组件过大的时候，我们应该把不同的路由对应的组件分割成不同的代码块，从而使这些路由被访问的时候才加载对应组件，从而提高加载效率。使用 const Foo = () =\u0026gt; import('./Foo.vue') 即可。同时，这些组件都可以通过 /* webpackChunkName: \u0026quot;***\u0026quot; */ 的形式，进行命名 chunk。 Vue Cli 安装：npm install -g @vue/cli 创建项目：vue create my-project 或者 vue ui 兼容 VueCli 2.0 版本：npm i @vue/cli-init，然后就可以使用 vue init webpack 了。 Vuex 为什么使用 Vuex ？ 数据的综合交错，很容易使代码难以维护。 数据传参非常繁琐，尤其是兄弟组件。 什么情况下使用 Vuex ？ 开发大型应用 数据庞大且繁杂 命名规范 知识点 1. 组件名应该始终是多个单词的，根组件 App 除外。这样做可以避免跟现有的以及未来的 HTML 元素相冲突，因为所有的 HTML 元素名称都是单个单词的。例如：todo-item、TodoItem。\n知识点 2. 只要有能够拼接文件的构建系统，就把每个组件单独分成文件。例如：\n1 2 3 components/ |- TodoList.vue |- TodoItem.vue 知识点 3. 单文件组件的文件名应该要么始终是单词大写开头 PascalCase，要么始终是横线连接 kebab-case。例如：\n1 2 3 4 5 6 7 components/ |- MyComponent.vue 或者 components/ |- my-component.vue 知识点 4. 基础文件名，即应用特定样式和约定的基础组件 (也就是展示类的、无逻辑的或无状态的组件) 应该全部以一个特定的前缀开头，比如 Base、App 或 V。例如：\n1 2 3 4 5 6 7 8 9 10 11 components/ |- BaseButton.vue |- BaseTable.vue |- BaseIcon.vue 或者 components/ |- VButton.vue |- VTable.vue |- VIcon.vue 知识点 5. 如果某个组件，像菜单栏、左侧菜单一样，全局中只拥有一个，那就以 The 前缀命名。例如：\n1 2 3 components/ |- TheHeading.vue |- TheSidebar.vue 知识点 6. 和父组件紧密耦合的子组件应该以父组件名作为前缀命名。例如：\n1 2 3 4 components/ |- TodoList.vue |- TodoListItem.vue |- TodoListItemButton.vue 知识点 7. 组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾；并且组件名应该倾向于完整单词而不是缩写。例如：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 components/ |- SearchButtonClear.vue |- SearchButtonRun.vue |- SearchInputQuery.vue |- SearchInputExcludeGlob.vue |- SettingsCheckboxTerms.vue |- SettingsCheckboxLaunchOnStartup.vue 而不是 components/ |- ClearSearchButton.vue |- ExcFromSearchInput.vue |- LaunchOnStartupCheckbox.vue |- RunSearchButton.vue |- SearchInput.vue |- TermsCheckbox.vue 全局规范 知识点 1. 尽量别在组件模板中使用 JS 来 bb 套太多话语，毕竟 HTML 就尽量让它做 HTML 该有的事；更好的分类能使代码更加简洁易懂；并且将组件模板中多特性的元素分多行来写，看起来会更舒服点。例如：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 |- HTML \u0026lt;img src=\u0026#34;https://vuejs.org/images/logo.png\u0026#34; alt=\u0026#34;Vue Logo\u0026#34; \u0026gt; {{ normalizedFullName }} |- JS // 复杂表达式已经移入一个计算属性 computed: { normalizedFullName: function () { return this.fullName.split(\u0026#39; \u0026#39;).map(function (word) { return word[0].toUpperCase() + word.slice(1) }).join(\u0026#39; \u0026#39;) } } 而不是 |- HTML {{ fullName.split(\u0026#39; \u0026#39;).map(function (word) { return word[0].toUpperCase() + word.slice(1) }).join(\u0026#39; \u0026#39;) }} 知识点 2. 尽可能在 HTML、CSS 中使用双引号（\u0026quot;），在 JS 中使用单引号（\u0026rsquo;）。例如：\n1 2 3 4 5 6 7 8 9 \u0026lt;input type=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;AppSidebar :style=\u0026#34;{ width: sidebarWidth + \u0026#39;px\u0026#39; }\u0026#34;\u0026gt; 而不是 \u0026lt;input type=text\u0026gt; \u0026lt;AppSidebar :style={width:sidebarWidth+\u0026#39;px\u0026#39;}\u0026gt; JS 规划 知识点 1. 组件的 data 必须是一个函数。当在组件中使用 data 属性的时候 (除了 new Vue 外的任何地方)，它的值必须是返回一个对象的函数。例如：\n1 2 3 4 5 data() { return { name: \u0026#39;jsliang\u0026#39; } } 知识点 2. Prop 的定义应该尽量详细，至少指定其类型。并且在声明的时候采用 camelCase，在使用的时候采用 kekab-case。例如：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;WelcomeMessage greeting-text=\u0026#34;hi\u0026#34;/\u0026gt; props: { status: { type: String, required: true, validator: function (value) { return [ \u0026#39;syncing\u0026#39;, \u0026#39;synced\u0026#39;, \u0026#39;version-conflict\u0026#39;, \u0026#39;error\u0026#39; ].indexOf(value) !== -1 } }, greetingText: String } 知识点 3. 总是用 key 配合 v-for。key 的作用：a.key 的特殊属性主要用在 Vue 的虚拟 DOM 算法，在新旧 nodes 对比时辨识 VNodes。b. 在 v-for 中使用 key，方便 Vue 跟踪每个节点，从而重用和重新排序现有元素。例如：\n1 2 3 4 5 6 7 \u0026lt;ul\u0026gt; \u0026lt;li v-for=\u0026#34;item in items\u0026#34; :key=\u0026#34;item.id\u0026#34;\u0026gt;...\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;transition\u0026gt; \u0026lt;span :key=\u0026#34;text\u0026#34;\u0026gt;{{ text }}\u0026lt;/span\u0026gt; \u0026lt;/transition\u0026gt; 知识点 4. 永远不要把 v-if 和 v-for 同时用在同一个元素上。例如：\n1 2 3 4 5 6 7 8 \u0026lt;ul v-if=\u0026#34;shouldShowUsers\u0026#34;\u0026gt; \u0026lt;li v-for=\u0026#34;user in users\u0026#34; :key=\u0026#34;user.id\u0026#34; \u0026gt; {{ user.name }} \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; CSS 规范 知识点 1. 为组件样式设置作用域。给每个组件的 CSS 使用 scoped，避免组件之间的样式互相影响。\n1 2 3 4 5 6 \u0026lt;style module\u0026gt; .button { border: none; border-radius: 2px; } \u0026lt;/style\u0026gt; ","permalink":"https://aming.xyz/post/vue2%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","tags":null,"title":"vue2使用方法"},{"categories":["应用"],"contents":"win10虚拟桌面 win + ctrl + d可以新建虚拟桌面； win + ctrl + ←或→在这些桌面之间切换； win + ctrl + F4关闭此桌面 win + tab显示所有桌面略缩图\n","permalink":"https://aming.xyz/post/windows%E8%99%9A%E6%8B%9F%E6%A1%8C%E9%9D%A2/","tags":null,"title":"Windows虚拟桌面"},{"categories":["健康"],"contents":" 保持皮肤湿润： 使用温和的保湿剂，如润肤霜或乳液，来帮助保持皮肤湿润。在洗完澡后尽快涂抹保湿剂以锁住水分。 保持空气湿度： 使用加湿器来保持室内空气湿度，有助于缓解干燥引起的症状。 ","permalink":"https://aming.xyz/post/%E6%B9%BF%E7%96%B9%E8%B5%84%E6%96%99/","tags":null,"title":"湿疹治疗"},{"categories":["命令行"],"contents":"计算机的基本功能 (用命令说明) 开机，启动计算机系统 开机电源键\n关机，关闭系统 关机电源键或关机命令 shutdown\n执行命令\n列出计算机资源 ls (list)\n显示资源内容 cat ,vi\n删除资源 rm (remove)\n用户管理\n登陆用户 login ,su\n登出，退出登陆 logout\n创建用户 adduser\n删除用户 deluser\n设备管理\n打开设备 open\n读取设备 read\n写入设备 write\n关闭设备 close\n多任务管理\n显示任务 ps (report a snapshot of the current processes 报告当前进程的快照)\n创建新任务 fork\n删除任务 kill\nps命令\n1 ps -A 或 ps -aux 列出所有命令 ","permalink":"https://aming.xyz/post/commandline/","tags":null,"title":"命令行指令"},{"categories":["tech"],"contents":"命令 M-x yas-new-snippet M-x yas-visit-snippet-file 打开片段文件 M-x snippet-mode 语法 1 2 3 4 5 # key: snippet abbrev 代码片段缩写 # name: snippet name 代码段名称,它将显示在菜单中 # condition: snippet condition 则仅当条件代码的计算结果为某个非 nil 值时，才会展开该代码段 # binding: direct keybinding # type: snippet or command 如果 type 指令设置为 command ，则代码段的主体被解释为 Lisp 代码 1 2 3 4 5 6 7 8 9 10 11 # expand-env: ((yas-indent-line \u0026#39;fixed) (yas-wrap-around-region \u0026#39;nil)) 绘图 welcome to my X humble / \\ home, / \\ $0 / \\ /-------\\ | | | +-+ | | | | | +--+-+--+ Template Syntax 模板语法 代码段模板的语法简单但功能强大，与 TextMate 的语法非常相似。\nPlain Text 纯文本 ,除 $ ,` 和 \\ 外的文本会直接输出，需要转义 Embedded Emacs Lisp code elisp 代码写在反引号 （` ） 内 Emacs lisp code\n1 2 `(upcase (file-name-nondirectory (file-name-sans-extension (buffer-file-name))))` ;;文件名大写 ","permalink":"https://aming.xyz/post/%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81%E6%AE%B5/","tags":null,"title":"编写代码片段"},{"categories":["人生"],"contents":"懦弱的性格，客观环境，经济的压力，会使人变得心力憔悴，浑浑噩噩。 下面是一些改变消极心态的建议：\n锻炼身体：锻炼身体能转移注意力，减轻压力，还能增强身体，比学习或无意义的焦虑更容易。\n设立挑战和目标：锻炼好身体，洗个澡，然后可以设立自己的挑战目标进行工作或创造。\n循环，休息。反复循环中要注意休息。\n","permalink":"https://aming.xyz/post/%E5%A6%82%E4%BD%95%E5%8F%98%E5%BE%97%E4%B8%8A%E8%BF%9B/","tags":null,"title":"如何变得上进"},{"categories":["每天一个创意"],"contents":"人，作为一个3维物体，由生物纤维（鸡肉）固定，会一直受到向下的重力影响。\n长时间受到固定的力，人体组织会受不了，所以要变换不同姿势\n坐姿，对书写办公的工作有优势，精神容易集中，相对舒适 半躺，可以减少整个脊柱的疲劳与劳损 睡姿，用于休息 站姿：可以帮助你保持警觉和注意力，提高工作效率。 动姿：用于体力工作或锻炼 ","permalink":"https://aming.xyz/post/%E4%BA%BA%E7%9A%84%E5%A7%BF%E5%8A%BF/","tags":null,"title":"人的姿势有哪些"},{"categories":["情感"],"contents":"两个人的情感出现了裂缝，很难相处的时候。会寻找下一段感情，而有子女牵绊的时候，如何避免孤独。\n佛\n主人公A，B，C\n工人，司机，老师，医生，农民，文员，销售\n买房，抽烟，喝酒，县，市，省\n","permalink":"https://aming.xyz/post/%E5%BD%93%E6%84%9F%E6%83%85%E4%B8%8D%E5%A6%82%E6%84%8F%E7%9A%84%E6%97%B6%E5%80%99/","tags":null,"title":"当感情出现问题的时候"},{"categories":["技术"],"contents":"什么是编程语言 编程语言是：告诉计算机你的想法，计算机按照你的想法处理你所要的功能。\n一个功能用一个程序文件或整个程序文件夹实现\n算法 解压序列赋值给多个变量 现在有一个包含 N 个元素的元组或者是序列,怎样将它里面的值解压后同时赋值给 N 个变量?\n实现对文本的操作功能 一个字符串单字符操作 字符串和数字进行转换 测试对象是否使字符串类型 字符串排序 删除字符串两边空格 合并字符串 字符串倒序（词或字符） 字符串查找 翻译 过滤 检查是否使文本或二进制 实现对文件的操作 时间和money操作 查找和排序 persistence 和 databases 调试并测试功能 进程，线程和同步 系统管理 用户接口 对 XML 格式数据操作 使用网络功能 使用web 功能 distributed (分布式) 编程 编程中的优化 描述数据 数字 123 文字 \u0026ldquo;hello\u0026rdquo; 颜色 东西(对象) (天地万物) 描述系统 操作系统 os 语言系统 sys 目录 path 描述数学 数学 math 三角函数 sin 随机数 random 搜索 正则搜索 re 数据库 数据库 mysql，sql 压缩 zip 打包 tap 进程 Process 多线程 multiprocessing 网络 套接字socket 超文本协议 http ","permalink":"https://aming.xyz/post/python%E7%BC%96%E7%A8%8B/","tags":null,"title":"使用 Python 语法进行编程"},{"categories":[""],"contents":"规划自己的任务 想象自己的需求，找一个参照物 规划在某个时间段完成参照物的某个程度 迅速行动 快速发布 反复迭代 ","permalink":"https://aming.xyz/post/%E5%A6%82%E4%BD%95%E6%9C%89%E6%95%88%E8%A7%84%E5%88%92%E4%BA%8B%E6%83%85/","tags":null,"title":"如何有效规划事情"},{"categories":null,"contents":"联系方式 微信: hanyudeye ","permalink":"https://aming.xyz/about/","tags":null,"title":"关于"},{"categories":["科普"],"contents":" 什么是经济？ 就是值钱的东西，有用的东西 人力也是一种经济 社会分工，机械化也是追求经济效益 货币用来衡量并可交换东西的价值 分享，开放 ，竞争 (竞争能导致物美价廉)能发展经济。 价格波动是价格因生产成本和供求关系(商品数量)而上下涨落的现象 个人生产力的低下导致个人贫穷 经济调节 因为市场有些滞后和未知性，可能造出来的东西太多或者没人用，所以要进行一些经济策略。\n供需(市场) 东西多了就不要造了\n税率 政府用来调节供需的\n","permalink":"https://aming.xyz/post/%E7%BB%8F%E6%B5%8E/","tags":["经济"],"title":"经济"},{"categories":null,"contents":"在 Adobe Photoshop 中，使用键盘快捷键可提高您的工作效率。\n常用的快捷键 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 ~（波形符） 按住 ~（波形符） 取消选择选区 Ctrl + D Cmd + D 撤消上一个命令 Ctrl + Z Command + Z 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 调用搜索体验 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用功能键 | 结果\n| Windows\n| macOS\n启动帮助 F1 帮助键 还原/重做 | |\nF1\n| |\n剪切\n|\nF2\n|\nF2\n| |\n拷贝\n|\nF3\n|\nF3\n| |\n粘贴\n|\nF4\n|\nF4\n| |\n显示/隐藏“画笔”面板\n|\nF5\n|\nF5\n| |\n显示/隐藏“颜色”面板\n|\nF6\n|\nF6\n| |\n显示/隐藏“图层”面板\n|\nF7\n|\nF7\n| |\n显示/隐藏“信息”面板\n|\nF8\n|\nF8\n| |\n显示/隐藏“动作”面板\n|\nF9\n|\nOption + F9\n| |\n恢复\n|\nF12\n|\nF12\n| |\n填充\n|\nShift + F5\n|\nShift + F5\n| |\n羽化选区\n|\nShift + F6\n|\nShift + F6\n| |\n反转选区\n|\nShift + F7\n|\nShift + F7\n|\n在具有多个工具的行中，重复按同一快捷键可以在这组工具中进行切换。\n| 结果\n|\nWindows\n|\nmacOS\n使用同一快捷键循环切换工具\n|\n按住 Shift 并按快捷键（如果选中“使用 Shift 键切换工具”首选项）\n|\n按住 Shift 并按快捷键（如果选中“使用 Shift 键切换工具”首选项）\n| |\n循环切换隐藏的工具\n|\n按住 Alt 键并单击工具（添加锚点、删除锚点和转换点工具除外）\n|\n按住 Option 键并单击工具（添加锚点、删除锚点和转换点工具除外）\n| |\n移动工具\n画板工具\n|\nV\n|\nV\n| |\n矩形选框工具†\n椭圆选框工具\n|\nM\n|\nM\n| |\n套索工具\n多边形套索工具\n磁性套索工具\n|\nL\n|\nL\n| |\n魔棒工具\n快速选择工具\n“对象选择”工具\n|\nW\n|\nW\n| |\n裁剪工具\n切片工具\n切片选取工具\n透视裁剪工具\n|\nC\n|\nC\n| |\n吸管工具†\n颜色取样器工具\n标尺工具\n注释工具\n|\nI\n|\nI\n| | 图框工具 | K | K | |\n污点修复画笔工具\n修复画笔工具\n修补工具\n红眼工具\n内容识别移动工具\n|\nJ\n|\nJ\n| |\n画笔工具\n铅笔工具\n颜色替换工具\n混合器画笔工具\n|\nB\n|\nB\n| |\n仿制图章工具\n图案图章工具\n|\nS\n|\nS\n| |\n历史记录画笔工具\n历史记录艺术画笔工具\n|\nY\n|\nY\n| |\n橡皮擦工具†\n背景橡皮擦工具\n魔术橡皮擦工具\n|\nE\n|\nE\n| |\n渐变工具\n油漆桶工具\n|\nG\n|\nG\n| |\n减淡工具\n加深工具\n海绵工具\n|\nO\n|\nO\n| |\n钢笔工具\n自由钢笔工具\n弯度钢笔工具\n|\nP\n|\nP\n| |\n横排文字工具\n直排文字工具\n横排文字蒙版工具\n直排文字蒙版工具\n|\nT\n|\nT\n| |\n路径选择工具\n直接选择工具\n|\nA\n|\nA\n| |\n矩形工具\n椭圆工具\n多边形工具\n直线工具\n自定形状工具\n|\nU\n|\nU\n| |\n抓手工具†\n|\nH\n|\nH\n| |\n旋转视图工具\n|\nR\n|\nR\n| |\n缩放工具†\n液化\n|\nZ\n|\nZ\n| | 默认前景色/背景色 | D | D | | 切换前景色/背景色 | X | X | | 切换标准/快速蒙版模式 | Q | Q | | 画板工具 | V | V | | 切换保留透明区域 | /（正斜杠） | /（正斜杠） | | 减小画笔硬度 | { | { | | 增加画笔硬度 | } | } | | 渐细画笔 | , | , | | 渐粗画笔 | 。 | 。 | | 最细画笔 | \u0026lt; | \u0026lt; | | 最粗画笔 | \u0026gt; | \u0026gt; | | †“液化”使用同一快捷键 |\n查看图像 此部分列表提供不显示在菜单命令或工具提示中的快捷键。\n| 结果\n|\nWindows\n|\nmacOS\n循环切换打开的文档\n|\nCtrl + Tab\n|\nCtrl + Tab\n| |\n切换到上一文档\n|\nShift + Ctrl + Tab\n|\nShift + Command + `（重音符）\n| |\n在 Photoshop 中关闭文件并打开 Bridge\n|\nShift-Ctrl-W\n|\nShift-Command-W\n| |\n在“标准”模式和“快速蒙版”模式之间切换\n|\nQ\n|\nQ\n| |\n在标准屏幕模式、具有菜单栏的全屏模式和全屏模式之间进行切换（前进）\n|\nF\n|\nF\n| |\n在标准屏幕模式、具有菜单栏的全屏模式和全屏模式之间进行切换（后退）\n|\nShift + F\n|\nShift + F\n| |\n切换（前进）画布颜色\n|\n空格键 + F（或右键单击画布背景并选择颜色）\n|\n空格键 + F（或按住 Ctrl 键并单击画布背景，然后选择颜色）\n| |\n切换（后退）画布颜色\n|\n空格键 + Shift + F\n|\n空格键 + Shift + F\n| |\n将图像限制在窗口中\n|\n双击抓手工具\n|\n双击抓手工具\n| |\n放大 100%\n|\n双击缩放工具或\nCtrl + 1\n|\n双击缩放工具或\nCommand + 1\n| |\n切换到“抓手”工具（当不处于文本编辑模式时）\n|\n空格键\n|\n空格键\n| |\n使用抓手工具同时平移多个文档\n|\n按住 Shift 键拖移\n|\n按住 Shift 键拖移\n| |\n切换到放大工具\n|\nCtrl + 空格键\n|\nCommand + 空格键\n| |\n切换到缩小工具\n|\nAlt + 空格键\n|\nOption + 空格键\n| |\n使用“缩放工具”拖动时移动“缩放”选框\n|\n按住空格键拖移\n|\n按住空格键拖移\n| |\n应用缩放百分比，并使缩放百分比框保持现用状态\n|\n在“导航器”面板中按住 Shift + Enter 以激活缩放百分比框\n|\n在“导航器”面板中按住 Shift + Return 以激活缩放百分比框\n| |\n放大图像中的指定区域\n|\n按住 Ctrl 键并在“导航器”面板的预览中拖移\n|\n按住 Command 键并在“导航器”面板的预览中拖移\n| |\n临时缩放到图像\n|\n按住 H 键，然后在图像中单击，并按住鼠标键。\n|\n按住 H 键，然后在图像中单击，并按住鼠标键。\n| |\n使用抓手工具滚动图像\n|\n按住空格键拖移，或拖移“导航器”面板中的视图区域框\n|\n按住空格键拖移，或拖移“导航器”面板中的视图区域框\n| |\n向上或向下滚动一屏\n|\nPage Up 或 Page Down †\n|\nPage Up 或 Page Down †\n| |\n向上或向下滚动 10 个单位\n|\nShift + Page Up 或 Page Down†\n|\nShift + Page Up 或 Page Down†\n| |\n将视图移动到左上角或右下角\n|\nHome 或 End\n|\nHome 或 End\n| |\n打开/关闭图层蒙版的宝石红显示（必须选定图层蒙版）\n|\n\\(反斜杠)\n|\n\\(反斜杠)\n| |\n†按住 Ctrl 键 (Windows) 或 Command 键 (macOS) 可向左滚动 (Page Up) 或向右滚动 (Page Down)\n|\n使用操控变形 此部分列表提供不显示在菜单命令或工具提示中的快捷键。\n*目前在 Photoshop iPad 版中不可用。\n结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用黑白调整 Shift + Ctrl + Alt + B Shift + Command + Option B 选择全部图钉 Ctrl+A Command + A 取消选择全部图钉 Ctrl + D Command + D 选择多个图钉 按住 Shift 键并单击任意图钉 按住 Shift 键并单击任意图钉 隐藏图钉 按住 H 键可隐藏图钉，松开 H 键可恢复显示图钉 按住 H 键可隐藏图钉，松开 H 键可恢复显示图钉 删除图钉 按住 Alt 键并单击图钉 按住 Option 键并单击图钉 此时将显示一个圆圈，允许您旋转图钉 按 Alt 键可靠近图钉，但不在图钉上方 按 Option 键可靠近图钉，但不在图钉上方 取消扭曲 Esc Esc 使用“选择并遮住” 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 选择并遮住 Ctrl + Alt + R Command + Option + R 定位图层 Ctrl + 2 Command + 2 定位蒙版 Ctrl + \\ \\ 暂时禁用蒙版 按住 Shift 键并单击蒙版 按住 Shift 键并单击蒙版 添加图层蒙版图标以自动隐藏图层（或活动选区）的内容 按住 Alt 键并单击图层蒙版图标 按住 Option 键并单击图层蒙版图标 反转图层蒙版 Control + I Command + I 使用滤镜库 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 在所选筛选条件的顶部应用新滤镜 按住 Alt 键并单击滤镜 按住 Option 键并单击滤镜 将“取消”按钮更改为“默认” 按住 Ctrl 键并单击 按住 Command 键并单击 向前一步 Ctrl + Shift + Z Command + Shift + Z 向后一步 Ctrl + Alt + Z Command + Option + Z 清除刷过的区域 C 反转笔刷蒙版 I 在“确定”/“取消”按钮之间切换以执行“恢复”/“应用”操作 Option 切换模糊视图可见性 P 拍摄快照，在“图层”面板中保存模糊图像的副本，图层堆叠 \u0026lsquo;（撇号） 切换“添加”或“去除”模糊笔刷 “`”重音键 如果有选择，请切换快速蒙版宝石红叠加显示 Shift + Q 反转选区或命令以隐藏选区 Shift + Command + I 确定 - 应用当前效果并关闭对话框 Return 关闭对话框而不保存 Esc 平移快捷键 空格键 切换视图模式 Tab 放大/缩小 Command + 和 - 适屏显示、全屏显示或 100% 显示 Command + 0 和 Command + 1 放大和缩小 Command + 空格键 Option + 空格键\n| | 增加/减小笔刷半径\n| | 打开右括号\n| | 更改笔刷硬度/柔和度\n| | Shift [和 shift]\n| | 显示笔刷面板\n| | 按住 Ctrl 键并单击（在图像上）\n| | 十字线笔刷\n| | 大小写字母转换键 (Caps Lock)\n|\n使用液化滤镜 | 结果\n|\nWindows\n|\nmacOS\n向前变形工具\n|\nW\n|\nW\n| |\n重建工具\n|\nR\n|\nR\n| |\n顺时针旋转扭曲工具\n|\nC\n|\nC\n| |\n褶皱工具\n|\nS\n|\nS\n| |\n膨胀工具\n|\nB\n|\nB\n| |\n左推工具\n|\nO\n|\nO\n| |\n冻结蒙版工具\n|\nF\n|\nF\n| |\n解冻蒙版工具\n|\nD\n|\nD\n| | 平滑工具\n| E\n| E\n| | 脸部工具\n|\n|\n| | 抓手工具\n| H\n| H\n| | 缩放工具\n| Z\n| Z\n| | 液化滤镜\n| Shift + Ctrl + X\n| Shift + Command + X\n| |\n反转“膨胀”、“褶皱”和“左推”工具的方向\n|\n按住 Alt 键并单击工具\n|\n按住 Option 键并单击工具\n| |\n连续不断地对扭曲进行取样\n|\n选中重建工具、“置换”、“扩张”或“关联”模式时，在预览中按住 Alt 键拖移\n|\n使用重建工具并选中“置换”、“扩张”或“关联”模式，在预览中按住 Option 键并拖动\n| |\n将画笔大小减小/增大 2，或者将浓度、压力、比率或湍流抖动减小/增大 1\n|\n“画笔大小”、“浓度”、“压力”、“比率”或“湍流抖动”文本框中的向下箭头/向上箭头†\n|\n“画笔大小”、“浓度”、“压力”、“比率”或“湍流抖动”文本框中的向下箭头/向上箭头†\n| |\n将画笔大小减小/增大 2，或者将浓度、压力、比率或湍流抖动减小/增大 1\n|\n“画笔大小”、“浓度”、“压力”、“比率”或“湍流抖动”滑块显示的向左箭头/向右箭头†\n|\n“画笔大小”、“浓度”、“压力”、“比率”或“湍流抖动”滑块显示的向左箭头/向右箭头†\n| |\n从上到下在右侧循环切换控件\n|\nTab\n|\nTab\n| |\n从下到上在右侧循环切换控件\n|\nShift + Tab\n|\nShift + Tab\n| |\n将“取消”更改为“复位”\n|\nAlt\n|\nOption\n| |\n† 按住 Shift 键可减小/增大 10\n|\n使用消失点 | 结果\n|\nWindows\n|\nmacOS\n缩放两倍（临时）\n|\nX\n|\nX\n| |\n放大\n|\nCtrl + +（加号）\n|\nCommand + +（加号）\n| |\n缩小\n|\nCtrl + -（连字符）\n|\nCommand + -（连字符）\n| |\n符合视图大小\n|\nCtrl + 0（零）、双击抓手工具\n|\nCommand + 0（零）、双击抓手工具\n| |\n按 100% 的比例缩放到中心\n|\n双击缩放工具\n|\n双击缩放工具\n| |\n增加画笔大小（画笔工具、图章工具）\n|\n]\n|\n]\n| |\n减小画笔大小（画笔工具、图章工具）\n|\n[\n|\n[\n| |\n增加画笔硬度（画笔工具、图章工具）\n|\nShift + ]\n|\nShift + ]\n| |\n减小画笔硬度（画笔工具、图章工具）\n|\nShift + [\n|\nShift + [\n| |\n还原上一动作\n|\nCtrl + Z\n|\nCommand + Z\n| |\n重做上一动作\n|\nCtrl + Shift + Z\n|\nCommand + Shift + Z\n| |\n全部取消选择\n|\nCtrl + D\n|\nCommand + D\n| |\n隐藏选区和平面\n|\nCtrl + H\n|\nCommand + H\n| |\n将选区移动 1 个像素\n|\n箭头键\n|\n箭头键\n| |\n将选区移动 10 个像素\n|\nShift + 箭头键\n|\nShift + 箭头键\n| |\n拷贝\n|\nCtrl + C\n|\nCommand + C\n| |\n粘贴\n|\nCtrl + V\n|\nCommand + V\n| |\n重复上一个副本并移动\n|\nCtrl + Shift + T\n|\nCommand + Shift + T\n| |\n从当前选区创建浮动选区\n|\nCtrl + Alt + T\n| | |\n使用指针下的图像填充选区\n|\n按住 Ctrl 键拖移\n|\n按住 Command 键拖移\n| |\n将选区副本作为浮动选区创建\n|\n按住 Ctrl + Alt 组合键拖移\n|\n按住 Command + Option 组合键拖移\n| |\n限制选区为 15° 旋转\n|\n按住 Alt+Shift 进行旋转\n|\n按住 Option+Shift 进行旋转\n| |\n在另一个选定平面下选择平面\n|\n按住 Ctrl 键单击该平面\n|\n按住 Command 键并单击平面\n| |\n创建与父平面成 90° 的平面\n|\n按住 Ctrl 键拖移\n|\n按住 Command 键拖移\n| |\n在创建平面的同时删除上一个节点\n|\nBackspace\n|\nDelete\n| |\n建立一个完整的画布平面（与相机一致）\n|\n双击创建平面工具\n|\n双击创建平面工具\n|\n使用 Camera Raw 对话框 | 结果\n|\nWindows\n|\nmacOS\n缩放工具\n|\nZ\n|\nZ\n| |\n抓手工具\n|\nH\n|\nH\n| |\n白平衡工具\n|\nI\n|\nI\n| |\n颜色取样器工具\n|\nS\n|\nS\n| |\n裁剪工具\n|\nC\n|\nC\n| |\n拉直工具\n|\nA\n|\nA\n| |\n污点去除工具\n|\nB\n|\nB\n| |\n红眼去除工具\n|\nE\n|\nE\n| |\n基本面板\n|\nCtrl + Alt + 1\n|\nCommand + Option + 1\n| |\n色调曲线面板\n|\nCtrl + Alt + 2\n|\nCommand + Option + 2\n| |\n细节面板\n|\nCtrl + Alt + 3\n|\nCommand + Option + 3\n| |\nHSL/灰度面板\n|\nCtrl + Alt + 4\n|\nCommand + Option + 4\n| |\n分离色调面板\n|\nCtrl + Alt + 5\n|\nCommand + Option + 5\n| |\n镜头校正面板\n|\nCtrl + Alt + 6\n|\nCommand + Option + 6\n| |\n相机校准面板\n|\nCtrl + Alt + 7\n|\nCommand + Option + 7\n| |\n预设面板\n|\nCtrl + Alt + 9\n|\nCommand + Option + 9（必须在“系统首选项”中禁用 macOS Universal Access 缩放快捷键）\n| |\n打开快照面板\n|\nCtrl + Alt + 9\n|\nCommand + Option + 9\n| |\n参数曲线目标调整工具\n|\nCtrl + Alt + Shift + T\n|\nCommand + Option + Shift + T\n| |\n色相目标调整工具\n|\nCtrl + Alt + Shift + H\n|\nCommand + Option + Shift + H\n| |\n饱和度目标调整工具\n|\nCtrl + Alt + Shift + S\n|\nCommand + Option + Shift + S\n| |\n明亮度目标调整工具\n|\nCtrl + Alt + Shift + L\n|\nCommand + Option + Shift + L\n| |\n灰度混合目标调整工具\n|\nCtrl + Alt + Shift + G\n|\nCommand + Option + Shift + G\n| |\n上次使用的目标调整工具\n|\nT\n|\nT\n| |\n调整画笔工具\n|\nK\n|\nK\n| |\n渐变滤镜工具\n|\nG\n|\nG\n| |\n增加/减小画笔大小\n|\n] / [\n|\n] / [\n| |\n增加/减小画笔羽化\n|\nShift + ] / Shift + [\n|\nShift + ] / Shift + [\n| |\n以 10 为增量增加/减小调整画笔工具的流量\n|\n= (equal sign) / - (hyphen)\n|\n= (equal sign) / - (hyphen)\n| |\n临时从调整画笔工具的“添加”模式切换到“抹除”模式，或从“抹除”模式切换到“添加”模式\n|\nAlt\n|\nOption\n| |\n增加/减小临时调整画笔工具大小\n|\nAlt + ] / Alt + [\n|\nOption + ] / Option + [\n| |\n增加/减小临时调整画笔工具羽化\n|\nAlt + Shift + ] / Alt + Shift + [\n|\nOption + Shift + ] / Option + Shift + [\n| |\n以 10 为增量增加/减小临时调整画笔工具的流量\n|\nAlt + =（等号）/ Alt + -（连字符）\n|\nOption =（等号）/ Option + -（连字符）\n| |\n从调整画笔工具或渐变滤镜的“添加”或“抹除”模式切换到“新建”模式\n|\nN\n|\nN\n| |\n切换调整画笔工具的“自动蒙版”\n|\nM\n|\nM\n| |\n切换调整画笔工具的“显示蒙版”\n|\nY\n|\nY\n| |\n切换调整画笔工具的笔尖\n|\nV\n|\nV\n| |\n切换用于渐变滤镜、污点去除工具或红眼去除工具的叠加。\n|\nV\n|\nV\n| |\n向左旋转图像\n|\nL 或 Ctrl + ]\n|\nL 或 Command + ]\n| |\n向右旋转图像\n|\nR 或 Ctrl + [\n|\nR 或 Command + [\n| |\n放大\n|\nCtrl + +（加号）\n|\nCommand + +（加号）\n| |\n缩小\n|\nCtrl + -（连字符）\n|\nCommand + -（连字符）\n| |\n临时切换到放大工具\n（在选定拉直工具时无法使用。如果裁剪工具处于现用状态，请临时切换到拉直工具。）\n|\nCtrl\n|\nCommand\n| |\n临时切换到缩小工具并将“打开图像”按钮变成“打开拷贝”和“取消”按钮以复位。\n|\nAlt\n|\nOption\n| |\n切换预览\n|\nP\n|\nP\n| |\n全屏模式\n|\nF\n|\nF\n| |\n临时激活白平衡工具并将“打开图像”按钮改为“打开对象”。\n（如果裁剪工具处于现用状态，则不起作用。）\n|\nShift\n|\nShift\n| |\n在“曲线”面板中选择多个点\n|\n单击第一个点，按住 Shift 键并单击其它点\n|\n单击第一个点，按住 Shift 键并单击其它点\n| |\n在“曲线”面板中向曲线中添加点\n|\n在预览中按住 Ctrl 键单击\n|\n在预览中按住 Command 并单击\n| |\n在“曲线”面板中移动选定的点（1 个单位）\n|\n箭头键\n|\n箭头键\n| |\n在“曲线”面板中移动选定的点（10 个单位）\n|\nShift + 箭头键\n|\nShift + 箭头键\n| |\n从 Bridge 的“Camera Raw”对话框中打开选定图像\n|\nCtrl + R\n|\nCommand + R\n| |\n绕过“Camera Raw”对话框从 Bridge 中打开选定图像\n|\n按住 Shift 并双击图像\n|\n按住 Shift 并双击图像\n| |\n在“预览”中显示将被剪贴的高光\n|\n按住 Alt 并拖移“曝光度”、“恢复”或“黑色”滑块\n|\n按住 Option 并拖移“曝光度”、“恢复”或“黑色”滑块\n| |\n高光修剪警告\n|\nO\n|\nO\n| |\n阴影修剪警告\n|\nU\n|\nU\n| |\n（Filmstrip 模式）添加 1 - 5 星级评分\n|\nCtrl + 1 - 5\n|\nCommand +1 - 5\n| |\n（Filmstrip 模式）增加/减少星级\n|\nCtrl + .（句点） / Ctrl + ,（逗号）\n|\nCommand + .（句点） / Command + ,（逗号）\n| |\n（Filmstrip 模式）添加红色标签\n|\nCtrl + 6\n|\nCommand + 6\n| |\n（Filmstrip 模式）添加黄色标签\n|\nCtrl + 7\n|\nCommand + 7\n| |\n（Filmstrip 模式）添加绿色标签\n|\nCtrl + 8\n|\nCommand + 8\n| |\n（Filmstrip 模式）添加蓝色标签\n|\nCtrl + 9\n|\nCommand + 9\n| |\n（Filmstrip 模式）添加紫色标签\n|\nCtrl + Shift + 0\n|\nCommand + Shift + 0\n| |\nCamera Raw 首选项\n|\nCtrl + K\n|\nCommand + K\n| |\n删除 Adobe Camera Raw 首选项\n|\nCtrl + Alt（打开时）\n|\nOption + Shift（打开时）\n|\n使用黑白对话框 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用曲线 | 结果\n|\nWindows\n|\nmacOS\n打开“曲线”对话框\n|\nCtrl + M\n|\nCommand + M\n| |\n选择曲线上的下一个点\n|\n+（加）\n|\n+（加）\n| |\n选择曲线上的上一个点\n|\n–（减号）\n|\n–（减号）\n| |\n选择曲线上的多个点\n|\n按住 Shift 并单击这些点\n|\n按住 Shift 并单击这些点\n| |\n取消选择某个点\n|\nCtrl + D\n|\nCommand + D\n| |\n删除曲线上的某个点\n|\n选择某个点并按 Delete\n|\n选择某个点并按 Delete\n| |\n将选定的点移动 1 个单位\n|\n箭头键\n|\n箭头键\n| |\n将选定的点移动 10 个单位\n|\nShift + 箭头键\n|\nShift + 箭头键\n| |\n显示将修剪的高光和阴影\n|\n按住 Alt 并拖移黑场/白场滑块\n|\n按住 Option 并拖移黑场/白场滑块\n| |\n在复合曲线上设置一个点\n|\n按住 Ctrl 键并单击图像\n|\n按住 Command 键并单击图像\n| |\n在通道曲线上设置一个点\n|\n按住 Shift + Ctrl 组合键并单击图像\n|\n按住 Shift + Command 组合键并单击图像\n| |\n切换网格大小\n|\n按住 Alt 键并单击域\n|\n按住 Option 键并单击域\n| | 更改颜色通道\n|\nAlt + 2 = RGB\nAlt + 3 = 红色\nAlt + 4 = 绿色\nAlt + 5 = 蓝色\n|\nOption + 2 = RGB\nOption + 3 = 红色\nOption + 4 = 绿色\nOption + 5 = 蓝色\n|\n选择和移动对象 此部分列表提供不显示在菜单命令或工具提示中的快捷键。\n| 结果\n|\nWindows\n|\nmacOS\n选择时重新定位选框‡\n|\n任何选框工具（单列和单行除外）+ 空格键并拖移\n|\n任何选框工具（单列和单行除外）+ 空格键并拖移\n| |\n添加到选区\n|\n任何选择工具 + Shift 键并拖移\n|\n任何选择工具 + Shift 键并拖移\n| |\n从选区中减去\n|\n任何选择工具 + Alt 键并拖移\n|\n任何选择工具 + Option 键并拖移\n| |\n与选区交叉\n|\n任何选择工具（快速选择工具除外）+Shift+Alt 并拖移\n|\n任何选择工具（快速选择工具除外）+Shift+Option 并拖移\n| |\n将选框限制为方形或圆形（如果没有任何其他选区处于现用状态）‡\n|\n按住 Shift 键拖移\n|\n按住 Shift 键拖移\n| |\n从中心绘制选框（如果没有任何其他选区处于现用状态）‡\n|\n按住 Alt 键拖移\n|\n按住 Option 键拖移\n| |\n限制形状并从中心绘制选框‡\n|\n按住 Shift + Alt 组合键拖移\n|\n按住 Shift + Option 组合键拖移\n| |\n切换到移动工具\n|\nCtrl（选定抓手、切片、路径、形状或任何钢笔工具时除外）\n|\nCommand（选定抓手、切片、路径、形状或任何钢笔工具时除外）\n| |\n从磁性套索工具切换到套索工具\n|\n按住 Alt 键拖移\n|\n按住 Option 键拖移\n| |\n从磁性套索工具切换到多边形套索工具\n|\n按住 Alt 键并单击\n|\n按住 Option 键并单击\n| |\n应用/取消磁性套索的操作\n|\nEnter/Esc 或 Ctrl + .（句点）\n|\nReturn/Esc 或 Command + .（句点）\n| |\n移动选区的拷贝\n|\n移动工具 + Alt 键并拖移选区‡\n|\n移动工具 + Option 键并拖移选区‡\n| |\n将所选区域移动 1 个像素\n|\n任何选区 + 向右箭头键、向左箭头键、向上箭头键或向下箭头键†\n|\n任何选区 + 向右箭头键、向左箭头键、向上箭头键或向下箭头键†\n| |\n将选区移动 1 个像素\n|\n移动工具 + 向右箭头键、向左箭头键、向上箭头键或向下箭头键†‡\n|\n移动工具 + 向右箭头键、向左箭头键、向上箭头键或向下箭头键†‡\n| |\n当未选择图层上的任何内容时，将图层移动 1 个像素\n|\nCtrl + 向右箭头键、向左箭头键、向上箭头键或向下箭头键†\n|\nCommand + 向右箭头键、向左箭头键、向上箭头键或向下箭头键†\n| |\n增大/减小检测宽度\n|\n磁性套索工具 + [ 或 ]\n|\n磁性套索工具 + [ 或 ]\n| |\n接受裁剪或退出裁剪\n|\n裁剪工具 + Enter 或 Esc\n|\n裁剪工具 + Return 或 Esc\n| |\n切换裁剪屏蔽开/关\n|\n/（正斜杠）\n|\n/（正斜杠）\n| |\n创建量角器\n|\n标尺工具+Alt 并拖移终点\n|\n标尺工具+Option 并拖移终点\n| |\n将参考线与标尺记号对齐（未选中“视图”\u0026gt;“对齐”时除外）\n|\n按住 Shift 键拖移参考线\n|\n按住 Shift 键拖移参考线\n| |\n在水平参考线和垂直参考线之间转换\n|\n按住 Alt 键拖移参考线\n|\n按住 Option 键拖移参考线\n| |\n† 按住 Shift 键可移动 10 个像素\n‡ 适用于形状工具\n|\n变换选区、选区边界和路径 此部分列表提供不显示在菜单命令或工具提示中的快捷键。\n结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 编辑路径 此部分列表提供不显示在菜单命令或工具提示中的快捷键。\n结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 用于绘画 此部分列表提供不显示在菜单命令或工具提示中的快捷键。\n| 结果\n|\nWindows\n|\nmacOS\n从拾色器中选择前景颜色\n|\n任何绘画工具 + Shift + Alt + 右键单击并拖动\n|\n任何绘画工具 + Control + Option + Command 键并拖动\n| |\n使用吸管工具从图像中选择前景颜色\n|\n任何绘画工具 + Alt 或任何形状工具 + Alt（选中“路径”选项时除外）\n|\n任何绘画工具 + Option 或任何形状工具 + Option（选中“路径”选项时除外）\n| |\n选择背景色\n|\n吸管工具 + Alt 键并单击\n|\n吸管工具 + Option 键并单击\n| |\n颜色取样器工具\n|\n吸管工具 + Shift 键\n|\n吸管工具 + Shift 键\n| |\n删除颜色取样器\n|\n颜色取样器工具 + Alt 键并单击\n|\n颜色取样器工具 + Option 键并单击\n| |\n设置绘画模式的不透明度、容差、强度或曝光量\n|\n任何绘画或编辑工具 + 数字键（例如 0 = 100%、1 = 10%、按完 4 后紧接着按 5 = 45%）（如果启用了“喷枪”选项，则使用 Shift + 数字键）\n|\n任何绘画或编辑工具 + 数字键（例如 0 = 100%、1 = 10%、按完 4 后紧接着按 5 = 45%）（如果启用了“喷枪”选项，则使用 Shift + 数字键）\n| |\n设置绘画模式的流量\n|\n任何绘画或编辑工具 + Shift + 数字键（例如 0 = 100%、1 = 10%、按完 4 后紧接着按 5 = 45%）（如果启用了“喷枪”选项，则省略 Shift 键）\n|\n任何绘画或编辑工具 + Shift + 数字键（例如 0 = 100%、1 = 10%、按完 4 后紧接着按 5 = 45%）（如果启用了“喷枪”选项，则省略 Shift 键）\n| |\n混合器画笔更改“混合”设置\n|\nAlt + Shift + 数字\n|\nOption + Shift + 数字\n| |\n混合器画笔更改“潮湿”设置\n|\n数字键\n|\n数字键\n| |\n混合器画笔将“潮湿”和“混合”更改为零\n|\n00\n|\n00\n| |\n循环切换混合模式\n|\nShift + +（加号）或 -（减号)\n|\nShift + +（加号）或 -（减号)\n| | 在背景或标准图层上打开“填充”对话框 |\nBackspace 或 Shift + Backspace\n|\nDelete 或 Shift + Delete\n| |\n使用前景色或背景色填充\n|\nAlt + Backspace 或 Ctrl + Backspace†\n|\nOption + Delete 或 Command + Delete†\n| |\n从历史记录中填充\n|\nCtrl + Alt + Backspace†\n|\nCommand + Option + Delete†\n| |\n显示“填充”对话框\n|\nShift + Backspace\n|\nShift + Delete\n| |\n锁定透明像素的开/关\n|\n/（正斜杠）\n|\n/（正斜杠）\n| |\n连接点与直线\n|\n任何绘画工具 + Shift 并单击\n|\n任何绘画工具 + Shift 并单击\n| |\n† 按住 Shift 键可保留透明度\n|\n用于混合模式 | 结果\n|\nWindows\n|\nmacOS\n循环切换混合模式\n|\nShift + +（加号）或 -（减号)\n|\nShift + +（加号）或 -（减号)\n| |\n正常\n|\nShift + Alt + N\n|\nShift + Option + N\n| |\n溶解\n|\nShift + Alt + I\n|\nShift + Option + I\n| |\n背后（仅限画笔工具）\n|\nShift + Alt + Q\n|\nShift + Option + Q\n| |\n清除（仅限画笔工具）\n|\nShift + Alt + R\n|\nShift + Option + R\n| |\n变暗\n|\nShift + Alt + K\n|\nShift + Option + K\n| |\n正片叠底\n|\nShift + Alt + M\n|\nShift + Option + M\n| |\n颜色加深\n|\nShift + Alt + B\n|\nShift + Option + B\n| |\n线性加深\n|\nShift + Alt + A\n|\nShift + Option + A\n| |\n变亮\n|\nShift + Alt + G\n|\nShift + Option + G\n| |\n滤色\n|\nShift + Alt + S\n|\nShift + Option + S\n| |\n颜色减淡\n|\nShift + Alt + D\n|\nShift + Option + D\n| |\n线性减淡\n|\nShift + Alt + W\n|\nShift + Option + W\n| |\n叠加\n|\nShift + Alt + O\n|\nShift + Option + O\n| |\n柔光\n|\nShift + Alt + F\n|\nShift + Option + F\n| |\n强光\n|\nShift + Alt + H\n|\nShift + Option + H\n| |\n亮光\n|\nShift + Alt + V\n|\nShift + Option + V\n| |\n线性光\n|\nShift + Alt + J\n|\nShift + Option + J\n| |\n点光\n|\nShift + Alt + Z\n|\nShift + Option + Z\n| |\n实色混合\n|\nShift + Alt + L\n|\nShift + Option + L\n| |\n差值\n|\nShift + Alt + E\n|\nShift + Option + E\n| |\n排除\n|\nShift + Alt + X\n|\nShift + Option + X\n| |\n色相\n|\nShift + Alt + U\n|\nShift + Option + U\n| |\n饱和度\n|\nShift + Alt + T\n|\nShift + Option + T\n| |\n颜色\n|\nShift + Alt + C\n|\nShift + Option + C\n| |\n明度\n|\nShift + Alt + Y\n|\nShift + Option + Y\n| |\n去色\n|\n按住 Shift + Alt + D 并单击海绵工具\n|\n按住 Shift + Option + D 并单击海绵工具\n| |\n饱和\n|\n按住 Shift + Alt + S 并单击海绵工具\n|\n按住 Shift + Option + S 并单击海绵工具\n| |\n减淡/加深阴影\n|\n按住 Shift + Alt + S 并单击减淡工具/加深工具\n|\n按住 Shift + Option + S 并单击减淡工具/加深工具\n| |\n减淡/加深中间调\n|\n按住 Shift + Alt + M 并单击减淡工具/加深工具\n|\n按住 Shift + Option + M 并单击减淡工具/加深工具\n| |\n减淡/加深高光\n|\n按住 Shift + Alt + H 并单击减淡工具/加深工具\n|\n按住 Shift + Option + H 并单击减淡工具/加深工具\n| |\n将位图图像的混合模式设置为“阈值”，将所有其它图像的混合模式设置为“正常”\n|\nShift + Alt + N\n|\nShift + Option + N\n|\n选择和编辑文本 此部分列表提供不显示在菜单命令或工具提示中的快捷键。\n| 结果\n|\nWindows\n|\nmacOS\n移动图像中的文字\n|\n选中“文字”图层时按住 Ctrl 键拖移文字\n|\n选中“文字”图层时按住 Command 键拖移文字\n| |\n向左/向右选择 1 个字符或向上/向下选择 1 行，或向左/向右选择 1 个字\n|\nShift + 向左箭头键/向右箭头键或向下箭头键/向上箭头键，或 Ctrl + Shift + 向左箭头键/向右箭头键\n|\nShift + 向左箭头键/向右箭头键或向下箭头键/向上箭头键，或 Command + Shift + 向左箭头键/向右箭头键\n| |\n选择插入点与鼠标单击点之间的字符\n|\n按住 Shift 键并单击\n|\n按住 Shift 键并单击\n| |\n左移/右移 1 个字符，下移/上移 1 行或左移/右移 1 个字\n|\n向左箭头键/向右箭头键、向下箭头键/向上箭头键，或 Ctrl + 向左箭头键/向右箭头键\n|\n向左箭头键/向右箭头键、向下箭头键/向上箭头键，或 Command + 向左箭头键/向右箭头键\n| |\n当文本图层在“图层”面板中处于选定状态时，创建一个新的文本图层\n|\n按住 Shift 键并单击\n|\n按住 Shift 键并单击\n| |\n选择字、行、段落或文章\n|\n双击、单击三次、单击四次或单击五次\n|\n双击、单击三次、单击四次或单击五次\n| |\n显示/隐藏所选文字上的选区\n|\nCtrl + H\n|\nCommand + H\n| |\n在编辑文本时显示用于转换文本的定界框，或者在光标位于定界框内时激活移动工具\n|\nCtrl\n|\nCommand\n| |\n在调整定界框大小时缩放定界框内的文本\n|\n按住 Ctrl 键拖移定界框手柄\n|\n按住 Command 键拖移定界框手柄\n| |\n在创建文本框时移动文本框\n|\n按住空格键拖移\n|\n按住空格键拖移\n|\n设置文字格式 此部分列表提供不显示在菜单命令或工具提示中的快捷键。\n| 结果\n|\nWindows\n|\nmacOS\n左对齐、居中对齐或右对齐\n|\n横排文字工具 + Ctrl + Shift + L、C 或 R\n|\n横排文字工具 + Command + Shift + L、C 或 R\n| |\n顶对齐、居中对齐或底对齐\n|\n直排文字工具 + Ctrl + Shift + L、C 或 R\n|\n直排文字工具 + Command + Shift + L、C 或 R\n| |\n选择 100% 水平缩放\n|\nCtrl + Shift + X\n|\nCommand + Shift + X\n| |\n选择 100% 垂直缩放\n|\nCtrl + Shift + Alt + X\n|\nCommand + Shift + Option + X\n| |\n选择自动行距\n|\nCtrl + Shift + Alt + A\n|\nCommand + Shift + Option + A\n| |\n选择 0 字距调整\n|\nCtrl + Shift + Q\n|\nCommand + Ctrl + Shift + Q\n| |\n对齐段落（最后一行左对齐）\n|\nCtrl + Shift + J\n|\nCommand + Shift + J\n| |\n调整段落（全部调整）\n|\nCtrl + Shift + F\n|\nCommand + Shift + F\n| |\n切换段落连字的开/关\n|\nCtrl + Shift + Alt + H\n|\nCommand + Ctrl + Shift + Option + H\n| |\n切换单行/逐行合成器的开/关\n|\nCtrl + Shift + Alt + T\n|\nCommand + Shift + Option + T\n| |\n减小或增大选中文本的文字大小（2 点/像素）\n|\nCtrl + Shift + \u0026lt; 或 \u0026gt;†\n|\nCommand + Shift + \u0026lt; 或 \u0026gt;†\n| |\n增大或减小行距 2 个点或像素\n|\nAlt + 向下箭头或向上箭头††\n|\nOption + 向下箭头或向上箭头††\n| |\n增大或减小基线移动 2 个点或像素\n|\nShift + Alt + 向下箭头或向上箭头††\n|\nShift + Option + 向下箭头或向上箭头††\n| |\n减小或增大字距微调/字距调整（20/1000 em）\n|\nAlt + 向左箭头或向右箭头††\n|\nOption + 向左箭头或向右箭头††\n| |\n†按住 Alt 键 (Win) 或 Option 键 (macOS) 可减小/增大 10\n††按住 Ctrl 键 (Windows) 或 Command 键 (macOS) 可减小/增大 10\n|\n切片并优化切片 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用面板 此部分列表提供不显示在菜单命令或工具提示中的快捷键。\n结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用动作面板 | 结果\n|\nWindows\n|\nmacOS\n打开一个命令并关闭所有其他命令，或者打开所有命令\n|\n按住 Alt 键并单击命令旁边的复选标记\n|\n按住 Option 键并单击命令旁边的复选标记\n| |\n打开当前模态控制并切换所有其它模态控制\n|\n按住 Alt 键并单击\n|\n按住 Option 键并单击\n| |\n更改动作或动作组选项\n|\n按住 Alt 键并双击动作或动作组\n|\n按住 Option 键并双击动作或动作组\n| |\n显示用于已记录命令的“选项”对话框\n|\n双击已记录的命令\n|\n双击已记录的命令\n| |\n播放整个动作\n|\n按住 Ctrl 键并双击动作\n|\n按住 Command 键并双击动作\n| |\n折叠/展开动作的所有组件\n|\n按住 Alt 键并单击三角形\n|\n按住 Option 键并单击三角形\n| |\n播放命令\n|\n按住 Ctrl 键并单击“播放”按钮\n|\n按住 Command 键并单击“播放”按钮\n| |\n新建操作并开始记录而无需确认\n|\n按住 Alt 键并单击“新动作”按钮\n|\n按住 Option 键并单击“新动作”按钮\n| |\n选择同一类型的相邻项目\n|\n按住 Shift 键并单击动作/命令\n|\n按住 Shift 键并单击动作/命令\n| |\n选择同一类型的不相邻项目\n|\n按住 Ctrl 键并单击动作/命令\n|\n按住 Command 键并单击动作/命令\n|\n使用调整图层 如果您希望将以 Alt/Option + 1 开头的通道快捷键用于红色，请选取“编辑”\u0026gt;“键盘快捷键”，然后选择“使用旧版通道快捷键”。然后重新启动 Photoshop。\n结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 在帧模式下使用动画面板 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用画笔面板 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用通道面板 如果您希望将以 Ctrl/Command + 1 开头的通道快捷键用于红色，请选择“编辑”\u0026gt;“键盘快捷键”，然后选择“使用旧版通道快捷键”。\n| 结果\n|\nWindows\n|\nmacOS\n选择各个通道\n|\nCtrl + 3（红）、4（绿）、5（蓝）\n|\nCommand + 3（红）、4（绿）、5（蓝）\n| |\n选择复合通道\n|\nCtrl + 2\n|\nCommand + 2\n| |\n将通道作为选区载入\n|\n按住 Control 键并单击通道缩览图，或按住 Alt + Ctrl + 3 键（红色）、Alt + Ctrl + 4 键（绿色）、Alt + Ctrl + 5 键（蓝色）\n|\n按住 Command 键并单击通道缩览图，或按住 Option + Command + 3 键（红色）、Option + Command + 4 键（绿色）、Option + Command + 5 键（蓝色）\n| |\n添加到当前选区\n|\n按住 Ctrl + Shift 键并单击通道缩览图\n|\n按住 Command + Shift 键并单击通道缩览图\n| |\n从当前选区中减去\n|\n按住 Control + Alt 键并单击通道缩览图\n|\n按住 Command + Option 键并单击通道缩览图\n| |\n与当前选区交叉\n|\n按住 Control + Shift + Alt 键并单击通道缩览图\n|\n按住 Command + Shift + Option 键并单击通道缩览图\n| |\n为“将选区存储为通道”按钮设置选项\n|\n按住 Alt 键单击“将选区存储为通道”按钮\n|\n按住 Option 键单击“将选区存储为通道”按钮\n| |\n创建新的专色通道\n|\n按住 Ctrl 键并单击“创建新通道”按钮\n|\n按住 Command 键并单击“创建新通道”按钮\n| |\n选择/取消选择多个颜色通道选区\n|\n按住 Shift 键并单击颜色通道\n|\n按住 Shift 键并单击颜色通道\n| |\n选择/取消选择 Alpha 通道并显示/隐藏以红宝石色进行的叠加\n|\n按住 Shift 键并单击 Alpha 通道\n|\n按住 Shift 键并单击 Alpha 通道\n| |\n显示通道选项\n|\n双击 Alpha 通道或专色通道缩览图\n|\n双击 Alpha 通道或专色通道缩览图\n| |\n在“快速蒙版”模式中切换复合蒙版和灰度蒙版\n|\n任何工具（包括画笔工具）：\nShift + ~（波形符）\n任何工具（不包括画笔工具）：\n`（重音符）\n|\n任何工具（包括画笔工具）：\nShift + ~（波形符）\n任何工具（不包括画笔工具）：\n`（重音符）\n|\n使用仿制源面板 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用颜色面板 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用历史记录面板 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用信息面板 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用图层面板 | 结果\n|\nWindows\n|\nmacOS\n将图层透明度作为选区载入\n|\n按住 Ctrl 键并单击图层缩览图\n|\n按住 Command 键并单击图层缩览图\n| |\n添加到当前选区\n|\n按住 Ctrl + Shift 键并单击图层缩览图\n|\n按住 Command + Shift 键并单击图层缩览图\n| |\n从当前选区中减去\n|\n按住 Ctrl + Alt 键并单击图层缩览图\n|\n按住 Command + Option 键并单击图层缩览图\n| |\n与当前选区交叉\n|\n按住 Ctrl + Shift + Alt 键并单击图层缩览图\n|\n按住 Command + Shift + Option 键并单击图层缩览图\n| |\n将滤镜蒙版作为选区载入\n|\n按住 Ctrl 键并单击滤镜蒙版缩览图\n|\n按住 Command 键并单击滤镜蒙版缩览图\n| | 新建图层 | Control + Shift+ N | Command + Shift+ N | | 通过拷贝新建图层 | Control + J | Command + J | | 通过剪切新建图层 | Shift + Control + J | Shift + Command + J | |\n图层编组\n|\nCtrl + G\n|\nCommand + G\n| |\n取消图层编组\n|\nCtrl + Shift + G\n|\nCmd + Shift + G\n| |\n创建/释放剪贴蒙版\n|\nCtrl + Alt + G\n|\nCommand+Option+G\n| |\n选择所有图层\n|\nCtrl + Alt + A\n|\nCommand + Option + A\n| |\n合并可视图层\n|\nCtrl + Shift + E\n|\nCommand + Shift + E\n| |\n使用对话框创建新的空图层\n|\n按住 Alt 键并单击“新建图层”按钮\n|\n按住 Option 键并单击“新建图层”按钮\n| |\n在目标图层下面创建新图层\n|\n按住 Ctrl 键并单击“新建图层”按钮\n|\n按住 Command 键并单击“新建图层”按钮\n| |\n选择顶部图层\n|\nAlt + .（句点）\n|\nOption + .（句点）\n| |\n选择底部图层\n|\nAlt + ,（逗号）\n|\nOption + ,（逗号）\n| |\n添加到“图层”面板中的图层选区\n|\nShift + Alt + [ 或 ]\n|\nShift + Option + [ 或 ]\n| |\n向下/向上选择下一个图层\n|\nAlt + [ 或 ]\n|\nOption + [ 或 ]\n| |\n下移/上移目标图层\n|\nCtrl + [ 或 ]\n|\nCommand + [ 或 ]\n| |\n将所有可视图层的拷贝合并到目标图层\n|\nCtrl + Shift + Alt + E\n|\nCommand + Shift + Option + E\n| |\n合并图层\n|\n高亮显示要合并的图层，然后按 Control + E 组合键。\n|\n高亮显示要合并的图层，然后按 Command + E 组合键。\n| |\n将图层移动到底部或顶部\n|\nCtrl + Shift + [ 或 ]\n|\nCommand + Shift + [ 或 ]\n| |\n将当前图层拷贝到下面的图层\n|\nAlt + 面板弹出式菜单中的“向下合并”命令\n|\nOption + 面板弹出式菜单中的“向下合并”命令\n| |\n将所有可见图层合并为当前选定图层上面的新图层\n|\nAlt + 面板弹出式菜单中的“合并可见图层”命令\n|\nOption + 面板弹出式菜单中的“合并可见图层”命令\n| |\n仅显示/隐藏此图层/图层组，或显示/隐藏所有图层/图层组\n|\n右键单击眼睛图标\n|\n按住 Ctrl 键并单击眼睛图标\n| |\n显示/隐藏其他所有的当前可视图层\n|\n按住 Alt 键并单击眼睛图标\n|\n按住 Option 键并单击眼睛图标\n| |\n切换目标图层的锁定透明度或最后应用的锁定\n|\n/（正斜杠）\n|\n/（正斜杠）\n| |\n编辑图层效果/样式、选项\n|\n双击图层效果/样式\n|\n双击图层效果/样式\n| |\n隐藏图层效果/样式\n|\n按住 Alt 键并双击图层效果/样式\n|\n按住 Option 键并双击图层效果/样式\n| |\n编辑图层样式\n|\n双击图层\n|\n双击图层\n| |\n停用/启用矢量蒙版\n|\n按住 Shift 键并单击矢量蒙版缩览图\n|\n按住 Shift 键并单击矢量蒙版缩览图\n| |\n打开“图层蒙版显示选项”对话框\n|\n双击图层蒙版缩览图\n|\n双击图层蒙版缩览图\n| |\n切换图层蒙版的开/关\n|\n按住 Shift 键并单击图层蒙版缩览图\n|\n按住 Shift 键并单击图层蒙版缩览图\n| |\n切换滤镜蒙版的开/关\n|\n按住 Shift 键并单击滤镜蒙版缩览图\n|\n按住 Shift 键并单击滤镜蒙版缩览图\n| |\n在图层蒙版和复合图像之间切换\n|\n按住 Alt 键并单击图层蒙版缩览图\n|\n按住 Option 键并单击图层蒙版缩览图\n| |\n在滤镜蒙版和复合图像之间切换\n|\n按住 Alt 键并单击滤镜蒙版缩览图\n|\n按住 Option 键并单击滤镜蒙版缩览图\n| |\n切换图层蒙版的宝石红显示模式开/关\n|\n\\(反斜杠)，或 Shift + Alt 组合键并单击\n|\n\\(反斜杠)，或 Shift + Option 组合键并单击\n| |\n选择所有文字；暂时选择文字工具\n|\n双击文字图层缩览图\n|\n双击文字图层缩览图\n| |\n创建剪贴蒙版\n|\n按住 Alt 键并单击两个图层的分界线\n|\n按住 Option 键并单击两个图层的分界线\n| |\n重命名图层\n|\n双击图层名称\n|\n双击图层名称\n| |\n编辑滤镜设置\n|\n双击滤镜效果\n|\n双击滤镜效果\n| |\n编辑滤镜混合选项\n|\n双击“滤镜混合”图标\n|\n双击“滤镜混合”图标\n| |\n在当前图层/图层组下创建新图层组\n|\n按住 Ctrl 键并单击“新建组”按钮\n|\n按住 Command 键并单击“新建组”按钮\n| |\n使用对话框创建新图层组\n|\n按住 Alt 键并单击“新建组”按钮\n|\n按住 Option 键并单击“新建组”按钮\n| |\n创建隐藏全部内容/选区的图层蒙版\n|\n按住 Alt 键并单击“添加图层蒙版”按钮\n|\n按住 Option 键并单击“添加图层蒙版”按钮\n| |\n创建显示全部/路径区域的矢量蒙版\n|\n按住 Ctrl 键并单击“添加图层蒙版”按钮\n|\n按住 Command 键并单击“添加图层蒙版”按钮\n| |\n创建隐藏全部或显示路径区域的矢量蒙版\n|\n按住 Ctrl + Alt 组合键并单击“添加图层蒙版”按钮\n|\n按住 Command + Option 组合键并单击“添加图层蒙版”按钮\n| |\n显示图层组属性\n|\n右键单击图层组并选择“组属性”，或双击组。\n|\n按住 Control 键并单击图层组，然后选择“组属性”，或双击组。\n| |\n选择/取消选择多个连续图层\n|\n按住 Shift 键并单击\n|\n按住 Shift 键并单击\n| |\n选择/取消选择多个不连续的图层\n|\n按住 Ctrl 键并单击\n|\n按住 Command 键并单击\n|\n如果将 Kotoeri 作为日语输入法，则“切换图层蒙版的宝石红显示模式开/关”快捷键会在 Kotoeri 中开始动作。请切换到其他模式（例如，\u0026ldquo;U.S.\u0026quot;）以启用该快捷键。\n使用图层复合面板 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用路径面板 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用色板面板 结果 Windows macOS 自由变换 Control + T Command + T 使用相同的画笔，在绘画与抹除操作之间切换 按住 `（重音符） 按住 `（重音符） 减小画笔大小 [ [ 增加画笔大小 ] ] 减小画笔硬度 { { 增加画笔硬度 } } 将画笔笔尖旋转 1 度 向左箭头键（逆时针）， 向右箭头键（顺时针） 向左箭头键（逆时针）， 向右箭头键（顺时针） 将画笔笔尖旋转 15 度 Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） Shift + 向左箭头键（逆时针）， Shift + 向右箭头键（顺时针） 默认前景色/背景色 D D 切换前景色/背景色 X X 按屏幕大小缩放图层 按住 Alt 键单击图层 按住 Option 键单击图层 通过拷贝新建图层 Control + J Command + J 通过剪切新建图层 Shift + Control + J Shift + Command + J 添加到选区 任何选择工具 + Shift 键并拖移 任何选择工具 + Shift 键并拖移 删除画笔或色板 按住 Alt 键并单击画笔或色板 按住 Option 键并单击画笔或色板 在选中“移动工具”的情况下，切换选项栏中的“自动选择”复选框 按住 Ctrl 键并单击 按住 Command 键并单击 关闭当前文档之外所有打开的文档 Ctrl + Alt + P Command+Option+P 取消所有模态对话框窗口（包括智能工作区） Esc Esc 选择工具栏的第一个编辑域 Enter Return 在域之间导航 Tab Tab 按反方向在域之间导航 Tab + Shift Tab + Shift 将“取消”更改为“复位” Alt Option 使用抽出和图案生成器（可选增效工具） | 目的（抽出和图案生成器）\n|\nWindows\n|\nmacOS\n符合窗口大小\n|\nCtrl + 0\n|\nCommand + 0\n| |\n放大\n|\nCtrl + +（加号）\n|\nCommand + +（加号）\n| |\n缩小\n|\nCtrl + -（连字符）\n|\nCommand + -（连字符）\n| |\n从上到下在右侧循环切换控件\n|\nTab\n|\nTab\n| |\n从下到上在右侧循环切换控件\n|\nShift + Tab\n|\nShift + Tab\n| |\n暂时激活抓手工具\n|\n空格键\n|\n空格键\n| |\n将“取消”更改为“复位”\n|\nAlt\n|\nOption\n| |\n目的（仅限抽出）\n|\nWindows\n|\nmacOS\n边缘高光器工具\n|\nB\n|\nB\n| |\n填充工具\n|\nG\n|\nG\n| |\n吸管工具\n|\nI\n|\nI\n| |\n清除工具\n|\nC\n|\nC\n| |\n边缘修饰工具\n|\nT\n|\nT\n| |\n在“边缘高光器”工具与“橡皮擦”工具之间切换\n|\nAlt+边缘高光器/橡皮擦工具\n|\nOption+边缘高光器/橡皮擦工具\n| |\n切换智能高光显示\n|\n选中“边缘高光器”工具时按 Ctrl 键\n|\n选中“边缘高光器”工具时按 Command 键\n| |\n移去当前高光\n|\nAlt + Delete\n|\nOption + Delete\n| |\n高光显示整个图像\n|\nCtrl + Delete\n|\nCommand + Delete\n| |\n填充前景区域并预览抽出\n|\n选中“填充”工具后按住 Shift 键并单击\n|\n选中“填充”工具后按住 Shift 键并单击\n| |\n选中“边缘修饰”工具后移动蒙版\n|\n按住 Ctrl 键拖移\n|\n按住 Command 键拖移\n| |\n选中“清除”工具后添加不透明度\n|\n按住 Alt 键拖移\n|\n按住 Option 键拖移\n| |\n在“原稿”和“抽出”部分之间切换预览中的“显示”菜单选项\n|\nX\n|\nX\n| |\n在预览之前启用“清除”工具和“边缘修饰”工具\n|\nShift + X\n|\nShift + X\n| |\n从上到下循环切换预览中的“显示”菜单\n|\nF\n|\nF\n| |\n从下到上循环切换预览中的“显示”菜单\n|\nShift + F\n|\nShift + F\n| |\n将画笔大小减小/增大 1\n|\n“画笔大小”文本框中的向下箭头/向上箭头†\n|\n“画笔大小”文本框中的向下箭头或向上箭头†\n| |\n将画笔大小减小/增大 1\n|\n“画笔大小滑块”中显示的向左箭头/向右箭头†\n|\n“画笔大小滑块”中显示的向左箭头/向右箭头†\n| |\n设置清除工具或边缘修饰工具的强度\n|\n0–9\n|\n0–9\n| |\n† 按住 Shift 键可减小/增大 10\n| |\n目的（仅限图案生成器）\n|\nWindows\n|\nmacOS\n删除当前选区\n|\nCtrl + D\n|\nCommand + D\n| |\n还原选区移动\n|\nCtrl + Z\n|\nCommand + Z\n| |\n生成或再次生成\n|\nCtrl + G\n|\nCommand + G\n| |\n与当前选区交叉\n|\n按住 Shift 键和 Alt 键进行选择\n|\n按住 Shift 键和 Option 键进行选择\n| |\n切换视图：原稿/生成的图案\n|\nX\n|\nX\n| |\n转到“拼贴历史记录”中的第一个拼贴\n|\nHome\n|\nHome\n| |\n转到“拼贴历史记录”中的最后一个拼贴\n|\nEnd\n|\nEnd\n| |\n转到“拼贴历史记录”中的上一个拼贴\n|\n向左箭头键、Page Up 键\n|\n向左箭头键、Page Up 键\n| |\n转到“拼贴历史记录”中的下一个拼贴\n|\n向右箭头键、Page Down 键\n|\n向右箭头键、Page Down 键\n| |\n删除“拼贴历史记录”中的当前拼贴\n|\nDelete\n|\nDelete\n| |\n在查看原稿时轻移选区\n|\n向右箭头键、向左箭头键、向上箭头键或向下箭头键\n|\n向右箭头键、向左箭头键、向上箭头键或向下箭头键\n| |\n在查看原稿时增大选区轻移量\n|\nShift + 向右箭头键、向左箭头键、向上箭头键或向下箭头键\n|\nShift + 向右箭头键、向左箭头键、向上箭头键或向下箭头键\n|\n","permalink":"https://aming.xyz/post/adobe-photoshop-%E4%B8%AD%E7%9A%84%E9%BB%98%E8%AE%A4%E9%94%AE%E7%9B%98%E5%BF%AB%E6%8D%B7%E9%94%AE/","tags":null,"title":""},{"categories":null,"contents":"Axios Create by jsliang on 2018-11-8 13:41:10\nRecently revised in 2019-05-31 13:50:06\n饮水思源：Axios 中文文档\nAxios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。\n从浏览器中创建 XMLHttpRequests 从 node.js 创建 http 请求 支持 Promise API 拦截请求和响应 转换请求数据和响应数据 取消请求 自动转换 JSON 数据 客户端支持防御 XSRF 一 目录 目录 一 目录 二 正文 2.1 get 2.1 post 二 正文 返回目录\naxios 实战经验\n2.1 get 返回目录\n方法：axios.get(url, options)\n话不多说，先上代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\u0026#34;\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;ie=edge\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Vue学习\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.bootcss.com/vue/2.5.17-beta.0/vue.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.bootcss.com/vue-router/3.0.1/vue-router.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- 1. 引用 axios --\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.bootcss.com/axios/0.18.0/axios.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; new Vue({ el: document.getElementById(\u0026#39;app\u0026#39;), template: ` \u0026lt;div\u0026gt; \u0026lt;button @click=\u0026#34;sendAjax\u0026#34;\u0026gt;发送请求\u0026lt;/button\u0026gt; \u0026lt;span\u0026gt;数据为：\u0026lt;/span\u0026gt; {{ getData }} \u0026lt;/div\u0026gt; `, data() { return { getData: \u0026#39;\u0026#39; } }, methods: { sendAjax() { // 直接使用 axios // get 为请求方式 axios.get(\u0026#39;https://www.easy-mock.com/mock/5be3885e033152564881d354/getInfo\u0026#39;) // then 为 promise 获取数据 .then((res) =\u0026gt; { this.getData = res.data; }) // catch 为 promise 捕获异常 .catch(); } } }) \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 如上，我们使用 axios 非常简单，只需要引用它的 cdn，然后通过：\n1 2 3 axios.get() .then() .catch() 就可以直接调用 axios 获取数据。\n2.2 post 返回目录\npost 请求讲解\n三 杂记 3.1 跨域代理 http-proxy-middleware | 代理了解推荐文章 步骤 1. 设置 index.js：\n1 2 3 4 5 6 7 8 dev: { proxyTable: { \u0026#39;/stat\u0026#39;: { target: \u0026#39;http://172.**.**.**:8080/\u0026#39;, // 接口的域名 changeOrigin: true, // 如果接口跨域，需要进行这个参数配置 } }, }, 步骤 2. 设置 main.js 全局拦截器：\n1 2 3 4 5 6 7 8 9 10 11 12 13 // 设置 axios import axios from \u0026#39;axios\u0026#39;; // 添加请求拦截器 axios.interceptors.request.use( (config) =\u0026gt; { config.headers.common[\u0026#39;timestamp\u0026#39;] = \u0026#34;******\u0026#34;; config.headers.common[\u0026#39;deviceid\u0026#39;] = \u0026#34;******\u0026#34;; config.headers.common[\u0026#39;signature\u0026#39;] = \u0026#34;******\u0026#34;; // 在发送请求之前做些什么 return config; }, (error) =\u0026gt; { // 在请求错误时做些什么 return Promise.reject(error); }) 步骤 3. 调用 PartOne.vue：\n1 2 3 4 5 6 7 8 9 axios({ url: \u0026#34;stat/getApersonnelDistribution\u0026#34;, method: \u0026#34;get\u0026#34;, params: { rank: 4 }, }).then( (res) =\u0026gt; { console.log(res); }) 3.2 单个页面多 API 调用 步骤 1. 全代码为：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 create() { this._getApi(); }, methods: { _getApi() { axios(xxx).then( res=\u0026gt; { console.log(res); this._drawxxx(res); }) }, _drawxxx(res) { } } 步骤 2. 理解：\n首先，在 create() 中调用方法体。\n然后，在 methods() 中编写方法体，方法体调用 axios。\n最后，在方法体中通过 axios 获取到数据之后，将数据传入到方法中进行处理。\n步骤 3. 缘故：这样分布处理，有利于代码逻辑优化，当某步出现错误的时候，方便调试。同时使用 _ 开头命名方法，防止与其他 api 冲突。\n3.3 Axios 封装 步骤 1. 封装 api 到 src/api/api.js 中\napi.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /** * 封装逻辑 * 1. 引入 axios。 * 2. 设置请求配置 request。如：请求超时，响应头等 * 3. 设置请求中的遮罩（未实现） * 4. 设置请求成功后的数据过滤（未实现） * 5. 设置并暴露接口，传 data、method、url 到请求配置 request 上。 */ // 设置 axios import axios from \u0026#39;axios\u0026#39;; // 请求配置 const request = axios.create({ // 本地开发 dev 的时候，不需要开启这个 // baseURL: \u0026#39;http://172.****.****.5:8080\u0026#39;, timeout: 5000, headers: { timestamp: \u0026#34;20181026094424\u0026#34;, deviceid: \u0026#34;10102\u0026#34;, signature: \u0026#34;F9CB03DD3ED50EDA5DB214C42D4DC0D6\u0026#34;, } }) /** * 获取用户名 * userId */ export const getUserName = data =\u0026gt; request({ method: \u0026#39;get\u0026#39;, url: \u0026#39;/api/getUserName\u0026#39;, params: data }) 步骤 2. 在 Pages 中调用：\nUserInfo.vue\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // 引用接口 import { getUserName } from \u0026#34;@/api/api\u0026#34; export default { methods: { _getUserName() { // 获取用户名 getUserName({ userId: this.userId, }).then( (res) =\u0026gt; { console.log(\u0026#34;\\n【API - 获取用户名】：\u0026#34;); }) } } } jsliang 广告推送：\n也许小伙伴想了解下云服务器\n或者小伙伴想买一台云服务器\n或者小伙伴需要续费云服务器\n欢迎点击 云服务器推广 查看！\njsliang 的文档库 由 梁峻荣 采用 知识共享 署名-非商业性使用-相同方式共享 4.0 国际 许可协议进行许可。\n基于https://github.com/LiangJunrong/document-library上的作品创作。\n本许可协议授权之外的使用权限可以从 https://creativecommons.org/licenses/by-nc-sa/2.5/cn/ 处获得。\n","permalink":"https://aming.xyz/post/axios/","tags":null,"title":""},{"categories":null,"contents":"一 JavaScript 1.1 jQuery 引入 CDN：\u0026lt;script src=\u0026quot;https://cdn.bootcss.com/jquery/3.3.1/jquery.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\n1.2 双引号与单引号的使用规范 在平时的时候，能使用双引号就用双引号。\n在拼接字符串的时候，使用单引号裹住。\n1.3 移动端rem适配 直接在 index.html 中引用该 js 文件即可。\nmobile-terminal-adaptation.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 /* * 2018年7月25日10:38:23 * 移动端 rem 适配，px:rem = 100:1 * 该适配兼容 UC 竖屏转横屏出现的BUG * 自定义设计稿的宽度：designWidth * 最大宽度: maxWidth * 这段 js 的最后面有两个参数记得要设置，一个为设计稿实际宽度，一个为制作稿最大宽度，例如设计稿为 750，最大宽度为 750，则为(750,750) */ ! function (e, t) { function n() { var n = l.getBoundingClientRect().width; t = t || 540, n \u0026gt; t \u0026amp;\u0026amp; (n = t); var i = 100 * n / e; r.innerHTML = \u0026#34;html{font-size:\u0026#34; + i + \u0026#34;px;}\u0026#34; } var i, d = document, o = window, l = d.documentElement, r = document.createElement(\u0026#34;style\u0026#34;); if (l.firstElementChild) l.firstElementChild.appendChild(r); else { var a = d.createElement(\u0026#34;div\u0026#34;); a.appendChild(r), d.write(a.innerHTML), a = null } n(), o.addEventListener(\u0026#34;resize\u0026#34;, function () { clearTimeout(i), i = setTimeout(n, 300) }, !1), o.addEventListener(\u0026#34;pageshow\u0026#34;, function (e) { e.persisted \u0026amp;\u0026amp; (clearTimeout(i), i = setTimeout(n, 300)) }, !1), \u0026#34;complete\u0026#34; === d.readyState ? d.body.style.fontSize = \u0026#34;16px\u0026#34; : d.addEventListener( \u0026#34;DOMContentLoaded\u0026#34;, function (e) { d.body.style.fontSize = \u0026#34;16px\u0026#34; }, !1) }(1000, 1000); 1.4 jQuery ajax 方法 1：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 $.ajax({ url: host + \u0026#39;/addressInfo\u0026#39;, type: \u0026#39;get\u0026#39;, dataType: \u0026#39;json\u0026#39;, data: { addressName: $serA } }).done(function (res) { console.log(res); }).fail(function () { console.log(\u0026#34;error\u0026#34;); }).always(function () { console.log(\u0026#34;complete\u0026#34;); }); 方法2：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 $.ajax({ url: host + \u0026#39;/olduser/up\u0026#39;, type: \u0026#39;get\u0026#39;, dataType: \u0026#39;json\u0026#39;, data: { userName: $(\u0026#34;#search-name\u0026#34;).val(), adsl: $(\u0026#34;#search-id\u0026#34;).val() }, success:function(res){ if(res.code == 0) { $(\u0026#34;#search-name\u0026#34;).val() + \u0026#34;\u0026amp;adsl=\u0026#34; + escape($(\u0026#34;#search-id\u0026#34;).val()); } else { alert(res.msg); } } }) 1.5 URL加码及解码 加码：\n1 window.location = \u0026#34;adslList.htm?name=\u0026#34; + escape(name) + \u0026#34;\u0026amp;idNo=\u0026#34; + escape(idNo); 解码：\n1 2 3 4 5 6 7 function getUrlParam(name) { var reg = new RegExp(\u0026#34;(^|\u0026amp;)\u0026#34;+ name +\u0026#34;=([^\u0026amp;]*)(\u0026amp;|$)\u0026#34;); var r = window.location.search.substr(1).match(reg); if(r!=null)return unescape(r[2]); return null; } console.log(\u0026#34;url name=\u0026#34; + getUrlParam(\u0026#34;name\u0026#34;) + \u0026#34;,url idNo=\u0026#34; + getUrlParam(\u0026#34;idNo\u0026#34;)); 1.6 常用正则表达式 知识点 1. 使用方式：\n1 2 3 4 if(!/^((\\d{8})|(1[35784]\\d{9}))$/.test($(\u0026#34;#user-phone\u0026#34;).val())){ alert(\u0026#39;请填写11位手机号码或8位固话号码\u0026#39;); return false; } 知识点 2. 密码强度\n必须包含数字+小写字母+大写字母的密码，位数在8-10位之间： 1 ^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$ 只能是字母、数字和下划线： 1 ^\\w+$ 知识点 3. 校验中文：\n1 ^[\\u4e00-\\u9fa5]{0,}$ 知识点 4. Email验证：\n1 [\\w!#$%\u0026amp;\u0026#39;*+/=?^_`{|}~-]+(?:\\.[\\w!#$%\u0026amp;\u0026#39;*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])? 知识点 5. 身份证验证\n1 ^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$ 知识点 6. 手机号验证：以1开头，第二位数是3/4/5/7/8的11位手机号码\n1 ^1[3,4,5,7,8]\\d{9}$ 二 HTML 2.1 搜索跳转到百度 1 2 3 4 \u0026lt;form class=\u0026#34;baidu-search\u0026#34; action=\u0026#34;http://www.baidu.com/baidu\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;word\u0026#34; placeholder=\u0026#34;我不要，给我滚开~\u0026#34; id=\u0026#34;baidu-input\u0026#34;\u0026gt;\u0026lt;br\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt;皮皮虾我们溜\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; 三 CSS 3.1 设置input的placeholder reset.css\n1 2 3 4 /** 设置input的placeholder - set input placeholder **/ input::-webkit-input-placeholder { color: #727272; } /* Webkit browsers */ input::-moz-placeholder { color: #727272; } /* Mozilla Firefox */ input::-ms-input-placeholder { color: #727272; } /* Internet Explorer */ 3.2 使图片根据不同设备自适应 reset.css\n1 2 /** 图片自适应 - image responsize **/ img { border: 0; display: inline-block; width: 100%; max-width: 100%; height: auto; } 3.3 垂直居中 首先，父元素设置relative；\n然后，需要定位的元素设置absolute；\n最后，垂直居中的top为50%，margin-top为该元素高度的负一半的高度值。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 .search-result-area { position: relative; padding: 0 36px; } .previous-page, .next-page { position: absolute; top:50%; margin-top: -36px; } .previous-page { left: 0; } .next-page { right: 0; } 3.4 左右两栏布局 div1不变，div2浮动，div2的margin-left为div1的宽度。 div1+div2浮动，父级overflow=hidden。 父级relative定位，子级absolute定位。 3.5 css reset 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 /* * reset 的目的不是让默认样式在所有浏览器下一致，而是减少默认样式有可能带来的问题。 * The purpose of reset is not to allow default styles to be consistent across all browsers, but to reduce the potential problems of default styles. * create by jsliang */ /** 清除内外边距 - clearance of inner and outer margins **/ body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, /* 结构元素 - structural elements */ dl, dt, dd, ul, ol, li, /* 列表元素 - list elements */ pre, /* 文本格式元素 - text formatting elements */ form, fieldset, legend, button, input, textarea, /* 表单元素 - from elements */ th, td /* 表格元素 - table elements */ { margin: 0; padding: 0; } /** 设置默认字体 - setting the default font **/ body, button, input, select, textarea { font: 18px/1.5 \u0026#39;黑体\u0026#39;, Helvetica, sans-serif; } h1, h2, h3, h4, h5, h6, button, input, select, textarea { font-size: 100%; } /** 重置列表元素 - reset the list element **/ ul, ol { list-style: none; } /** 重置文本格式元素 - reset the text format element **/ a, a:hover { text-decoration: none; } /** 重置表单元素 - reset the form element **/ button { cursor: pointer; } input { font-size: 18px; outline: none; } /** 重置表格元素 - reset the table element **/ table { border-collapse: collapse; border-spacing: 0; } /* * 图片自适应 - image responsize * 1. 清空浏览器对图片的设置 * 2. \u0026lt;div\u0026gt;图片\u0026lt;/div\u0026gt; 的情况下，图片会撑高 div，这么设置可以清除该影响 */ img { border: 0; display: inline-block; width: 100%; max-width: 100%; height: auto; vertical-align: middle; } /* * 默认box-sizing是content-box，该属性导致padding会撑大div，使用border-box可以解决该问题 * set border-box for box-sizing when you use div, it solve the problem when you add padding and don\u0026#39;t want to make the div width bigger */ div, input { box-sizing: border-box; } /** 清除浮动 - clear float **/ .jsliang-clear:after, .clear:after { content: \u0026#39;\\20\u0026#39;; display: block; height: 0; clear: both; } .jsliang-clear, .clear { *zoom: 1; } /** 设置input的placeholder - set input placeholder **/ input::-webkit-input-placeholder { color: #919191; font-size: .32rem } /* Webkit browsers */ input::-moz-placeholder { color: #919191; font-size: .32rem } /* Mozilla Firefox */ input::-ms-input-placeholder { color: #919191; font-size: .32rem } /* Internet Explorer */ 3.6 li前面点换成图片 1 2 3 ul{ list-style-image: url(img/5.jpg); } 3.7 制作div的边框 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 .content:before { content: \u0026#34; \u0026#34;; display: block; width: 100%; height: 3.46rem; background: url(\u0026#34;../images/mobile-frame-top.jpg\u0026#34;) no-repeat center; background-size: 100%; position: absolute; left: 0; top: 0; z-index: 9; } .content { position: relative; background: url(\u0026#34;../images/mobile-frame-content.jpg\u0026#34;) repeat-y center; background-size: 100% auto; width: 10rem; padding: 3.46rem 1.37rem 2.26rem; font-size: .3rem; } .content:after { content: \u0026#34; \u0026#34;; display: block; width: 100%; height: 2.26rem; background: url(\u0026#34;../images/mobile-frame-bottom.png\u0026#34;) no-repeat center; background-size: 100%; position: absolute; left: 0; bottom: 0; z-index: 9; } 3.8 手机端背景图不能正确放大 1 2 3 4 .banner { background: url(\u0026#34;../images/banner.jpg\u0026#34;) no-repeat; background-size: 100% auto; } 3.9 position情况下居中 left 值计算：width - button宽度一半\n3.10 jsliang的弹窗 如果希望弹窗不固定大小，在手机端或者 PC 端都能使用，推荐使用百分比配置。\n*.html\n1 2 3 4 5 6 7 8 9 10 \u0026lt;div class=\u0026#34;jsliang-prompt\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;jsliang-mask\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;jsliang-alert\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./images/error.png\u0026#34; alt=\u0026#34;error\u0026#34;\u0026gt; \u0026lt;p class=\u0026#34;jsliang-tips\u0026#34;\u0026gt;该板块暂未开放~\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;a href=\u0026#34;javascript:void(0)\u0026#34; class=\u0026#34;jsliang-get-it\u0026#34; id=\u0026#34;jsliang-get-it\u0026#34;\u0026gt;好的，我知道了\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; *.css\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 /** 弹窗 - alert **/ .jsliang-prompt { display: none; } .jsliang-mask { z-index: 998; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: #000; filter: alpha(opacity=30); -ms-filter: \u0026#34;alpha(opacity=30)\u0026#34;; opacity: .3; } .jsliang-alert { z-index: 999; position: fixed; top: 30%; left: 40%; width: 320px; height: 220px; box-shadow: 2px 2px 4px #A0A0A0, -2px -2px 4px #A0A0A0; background-color: #fff; padding: 25px; border-radius: 15px; text-align: center; } .jsliang-alert img { width: 120px; height: 83.8px; } .jsliang-alert p { margin-top: 10px; } .jsliang-get-it { color: #fff; background: #5bc0de; display: inline-block; padding: 6px 12px; margin-bottom: 0; font-size: 14px; font-weight: 400; line-height: 1.42857143em; white-space: nowrap; cursor: pointer; border-color: #46b8da; border: 1px solid transparent; border-radius: 4px; text-align: center; vertical-align: middle; text-decoration: none; } .jsliang-get-it:hover { background: #31b0d5; } /* end */ 3.11 常用SVG 直接引用到页面即可。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \u0026lt;div class=\u0026#34;loading-spokes\u0026#34;\u0026gt; \u0026lt;svg id=\u0026#34;loading\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; viewBox=\u0026#34;0 0 32 32\u0026#34; width=\u0026#34;100\u0026#34; height=\u0026#34;100\u0026#34; fill=\u0026#34;black\u0026#34;\u0026gt; \u0026lt;path opacity=\u0026#34;.1\u0026#34; d=\u0026#34;M14 0 H18 V8 H14 z\u0026#34; transform=\u0026#34;rotate(0 16 16)\u0026#34;\u0026gt; \u0026lt;animate attributeName=\u0026#34;opacity\u0026#34; from=\u0026#34;1\u0026#34; to=\u0026#34;.1\u0026#34; dur=\u0026#34;1s\u0026#34; repeatCount=\u0026#34;indefinite\u0026#34; begin=\u0026#34;0\u0026#34; /\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;path opacity=\u0026#34;.1\u0026#34; d=\u0026#34;M14 0 H18 V8 H14 z\u0026#34; transform=\u0026#34;rotate(45 16 16)\u0026#34;\u0026gt; \u0026lt;animate attributeName=\u0026#34;opacity\u0026#34; from=\u0026#34;1\u0026#34; to=\u0026#34;.1\u0026#34; dur=\u0026#34;1s\u0026#34; repeatCount=\u0026#34;indefinite\u0026#34; begin=\u0026#34;0.125s\u0026#34; /\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;path opacity=\u0026#34;.1\u0026#34; d=\u0026#34;M14 0 H18 V8 H14 z\u0026#34; transform=\u0026#34;rotate(90 16 16)\u0026#34;\u0026gt; \u0026lt;animate attributeName=\u0026#34;opacity\u0026#34; from=\u0026#34;1\u0026#34; to=\u0026#34;.1\u0026#34; dur=\u0026#34;1s\u0026#34; repeatCount=\u0026#34;indefinite\u0026#34; begin=\u0026#34;0.25s\u0026#34; /\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;path opacity=\u0026#34;.1\u0026#34; d=\u0026#34;M14 0 H18 V8 H14 z\u0026#34; transform=\u0026#34;rotate(135 16 16)\u0026#34;\u0026gt; \u0026lt;animate attributeName=\u0026#34;opacity\u0026#34; from=\u0026#34;1\u0026#34; to=\u0026#34;.1\u0026#34; dur=\u0026#34;1s\u0026#34; repeatCount=\u0026#34;indefinite\u0026#34; begin=\u0026#34;0.375s\u0026#34; /\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;path opacity=\u0026#34;.1\u0026#34; d=\u0026#34;M14 0 H18 V8 H14 z\u0026#34; transform=\u0026#34;rotate(180 16 16)\u0026#34;\u0026gt; \u0026lt;animate attributeName=\u0026#34;opacity\u0026#34; from=\u0026#34;1\u0026#34; to=\u0026#34;.1\u0026#34; dur=\u0026#34;1s\u0026#34; repeatCount=\u0026#34;indefinite\u0026#34; begin=\u0026#34;0.5s\u0026#34; /\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;path opacity=\u0026#34;.1\u0026#34; d=\u0026#34;M14 0 H18 V8 H14 z\u0026#34; transform=\u0026#34;rotate(225 16 16)\u0026#34;\u0026gt; \u0026lt;animate attributeName=\u0026#34;opacity\u0026#34; from=\u0026#34;1\u0026#34; to=\u0026#34;.1\u0026#34; dur=\u0026#34;1s\u0026#34; repeatCount=\u0026#34;indefinite\u0026#34; begin=\u0026#34;0.675s\u0026#34; /\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;path opacity=\u0026#34;.1\u0026#34; d=\u0026#34;M14 0 H18 V8 H14 z\u0026#34; transform=\u0026#34;rotate(270 16 16)\u0026#34;\u0026gt; \u0026lt;animate attributeName=\u0026#34;opacity\u0026#34; from=\u0026#34;1\u0026#34; to=\u0026#34;.1\u0026#34; dur=\u0026#34;1s\u0026#34; repeatCount=\u0026#34;indefinite\u0026#34; begin=\u0026#34;0.75s\u0026#34; /\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;path opacity=\u0026#34;.1\u0026#34; d=\u0026#34;M14 0 H18 V8 H14 z\u0026#34; transform=\u0026#34;rotate(315 16 16)\u0026#34;\u0026gt; \u0026lt;animate attributeName=\u0026#34;opacity\u0026#34; from=\u0026#34;1\u0026#34; to=\u0026#34;.1\u0026#34; dur=\u0026#34;1s\u0026#34; repeatCount=\u0026#34;indefinite\u0026#34; begin=\u0026#34;0.875s\u0026#34; /\u0026gt; \u0026lt;/path\u0026gt; \u0026lt;/svg\u0026gt; \u0026lt;/div\u0026gt; 3.12 滚动条 1 http://www.xuanfengge.com/demo/201311/scroll/css3-scroll.html 3.13 修改select样式 *.html\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;div class=\u0026#34;activity-area-select\u0026#34;\u0026gt; \u0026lt;select class=\u0026#34;activity-area\u0026#34; id=\u0026#34;activity-friday-area\u0026#34;\u0026gt; \u0026lt;option value =\u0026#34;请选择商铺区域\u0026#34;\u0026gt;请选择商铺区域\u0026lt;/option\u0026gt; \u0026lt;option value =\u0026#34;香洲\u0026#34;\u0026gt;香洲\u0026lt;/option\u0026gt; \u0026lt;option value =\u0026#34;拱北\u0026#34;\u0026gt;拱北\u0026lt;/option\u0026gt; \u0026lt;option value =\u0026#34;前山\u0026#34;\u0026gt;前山\u0026lt;/option\u0026gt; \u0026lt;option value =\u0026#34;横琴\u0026#34;\u0026gt;横琴\u0026lt;/option\u0026gt; \u0026lt;option value =\u0026#34;斗门\u0026#34;\u0026gt;斗门\u0026lt;/option\u0026gt; \u0026lt;option value =\u0026#34;金湾\u0026#34;\u0026gt;金湾\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; *.css\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 .activity-area-select { width: 4.3rem; height: .6rem; line-height: .6rem; margin-left: .5rem; border: 1px solid #e0e0e0; border-radius: .28rem; font-size: .24rem; float: left; } /* 修改浏览器默认select */ .activity-area-select select { /* 清除边框 - Chrome和Firefox里面的边框不一样，需要复写 */ border: none; /* 清除聚焦颜色 */ outline: none; /* 清除默认样式 */ appearance: none; -moz-appearance: none; -webkit-appearance: none; /*在选择框的最右侧中间显示小箭头图片*/ background: url(\u0026#34;../images/icon-select.png\u0026#34;) no-repeat center right scroll transparent; /*为下拉小箭头留出一点位置，避免被文字覆盖*/ padding-left: .3rem; padding-right: 2rem; } /* 清除边框 - 清除ie的默认选择框样式清除，隐藏下拉箭头*/ .activity-area-select select::-ms-expand { display: none; outline: none; } 3.14 修改table样式 *.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;table class=\u0026#34;search-result-table\u0026#34; id=\u0026#34;search-result-table\u0026#34;\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;商铺名称\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;商铺地址\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;珠海粤西贸易有限公司\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;珠海市香洲区群华路44号（五洲康城）\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;珠海市香洲阑山唯佳生鲜馆\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;香洲区南福路199号商铺\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; *.css\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 .search-result-table { border:solid #e1e1e1; border-width:1px 0px 0px 1px; } table thead, tbody tr { display: table; width: 100%; table-layout: fixed; } .search-result-table tr:nth-child(2n+2) { background: #fff7ef; } .search-result-table th { background: #ffa751; color: #fff; font-size: .24rem; height: .63rem; line-height: .63rem; border:solid #e1e1e1; border-width: 0px 1px 1px 0px; } .search-result-table tbody { display: block; height: 6.05rem; overflow-x: hidden; overflow-y: scroll; } .search-result-table td { font-size: .22rem; height: .9rem; padding-left: .22rem; border:solid #e1e1e1; border-width: 0px 1px 1px 0px; } 四 Other 4.1 VSCode 选中设置 文件 -\u0026gt; 设置 -\u0026gt; User Settings -\u0026gt; editor.wordSeparators\n下划线选中：\n1 `~!@#$%^\u0026amp;*()-=+[{]}\\\\|;:\u0026#39;\\\u0026#34;,.\u0026lt;\u0026gt;/? 横杠选中：\n1 ./\\\\()\\\u0026#34;\u0026#39;:,.;\u0026lt;\u0026gt;~!@#$%^\u0026amp;*|+=[]{}`~? 4.2 浏览器前缀参照 -moz- 对应 Firefox,\n-webkit- 对应 Safari and Chrome\n-o- 对应 Opera\n-ms- 对应 Internet Explorer\n4.3 git的使用 本地仓库上传到GitHub：\ngit init git add . git commit -m \u0026ldquo;first commit\u0026rdquo; git remote add origin https://github.com/address git push -u origin master 更新本地仓库到GitHub\ngit add . git commit -m \u0026ldquo;更新\u0026rdquo; git push -u origin master 拉取GitHub项目到本地\ngit clone address 4.4 VS Code 设置模板页 安装插件 HTML Snippets 文件-首选项-用户代码片段-HTML 修改文件内容为： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 { // Place your snippets for html here. Each snippet is defined under a snippet name and has a prefix, body and // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are: // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the // same ids are connected. // Example: // \u0026#34;Print to console\u0026#34;: { // \u0026#34;prefix\u0026#34;: \u0026#34;log\u0026#34;, // \u0026#34;body\u0026#34;: [ // \u0026#34;console.log(\u0026#39;$1\u0026#39;);\u0026#34;, // \u0026#34;$2\u0026#34; // ], // \u0026#34;description\u0026#34;: \u0026#34;Log output to console\u0026#34; // } \u0026#34;!!\u0026#34;: { \u0026#34;prefix\u0026#34;: \u0026#34;!!\u0026#34;, \u0026#34;body\u0026#34;: [ \u0026#34;\u0026lt;!DOCTYPE html\u0026gt;\u0026#34;, \u0026#34;\u0026lt;html lang=\\\u0026#34;en\\\u0026#34;\u0026gt;\u0026#34;, \u0026#34;\u0026lt;head\u0026gt;\u0026#34;, \u0026#34;\\t\u0026lt;meta charset=\\\u0026#34;UTF-8\\\u0026#34;\u0026gt;\u0026#34;, \u0026#34;\\t\u0026lt;meta name=\\\u0026#34;viewport\\\u0026#34; content=\\\u0026#34;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\\\u0026#34;\u0026gt;\u0026#34;, \u0026#34;\\t\u0026lt;meta http-equiv=\\\u0026#34;X-UA-Compatible\\\u0026#34; content=\\\u0026#34;ie=edge\\\u0026#34;\u0026gt;\u0026#34;, \u0026#34;\\t\u0026lt;title\u0026gt;HelloWorld\u0026lt;/title\u0026gt;\u0026#34;, \u0026#34;\u0026lt;/head\u0026gt;\u0026#34;, \u0026#34;\u0026lt;body\u0026gt;\u0026#34;, \u0026#34;\\t$1\u0026#34;, \u0026#34;\\t\u0026#34;, \u0026#34;\\t\u0026lt;script src=\\\u0026#34;https://cdn.bootcss.com/jquery/3.3.1/jquery.js\\\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026#34;, \u0026#34;\u0026lt;/body\u0026gt;\u0026#34;, \u0026#34;\u0026lt;/html\u0026gt;\u0026#34; ], \u0026#34;description\u0026#34;: \u0026#34;!! - Defines a template for a html5 document\u0026#34; } } 在 HTML 页面输入！！然后回车，即可看到新效果 ","permalink":"https://aming.xyz/post/jquery%E5%AE%9E%E6%88%98/","tags":null,"title":""},{"categories":null,"contents":"我们有时候一个工具想马上调用出来，这时候我们如果用了快捷方式的话，很快就可以调用，节省了我们大量的时间。\n今天给大家整理了完整的ps快捷键\n1、工具箱\n移动工具 【V】\n矩形、椭圆选框工具 【M】\n套索、多边形套索、磁性套索 【L】\n快速选择工具、魔棒工具 【W】\n裁剪、透视裁剪、切片、切片选择工具 【C】\n吸管、颜色取样器、标尺、注释、123计数工具 【I】\n污点修复画笔、修复画笔、修补、内容感知移动、红眼工具 【J】\n画笔、铅笔、颜色替换、混合器画笔工具 【B】\n仿制图章、图案图章工具 【S】\n历史记录画笔工具、历史记录艺术画笔工具 【Y】\n像皮擦、背景橡皮擦、魔术橡皮擦工具 【E】\n渐变、油漆桶工具 【G】\n减淡、加深、海棉工具 【O】\n钢笔、自由钢笔、添加锚点、删除锚点、转换点工具 【P】\n横排文字、直排文字、横排文字蒙板、直排文字蒙板 【T】\n路径选择、直接选择工具 【A】\n矩形、圆角矩形、椭圆、多边形、直线、自定义形状工具 【U】\n抓手工具 【H】\n旋转视图工具 【R】\n缩放工具 【Z】\n添加锚点工具 【+】\n删除锚点工具 【-】\n默认前景色和背景色 【D】\n切换前景色和背景色 【X】\n切换标准模式和快速蒙板模式 【Q】\n标准屏幕模式、带有菜单栏的全屏模式、全屏模式 【F】\n临时使用移动工具 【Ctrl】\n临时使用吸色工具 【Alt】\n临时使用抓手工具 【空格】\n打开工具选项面板 【Enter】\n快速输入工具选项(当前工具选项面板中至少有一个可调节数字) 【0】至【9】\n循环选择画笔 【[】或【]】\n选择第一个画笔 【Shift】+【[】\n选择最后一个画笔 【Shift】+【]】\n建立新渐变(在”渐变编辑器”中) 【Ctrl】+【N】\n2、文件操作\n新建图形文件 【Ctrl】+【N】\n用默认设置创建新文件 【Ctrl】+【Alt】+【N】\n打开已有的图像 【Ctrl】+【O】\n打开为\u0026hellip; 【Ctrl】+【Alt】+【O】\n关闭当前图像 【Ctrl】+【W】\n保存当前图像 【Ctrl】+【S】\n另存为\u0026hellip; 【Ctrl】+【Shift】+【S】\n存储为Web所用格式 【Ctrl】+【Alt】+ 【Shift】+【S】\n页面设置 【Ctrl】+【Shift】+【P】\n打印 【Ctrl】+【P】\n打开“预置”对话框 【Ctrl】+【K】\n3、选择功能\n还原/重做前一步操作 【Ctrl】+【Z】\n还原两步以上操作 【Ctrl】+【Alt】+【Z】\n重做两步以上操作 【Ctrl】+【Shift】+【Z】\n剪切选取的图像或路径 【Ctrl】+【X】或【F2】\n拷贝选取的图像或路径 【Ctrl】+【C】\n合并拷贝 【Ctrl】+【Shift】+【C】\n将剪贴板的内容粘到当前图形中 【Ctrl】+【V】或【F4】\n将剪贴板的内容粘到选框中 【Ctrl】+【Shift】+【V】\n自由变换 【Ctrl】+【T】\n应用自由变换(在自由变换模式下) 【Enter】\n从中心或对称点开始变换 (在自由变换模式下) 【Alt】\n限制(在自由变换模式下) 【Shift】\n扭曲(在自由变换模式下) 【Ctrl】\n取消变形(在自由变换模式下) 【Esc】\n自由变换复制的象素数据 【Ctrl】+【Shift】+【T】\n再次变换复制的象素数据并建立一个副本 【Ctrl】+【Shift】+【Alt】+【T】\n删除选框中的图案或选取的路径 【DEL】\n用背景色填充所选区域或整个图层 【Ctrl】+【BackSpace】或【Ctrl】+【Del】\n用前景色填充所选区域或整个图层 【Alt】+【BackSpace】或【Alt】+【Del】\n弹出“填充”对话框 【Shift】+【BackSpace】\n从历史记录中填充 【Alt】+【Ctrl】+【Backspace】\n4、视图操作\n显示彩色通道 【Ctrl】+【2】\n显示单色通道 【Ctrl】+【数字】\n以CMYK方式预览(开关) 【Ctrl】+【Y】\n放大视图 【Ctrl】+【+】\n缩小视图 【Ctrl】+【-】\n满画布显示 【Ctrl】+【0】\n实际象素显示 【Ctrl】+【Alt】+【0】\n左对齐或顶对齐 【Ctrl】+【Shift】+【L】\n中对齐 【Ctrl】+【Shift】+【C】\n右对齐或底对齐 【Ctrl】+【Shift】+【R】\n左／右选择 1 个字符 【Shift】+【←】/【→】\n下／上选择 1 行 【Shift】+【↑】/【↓】\n5、编辑操作\n还原/重做前一步操作 【Ctrl】+【Z】\n还原两步以上操作 【Ctrl】+【Alt】+【Z】\n重做两步以上操作 【Ctrl】+【Shift】+【Z】\n剪切选取的图像或路径 【Ctrl】+【X】或【F2】\n拷贝选取的图像或路径 【Ctrl】+【C】\n合并拷贝 【Ctrl】+【Shift】+【C】\n将剪贴板的内容粘到当前图形中 【Ctrl】+【V】或【F4】\n将剪贴板的内容粘到选框中 【Ctrl】+【Shift】+【V】\n自由变换 【Ctrl】+【T】\n应用自由变换(在自由变换模式下) 【Enter】\n从中心或对称点开始变换 (在自由变换模式下) 【Alt】\n限制(在自由变换模式下) 【Shift】\n扭曲(在自由变换模式下) 【Ctrl】\n取消变形(在自由变换模式下) 【Esc】\n自由变换复制的象素数据 【Ctrl】+【Shift】+【T】\n再次变换复制的象素数据并建立一个副本 【Ctrl】+【Shift】+【Alt】+【T】\n删除选框中的图案或选取的路径 【DEL】\n用背景色填充所选区域或整个图层 【Ctrl】+【BackSpace】或【Ctrl】+【Del】\n用前景色填充所选区域或整个图层 【Alt】+【BackSpace】或【Alt】+【Del】\n弹出“填充”对话框 【Shift】+【BackSpace】\n从历史记录中填充 【Alt】+【Ctrl】+【Backspace】\n6、图像调整\n调整色阶 【Ctrl】+【L】\n自动调整色阶 【Ctrl】+【Shift】+【L】\n打开曲线调整对话框 【Ctrl】+【M】\n打开“色彩平衡”对话框 【Ctrl】+【B】\n打开“色相/饱和度”对话框 【Ctrl】+【U】\n去色 【Ctrl】+【Shift】+【U】\n反相 【Ctrl】+【I】\n7、图层操作\n从对话框新建一个图层 【Ctrl】+【Shift】+【N】\n以默认选项建立一个新的图层 【Ctrl】+【Alt】+【Shift】+【N】\n通过拷贝建立一个图层 【Ctrl】+【J】\n通过剪切建立一个图层 【Ctrl】+【Shift】+【J】\n与前一图层编组 【Ctrl】+【G】\n取消编组 【Ctrl】+【Shift】+【G】\n向下合并或合并联接图层 【Ctrl】+【E】\n合并可见图层 【Ctrl】+【Shift】+【E】\n盖印或盖印联接图层 【Ctrl】+【Alt】+【E】\n盖印可见图层 【Ctrl】+【Alt】+【Shift】+【E】\n将当前层下移一层 【Ctrl】+【[】\n将当前层上移一层 【Ctrl】+【]】\n将当前层移到最下面 【Ctrl】+【Shift】+【[】\n将当前层移到最上面 【Ctrl】+【Shift】+【]】\n激活下一个图层 【Alt】+【[】\n激活上一个图层 【Alt】+【]】\n激活底部图层 【Shift】+【Alt】+【[】\n激活顶部图层 【Shift】+【Alt】+【]】\n","permalink":"https://aming.xyz/post/ps%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8%E7%BB%8F%E5%85%B8%E5%AE%8C%E6%95%B4%E7%89%88-%E7%9F%A5%E4%B9%8E/","tags":null,"title":""},{"categories":null,"contents":"Vue 部署优化 Create by jsliang on 2018-12-7 14:53:566\nRecently revised in 2019-05-31 14:25:00\n在进行 Vue 项目部署时，发现它访问速度贼慢，于是做了下优化，下面是优化建议：\n一 进行路由懒加载 路由懒加载 - VueRouter 官网 大致意思就是，将 import PartOne from '@/components/PartOne'\n换成 const PartOne = () =\u0026gt; import('@/components/PartOne');\n这样，就可以访问快点了。\nindex.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import Vue from \u0026#39;vue\u0026#39; import Router from \u0026#39;vue-router\u0026#39; Vue.use(Router) // 路由懒加载 const PartOne = () =\u0026gt; import(\u0026#39;@/components/PartOne\u0026#39;); export default new Router({ routes: [ { path: \u0026#39;/\u0026#39;, components: { PartOne: PartOne, } }, { path: \u0026#39;/PartOne\u0026#39;, name: \u0026#39;PartOne\u0026#39;, component: PartOne }, ] }) 二 开启 Gzip Nginx 配置 Gzip PS：Nginx 需要在 conf/nginx.conf 文件中的 http 中设置。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 #user nobody; # 跟CPU有关，不用修改 worker_processes 1; events { # nginx最大负载量 worker_connections 1024; } http { # mime type映射 include mime.types; default_type application/octet-stream; # 启动高效传输文件的模式 sendfile on; # 长连接timeout keepalive_timeout 65; # 开启 gzip gzip on; gzip_types text/plain application/x-javascript application/javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png; # http结构下可以有多个server。请求进来后，确定哪一个server由server_name决定 server { # 监听端口 listen 80 default_server; # 识别的域名 server_name localhost default_server; # 一个关键配置，与URL参数乱码问题有关 #charset utf-8; root html; location / { index index.html index.htm; } #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } } include ../vhost/*.conf; } Vue 开启 Gzip 首先，安装 compression-webpack-plugin：\nnpm i compression-webpack-plugin -D 然后，修改配置代码：\nconfig/index.js\n1 2 3 4 // ... 代码省略 productionGzip: true, productionGzipExtensions: [\u0026#39;js\u0026#39;, \u0026#39;css\u0026#39;], 最后，打包的文件中会有 .gz 后缀的文件，表示开启成功了。\n三 屏蔽 sourceMap 修改配置代码：\nconfig/index.js\n1 2 3 // ... 代码省略 productionSourceMap: false, 这个 productionSourceMap 有什么作用呢？其实就是项目打包后，我们的代码都是经过压缩加密的，如果运行时报错，输出的错误信息无法准确知道是哪里的代码出错了，而开启了 productionSourceMap，就会自动生成一些 map 文件，准确地告诉我们哪一行那一列出错。\n关闭了 productionSourceMap 后，一方面可以减少上线代码包的大小，另一方面提高系统的安全性。\n四 开启 uglifyjs-webpack-plugin 的 cache build/webpack.prod.conf.js\n1 2 3 4 5 6 7 8 9 10 new UglifyJsPlugin({ cache: true, uglifyOptions: { compress: { warnings: false } }, sourceMap: config.build.productionSourceMap, parallel: true }), 开启后打包第二次的时间是第一次的一半。\n五 优化图片 平时我们切图、下载图的 png、jpg 图片，都异常的大，所以我们需要对图片进行压缩：\nTinyPNG | 图片压缩 上面的网站就能很不错地压缩图片，从而减少图片的体积。\n六 参考文献： vuejs项目性能优化总结 | 简书 - Evtion jsliang 广告推送：\n也许小伙伴想了解下云服务器\n或者小伙伴想买一台云服务器\n或者小伙伴需要续费云服务器\n欢迎点击 云服务器推广 查看！\njsliang 的文档库 由 梁峻荣 采用 知识共享 署名-非商业性使用-相同方式共享 4.0 国际 许可协议进行许可。\n基于https://github.com/LiangJunrong/document-library上的作品创作。\n本许可协议授权之外的使用权限可以从 https://creativecommons.org/licenses/by-nc-sa/2.5/cn/ 处获得。\n","permalink":"https://aming.xyz/post/vue-deployment-optimization/","tags":null,"title":""},{"categories":null,"contents":"Vue 开发准备 Create by jsliang on 2018-12-24 11:54:30\nRecently revised in 2019-05-31 13:48:20\n在使用 VueCli 开发之前，有些步骤是重复的，如果一个一个重新写过比较麻烦，故在此记录一些常用步骤。\n一 目录 不折腾的前端，和咸鱼有什么区别\n目录 一 目录 二 大体步骤 三 详细步骤 3.1 安装 VueCli 3.2 项目目录结构 3.3 配置使用 less 3.4 重置 CSS 样式 3.5 引用左上角图标 3.6 按需引用 ElementUI 3.7 Axios 封装使用 3.8 动态引用组件 3.9 图片的引用及打包 3.10 rem 适配 二 大体步骤 返回目录\n启动 VueCli 开发模式 引用重置 CSS 样式表 引用右上角 icon 图标 按需引用 ElementUI 引用并封装 Axios 三 详细步骤 返回目录\n3.1 安装 VueCli 返回目录\n安装 vue-cli：npm i vue-cli -g 初始化 Vue 项目：vue init webpack 开启开发模式：npm run dev 打开浏览器，查看网页： http://localhost:8080 3.2 项目目录结构 返回目录\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 - build —————————————————————— 构建脚本目录 - build.js —— 运行本地构建服务器，可以访问构建后的页面 - check-versions.js —— 检查版本 - utils.js —— 构建相关工具方法 - vue-loader.conf.js —— 判断是否为生产环境 - webpack.base.conf.js —— webpack 开发环境配置 - webpack.prod.conf.js —— webpack 生产环境配置 - config ————————————————————— 配置 - dev.env.js —— 开发配置 - index.js —— 配置总文件 - prod.env.js —— 打包配置 - node_modules ——————————————— Node 依赖包，请忽略 - src ———————————————————————— 主要工作区 - api —— 接口统一管理文件夹 - api.js —— 接口文件 - assets —— 需要压缩文件 - img —— 图片 - components —— 共用组件 - pages —— 页面 - router —— 路由文件夹 - index.js —— 路由文件 - style —— 样式文件 - reset.less —— 重置样式 - common.less —— 公共样式 - utils —— 工具文件夹 - md5.js —— md5 加密 App.vue ————————————————————— 根组件 main.js ————————————————————— 根组件配置 - static ————————————————————— 静态资源文件，不会被打包 - css —— CSS 文件夹 - reset.css —— 重置样式 - img —— 图片文件夹 - .babelrc ——————————————————— babel 配置，转换 ES6/7 为 ES5 - .editorconfig —————————————— 编辑器风格配置 - .gitignore ————————————————— 忽略 git 上传文件 - .postcssrc.js —————————————— 转换 CSS 的插件 - index.html ————————————————— 首页 - package.json ——————————————— 定义这个项目所需要的各种模块 - README.md —————————————————— 开搞必读文档 3.3 配置使用 less 返回目录\n步骤 1. 安装 less 和 less-loader：cnpm i less less-loader -D\n步骤 2. 添加 webpack 打包规则：\nbuild/webpack.base.conf.js\n1 2 3 4 { test: /\\.less$/, loader: \u0026#34;style-loader!css-loader!less-loader\u0026#34; } 步骤 3. 在 style 中使用 less：\n1 2 3 4 5 6 7 8 \u0026lt;style lang=\u0026#34;less\u0026#34; scoped\u0026gt; .left { border: 1px solid #ccc; .left-one { font-size: 10px; } } \u0026lt;/style\u0026gt; 步骤 4. 引用下边的 reset.less 和 common.less\nApp.vue\n1 2 3 4 \u0026lt;style lang=\u0026#34;less\u0026#34;\u0026gt; @import \u0026#39;./style/reset\u0026#39;; @import \u0026#39;./style/common\u0026#39;; \u0026lt;/style\u0026gt; 3.4 重置 CSS 样式 返回目录\n步骤 1. 引入重置样式表\nstatic/css/reset.css\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 /* * reset 的目的不是让默认样式在所有浏览器下一致，而是减少默认样式有可能带来的问题。 * The purpose of reset is not to allow default styles to be consistent across all browsers, but to reduce the potential problems of default styles. * create by jsliang */ /** 清除内外边距 - clearance of inner and outer margins **/ body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, /* 结构元素 - structural elements */ dl, dt, dd, ul, ol, li, /* 列表元素 - list elements */ pre, /* 文本格式元素 - text formatting elements */ form, fieldset, legend, button, input, textarea, /* 表单元素 - from elements */ th, td /* 表格元素 - table elements */ { margin: 0; padding: 0; } /** 设置默认字体 - setting the default font **/ body, button, input, select, textarea { font: 18px/1.5 \u0026#39;黑体\u0026#39;, Helvetica, sans-serif; } h1, h2, h3, h4, h5, h6, button, input, select, textarea { font-size: 100%; } /** 重置列表元素 - reset the list element **/ ul, ol { list-style: none; } /** 重置文本格式元素 - reset the text format element **/ a, a:hover { text-decoration: none; } /** 重置表单元素 - reset the form element **/ button { cursor: pointer; } input { font-size: 18px; outline: none; } /** 重置表格元素 - reset the table element **/ table { border-collapse: collapse; border-spacing: 0; } /** 图片自适应 - image responsize **/ img { border: 0; display: inline-block; width: 100%; max-width: 100%; height: auto; vertical-align: middle; } /* * 默认box-sizing是content-box，该属性导致padding会撑大div，使用border-box可以解决该问题 * set border-box for box-sizing when you use div, it solve the problem when you add padding and don\u0026#39;t want to make the div width bigger */ div, input { box-sizing: border-box; } /** 清除浮动 - clear float **/ .jsliang-clear:after, .clear:after { content: \u0026#39;\\20\u0026#39;; display: block; height: 0; clear: both; } .jsliang-clear, .clear { *zoom: 1; } /** 设置input的placeholder - set input placeholder **/ input::-webkit-input-placeholder { color: #919191; font-size: .26rem } /* Webkit browsers */ input::-moz-placeholder { color: #919191; font-size: .26rem } /* Mozilla Firefox */ input::-ms-input-placeholder { color: #919191; font-size: .26rem } /* Internet Explorer */ 步骤 2. 引用重置样式表\nsrc/main.js\n1 2 // 引入样式重置 import \u0026#39;../static/css/reset.css\u0026#39; 3.5 引用左上角图标 返回目录\n步骤 1. 在下面目录存放 ico 图片：在线制作 ico 图标\nstatic/img/icon.ico\n步骤 2. 引用左上角图标\nindex.html\n1 \u0026lt;link rel=\u0026#34;shortcut icon\u0026#34; type=\u0026#34;image/ico\u0026#34; href=\u0026#34;./static/img/icon.ico\u0026#34;\u0026gt; 3.6 按需引用 ElementUI 返回目录\n安装 ElementUI：npm i element-ui -S 如果需要完整使用 ElementUI： src/main.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import Vue from \u0026#39;vue\u0026#39; import App from \u0026#39;./App\u0026#39; import router from \u0026#39;./router\u0026#39; // 引用 ElementUI import ElementUI from \u0026#39;element-ui\u0026#39;; import \u0026#39;element-ui/lib/theme-chalk/index.css\u0026#39;; Vue.use(ElementUI); // 引用 ElementUI 结束 Vue.config.productionTip = false new Vue({ el: \u0026#39;#app\u0026#39;, router, components: { App }, template: \u0026#39;\u0026lt;App/\u0026gt;\u0026#39; }) App.vue\n1 2 3 4 5 6 \u0026lt;el-row\u0026gt; \u0026lt;el-col :xs=\u0026#34;8\u0026#34; :sm=\u0026#34;6\u0026#34; :md=\u0026#34;4\u0026#34; :lg=\u0026#34;3\u0026#34; :xl=\u0026#34;1\u0026#34;\u0026gt;左一\u0026lt;/el-col\u0026gt; \u0026lt;el-col :xs=\u0026#34;4\u0026#34; :sm=\u0026#34;6\u0026#34; :md=\u0026#34;8\u0026#34; :lg=\u0026#34;9\u0026#34; :xl=\u0026#34;11\u0026#34;\u0026gt;左二\u0026lt;/el-col\u0026gt; \u0026lt;el-col :xs=\u0026#34;4\u0026#34; :sm=\u0026#34;6\u0026#34; :md=\u0026#34;8\u0026#34; :lg=\u0026#34;9\u0026#34; :xl=\u0026#34;11\u0026#34;\u0026gt;右二\u0026lt;/el-col\u0026gt; \u0026lt;el-col :xs=\u0026#34;8\u0026#34; :sm=\u0026#34;6\u0026#34; :md=\u0026#34;4\u0026#34; :lg=\u0026#34;3\u0026#34; :xl=\u0026#34;1\u0026#34;\u0026gt;右一\u0026lt;/el-col\u0026gt; \u0026lt;/el-row\u0026gt; 如果需要按需引用 ElementUI： 步骤 1. 安装 babel 插件：cnpm i babel-plugin-component -D\n步骤 2. 修改 .babelrc：\n.babelrc\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \u0026#34;presets\u0026#34;: [ [\u0026#34;env\u0026#34;, { \u0026#34;modules\u0026#34;: false, \u0026#34;targets\u0026#34;: { \u0026#34;browsers\u0026#34;: [\u0026#34;\u0026gt; 1%\u0026#34;, \u0026#34;last 2 versions\u0026#34;, \u0026#34;not ie \u0026lt;= 8\u0026#34;] } }], \u0026#34;stage-2\u0026#34; ], \u0026#34;plugins\u0026#34;: [ \u0026#34;transform-vue-jsx\u0026#34;, \u0026#34;transform-runtime\u0026#34;, [ \u0026#34;component\u0026#34;, { \u0026#34;libraryName\u0026#34;: \u0026#34;element-ui\u0026#34;, \u0026#34;styleLibraryName\u0026#34;: \u0026#34;theme-chalk\u0026#34; } ] ] } 步骤 3. 按需引入 Row 与 Col：\nmain.js\n1 2 3 // 引入及使用 ElementUI import {Row, Col} from \u0026#39;element-ui\u0026#39;; Vue.use(Row).use(Col); App.vue\n1 2 3 4 5 6 \u0026lt;el-row\u0026gt; \u0026lt;el-col :xs=\u0026#34;8\u0026#34; :sm=\u0026#34;6\u0026#34; :md=\u0026#34;4\u0026#34; :lg=\u0026#34;3\u0026#34; :xl=\u0026#34;1\u0026#34;\u0026gt;左一\u0026lt;/el-col\u0026gt; \u0026lt;el-col :xs=\u0026#34;4\u0026#34; :sm=\u0026#34;6\u0026#34; :md=\u0026#34;8\u0026#34; :lg=\u0026#34;9\u0026#34; :xl=\u0026#34;11\u0026#34;\u0026gt;左二\u0026lt;/el-col\u0026gt; \u0026lt;el-col :xs=\u0026#34;4\u0026#34; :sm=\u0026#34;6\u0026#34; :md=\u0026#34;8\u0026#34; :lg=\u0026#34;9\u0026#34; :xl=\u0026#34;11\u0026#34;\u0026gt;右二\u0026lt;/el-col\u0026gt; \u0026lt;el-col :xs=\u0026#34;8\u0026#34; :sm=\u0026#34;6\u0026#34; :md=\u0026#34;4\u0026#34; :lg=\u0026#34;3\u0026#34; :xl=\u0026#34;1\u0026#34;\u0026gt;右一\u0026lt;/el-col\u0026gt; \u0026lt;/el-row\u0026gt; 响应式布局下基于断点的隐藏类： main.js\n1 2 // 引入基于断点的隐藏类 import \u0026#39;element-ui/lib/theme-chalk/display.css\u0026#39;; 然后你就可以使用下面的 CSS 类：\nhidden-xs-only - 当视口在 xs 尺寸时隐藏 hidden-sm-only - 当视口在 sm 尺寸时隐藏 hidden-sm-and-down - 当视口在 sm 及以下尺寸时隐藏 hidden-sm-and-up - 当视口在 sm 及以上尺寸时隐藏 hidden-md-only - 当视口在 md 尺寸时隐藏 hidden-md-and-down - 当视口在 md 及以下尺寸时隐藏 hidden-md-and-up - 当视口在 md 及以上尺寸时隐藏 hidden-lg-only - 当视口在 lg 尺寸时隐藏 hidden-lg-and-down - 当视口在 lg 及以下尺寸时隐藏 hidden-lg-and-up - 当视口在 lg 及以上尺寸时隐藏 hidden-xl-only - 当视口在 xl 尺寸时隐藏 注：\n参数 说明 xs \u0026lt;768px sm \u0026gt;=768px md \u0026gt;=992px lg \u0026gt;=1200px xl \u0026gt;=1920px 更多：ElementUI 组件\n3.7 Axios 封装使用 返回目录\n步骤 1. 安装 Axios：cnpm i axios -D\n步骤 2. 封装 api 到 src/api/api.js 中\napi.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /** * 封装逻辑 * 1. 引入 axios。 * 2. 设置请求配置 request。如：请求超时，响应头等 * 3. 设置请求中的遮罩（未实现） * 4. 设置请求成功后的数据过滤（未实现） * 5. 设置并暴露接口，传 data、method、url 到请求配置 request 上。 */ // 设置 axios import axios from \u0026#39;axios\u0026#39;; // 请求配置 const request = axios.create({ // 本地开发 dev 的时候，不需要开启这个 // baseURL: \u0026#39;http://172.26.167.5:8080\u0026#39;, timeout: 5000, headers: { timestamp: \u0026#34;20181026094424\u0026#34;, deviceid: \u0026#34;10102\u0026#34;, signature: \u0026#34;F9CB03DD3ED50EDA5DB214C42D4DC0D6\u0026#34;, } }) /** * 获取用户名 * userId */ export const getUserName = data =\u0026gt; request({ method: \u0026#39;get\u0026#39;, url: \u0026#39;/api/getUserName\u0026#39;, params: data }) 步骤 3. 在 Pages 中调用：\nUserInfo.vue\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // 引用接口 import { getUserName } from \u0026#34;@/api/api\u0026#34; export default { methods: { _getUserName() { // 获取用户名 getUserName({ userId: this.userId, }).then( (res) =\u0026gt; { console.log(\u0026#34;\\n【API - 获取用户名】：\u0026#34;); }) } } } 步骤 4. 设置 webpack 跨域 index.js：\nconfig/index.js\n1 2 3 4 5 6 7 8 dev: { proxyTable: { \u0026#39;/stat\u0026#39;: { // restful 接口规律 target: \u0026#39;http://172.**.**.**:8080/\u0026#39;, // 接口的域名 changeOrigin: true, // 如果接口跨域，需要进行这个参数配置 } }, }, 步骤 5. 更多参考：Axios 中文说明\n3.8 动态引用组件 返回目录\n修改路由文件：\n项目/src/router/index.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 import Vue from \u0026#39;vue\u0026#39; import Router from \u0026#39;vue-router\u0026#39; const Login = () =\u0026gt; import(\u0026#39;@/pages/Home/Login\u0026#39;) const Index = () =\u0026gt; import(\u0026#39;@/pages/Home/Index\u0026#39;) const ListOnePageOne = () =\u0026gt; import(\u0026#39;@/pages/ListOne/PageOne\u0026#39;) Vue.use(Router) export default new Router({ routes: [ { path: \u0026#39;/\u0026#39;, name: \u0026#39;Login\u0026#39;, component: Login }, { path: \u0026#39;/Index\u0026#39;, component: Index, children: [ { path:\u0026#39;/\u0026#39;, component: ListOnePageOne, meta: [\u0026#34;第一组第一页\u0026#34;], } ] } ] }) 3.9 图片的引用及打包 返回目录\n在 VueCli 中，图片可以存放在两个位置：\n静态目录，不会被打包：项目/static/img 动态目录，将会被打包：项目/src/assets/img 详细来说：\nstatic 的目录中的图片，不会被 Webpack 相关机制理会，你引入的时候，是怎样的，它就是怎样的。 assets 中的图片，它会被 Webpack 处理，在配置了图片相关打包 loader 的情况下，它会在 项目/build/webpack.base.conf.js 中依据相关的 loader 限制，在一定大小下转换为 Base64。 项目/build/webpack.base.conf.js\n1 2 3 4 5 6 7 8 { test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/, loader: \u0026#39;url-loader\u0026#39;, options: { limit: 10000, name: utils.assetsPath(\u0026#39;img/[name].[hash:7].[ext]\u0026#39;) } }, 从代码中可以看出可以看出，它对于小于 10K(10000/1024) 的图片，会打包成 base64，从而减少了我们在浏览器加载时的性能损耗。\n那么，在 VueCli 中应该如何引用图片呢？\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;van-row\u0026gt; \u0026lt;!-- 不推荐通过下面的方式直接引用 assets 图片，因为 webpack 打包可能没法成功打包 --\u0026gt; \u0026lt;van-col span=\u0026#34;8\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;../../assets/img/emoticon_happy.png\u0026#34; alt=\u0026#34;表情包\u0026#34;\u0026gt;\u0026lt;/van-col\u0026gt; \u0026lt;van-col span=\u0026#34;8\u0026#34;\u0026gt;\u0026lt;img :src=\u0026#34;icon1\u0026#34; alt=\u0026#34;表情包\u0026#34;\u0026gt;\u0026lt;/van-col\u0026gt; \u0026lt;van-col span=\u0026#34;8\u0026#34;\u0026gt;\u0026lt;img :src=\u0026#34;icon2\u0026#34; alt=\u0026#34;表情包\u0026#34;\u0026gt;\u0026lt;/van-col\u0026gt; \u0026lt;/van-row\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { icon1: require(\u0026#39;../../assets/img/emoticon_cool.png\u0026#39;), // 引用 assets 下的图片 icon2: \u0026#39;/static/img/emoticon_cute.png\u0026#39; // 引用 static 下的图片 } } } \u0026lt;/script\u0026gt; 说完 static 和 assets 的区别，以及对图片的引用，如果小伙伴们想验证下，那么可以看看 Webpack 在打包的时候对图片的处理：\n项目/config/index/js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u0026#39;use strict\u0026#39; const path = require(\u0026#39;path\u0026#39;) module.exports = { dev: { assetsSubDirectory: \u0026#39;static\u0026#39;, assetsPublicPath: \u0026#39;/\u0026#39;, proxyTable: {}, //... 省略剩下的代码 }, build: { index: path.resolve(__dirname, \u0026#39;../dist/index.html\u0026#39;), assetsRoot: path.resolve(__dirname, \u0026#39;../dist\u0026#39;), assetsSubDirectory: \u0026#39;static\u0026#39;, assetsPublicPath: \u0026#39;/\u0026#39;, // ...省略剩下的代码 } } 从代码中可以看出，对于 static 的资源，VueCli 在开发模式 dev 以及打包模式 build 中都进行了配置，它不会被 webpack 进行打包，属于 “静态资源”。\n但是，问题来了：\nVueCli 打包的时候，生成的是图片的绝对路径，部署的时候无法解析到图片，需要配置成相对路径，需要怎么改呢？\n位置 1： 项目/build/webpack.prod.conf.js\n1 2 3 4 5 6 output: { publicPath: \u0026#39;./\u0026#39;, path: config.build.assetsRoot, filename: utils.assetsPath(\u0026#39;js/[name].[chunkhash].js\u0026#39;), chunkFilename: utils.assetsPath(\u0026#39;js/[id].[chunkhash].js\u0026#39;) }, 在 output 这块，新增代码 publicPath: './'。\n位置 2： 项目/build/utils.js\n1 2 3 4 5 6 7 8 9 if (options.extract) { return ExtractTextPlugin.extract({ use: loaders, publicPath: \u0026#39;../../\u0026#39;, fallback: \u0026#39;vue-style-loader\u0026#39; }) } else { return [\u0026#39;vue-style-loader\u0026#39;].concat(loaders) } 在 vue-style-loader 这里，新增 publicPath: '../../ 这行代码。\n这样，打包出来的图片路径，就是相对路径了。\n3.10 rem 适配 返回目录\n如果项目属于手机端，那么需要进行 rem 适配，即将固定宽度的 px 转换为 rem，为了方便计算，下面有一份 100px = 1rem 的 JS 适配代码，只需要将代码放到 项目/src/utils/rem.js 中，并在 项目/src/main.js 中引用即可。\n项目/src/main.js\n1 2 // 引用 rem 适配 import \u0026#39;./utils/rem\u0026#39; 项目/src/utils/rem.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /* * 移动端 rem 适配，px:rem = 100:1 * 该适配兼容 UC 竖屏转横屏出现的 BUG * 自定义设计稿的宽度：designWidth * 最大宽度：maxWidth * 这段 js 的最后面有两个参数记得要设置，一个为设计稿实际宽度，一个为制作稿最大宽度，例如设计稿为 750，最大宽度为 750，则为(750,750) */ ! function (e, t) { function n() { var n = l.getBoundingClientRect().width; t = t || 540, n \u0026gt; t \u0026amp;\u0026amp; (n = t); var i = 100 * n / e; r.innerHTML = \u0026#34;html{font-size:\u0026#34; + i + \u0026#34;px;}\u0026#34; } var i, d = document, o = window, l = d.documentElement, r = document.createElement(\u0026#34;style\u0026#34;); if (l.firstElementChild) l.firstElementChild.appendChild(r); else { var a = d.createElement(\u0026#34;div\u0026#34;); a.appendChild(r), d.write(a.innerHTML), a = null } n(), o.addEventListener(\u0026#34;resize\u0026#34;, function () { clearTimeout(i), i = setTimeout(n, 300) }, !1), o.addEventListener(\u0026#34;pageshow\u0026#34;, function (e) { e.persisted \u0026amp;\u0026amp; (clearTimeout(i), i = setTimeout(n, 300)) }, !1), \u0026#34;complete\u0026#34; === d.readyState ? d.body.style.fontSize = \u0026#34;16px\u0026#34; : d.addEventListener( \u0026#34;DOMContentLoaded\u0026#34;, function (e) { d.body.style.fontSize = \u0026#34;16px\u0026#34; }, !1) }(750, 750); jsliang 广告推送：\n也许小伙伴想了解下云服务器\n或者小伙伴想买一台云服务器\n或者小伙伴需要续费云服务器\n欢迎点击 云服务器推广 查看！\njsliang 的文档库 由 梁峻荣 采用 知识共享 署名-非商业性使用-相同方式共享 4.0 国际 许可协议进行许可。\n基于https://github.com/LiangJunrong/document-library上的作品创作。\n本许可协议授权之外的使用权限可以从 https://creativecommons.org/licenses/by-nc-sa/2.5/cn/ 处获得。\n","permalink":"https://aming.xyz/post/vue-prepare/","tags":null,"title":""},{"categories":null,"contents":"Vue 上传文件 一 设置 Node 跨域代理 修改 项目/config/index.js 下的 dev 设置：\n原 build/index.js 配置：\n1 2 3 4 5 6 dev: { // Paths assetsSubDirectory: \u0026#39;static\u0026#39;, assetsPublicPath: \u0026#39;/\u0026#39;, proxyTable: {}, } 修改后 build/index.js 配置：\n1 2 3 4 5 6 7 8 9 10 11 dev: { // Paths assetsSubDirectory: \u0026#39;static\u0026#39;, assetsPublicPath: \u0026#39;/\u0026#39;, proxyTable: { \u0026#39;/services\u0026#39;: { // 碰到 /services 类型的接口，使用 node 代理 target: \u0026#39;http://172.**.**.49:8080\u0026#39;, // 需要将开发模式的 localhost:8080 代理到哪个接口 changeOrigin: true, // 如果接口跨域，需要设置这个参数为 true } }, }, 这时，我们在 npm run dev 下，就可以将 localhost:8080 调用 http://172.**.**.49:8080 的接口由 Node 代理转发，从而实现接口的跨域请求。\n二 实现原生上传图片 章节 1 为前置条件\n如何实现 \u0026lt;input type=\u0026quot;file\u0026quot; /\u0026gt; 上传图片：\nAlbum.vue\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;input type=\u0026#34;file\u0026#34; @change=\u0026#34;uploads\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; // 如果使用方法 1 // import { uploadFile } from \u0026#39;../../api/api\u0026#39; // 如果使用方法 2 import axios from \u0026#39;axios\u0026#39; export default { methods: { // 普通上传图片 uploads(e) { // 方法 1 - 可行 // const file = e.target.files[0]; // console.log(file); // const fd = new FormData(); // fd.append(\u0026#39;userBlicence\u0026#39;, file); // uploadFile(fd).then( res =\u0026gt; { // console.log(res); // }).catch( error =\u0026gt; { // console.log(error); // }) // 方法 2 - 可行 const file = e.target.files[0]; console.log(file); const fd = new FormData(); fd.append(\u0026#39;userBlicence\u0026#39;, file); axios({ method: \u0026#39;post\u0026#39;, timeout: 5000, headers: { \u0026#39;Content-Type\u0026#39;:\u0026#39;multipart/form-data\u0026#39;, timestamp: \u0026#34;2019032009000\u0026#34;, deviceid: \u0026#34;10001\u0026#34;, signature: \u0026#34;2743cfbda4601a359400929393b7657a\u0026#34;, }, url: \u0026#39;/services/Auser-uploadImg.action\u0026#39;, data: fd, }).then( res =\u0026gt; { console.log(res); }).catch( error =\u0026gt; { console.log(error); }) }, } } \u0026lt;/script\u0026gt; 如果我们不用封装接口，那么我们直接使用方法 2 即可。\n但是，一般情况下，我们会抽取接口到 api.js，进行接口的统一管理：\napi.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // 设置 axios import axios from \u0026#39;axios\u0026#39;; // 请求配置 const request = axios.create({ // 开发模式下不需要开启，打包模式下去掉该注释 // baseURL: \u0026#39;http://172.**.**.49:8080\u0026#39;, timeout: 5000, headers: { timestamp: \u0026#34;2019032009000\u0026#34;, deviceid: \u0026#34;10001\u0026#34;, signature: \u0026#34;2743cfbda4601a359400929393b7657a\u0026#34;, } }) /** * 上传图片 * userBlicence - 图片 */ export const uploadFile = data =\u0026gt; request({ method: \u0026#39;post\u0026#39;, headers: { \u0026#39;Content-Type\u0026#39;:\u0026#39;multipart/form-data\u0026#39;, }, url: \u0026#39;/services/Auser-uploadImg.action\u0026#39;, data: data, }) 这样，当我们使用方法 1 的时候，我们直接调用接口即可。\n三 实现 ElementUI 上传图片 章节 1 为前置条件\n相对于原生上传图片来说，ElementUI 上传图片更为便捷：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;el-upload action=\u0026#34;/services/Auser-uploadImg.action\u0026#34; name=\u0026#34;userBlicence\u0026#34; :on-success=\u0026#34;uploadSuccess\u0026#34; :headers=\u0026#34;headers\u0026#34; \u0026gt; \u0026lt;el-button type=\u0026#34;primary\u0026#34;\u0026gt;点击上传\u0026lt;/el-button\u0026gt; \u0026lt;/el-upload\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { headers: { timestamp: \u0026#34;2019032009000\u0026#34;, deviceid: \u0026#34;10001\u0026#34;, signature: \u0026#34;2743cfbda4601a359400929393b7657a\u0026#34;, } } }, methods: { // ElementUI 上传图片成功 uploadSuccess(res, file) { console.log(res); console.log(file); }, } } \u0026lt;/script\u0026gt; 如此，就可以实现图片上传的功能。\n","permalink":"https://aming.xyz/post/vue-upload-file/","tags":null,"title":""},{"categories":null,"contents":"日常博客，记录生活琐事\n","permalink":"https://aming.xyz/readme/","tags":null,"title":""},{"categories":null,"contents":"修饰键 修饰键+字符键 确定最终的快捷键\nCommand（或 Cmd）⌘ Shift ⇧ Option（或 Alt）⌥ Control（或 Ctrl）⌃ Caps Lock ⇪ Fn 剪切、拷贝、粘贴和其他常用快捷键 Command-X：剪切所选项并拷贝到剪贴板。 Command-C：将所选项拷贝到剪贴板。这同样适用于“访达”中的文件。 Command-V：将剪贴板的内容粘贴到当前文稿或 App 中。这同样适用于“访达”中的文件。 Command-Z：撤销上一个命令。随后你可以按 Shift-Command-Z 来重做，从而反向执行撤销命令。在某些 App 中，你可以撤销和重做多个命令。 Command-A：全选各项。 Command-F：查找文稿中的项目或打开“查找”窗口。 Command-G：再次查找：查找之前所找到项目出现的下一个位置。要查找出现的上一个位置，请按 Shift-Command-G。 Command-H：隐藏最前面的 App 的窗口。要查看最前面的 App 但隐藏所有其他 App，请按 Option-Command-H。 Command-M：将最前面的窗口最小化至“程序坞”。要最小化最前面的 App 的所有窗口，请按 Option-Command-M。 **Command-O：**打开所选项，或打开一个对话框以选择要打开的文件。 Command-P：打印当前文稿。 Command-S：存储当前文稿。 Command-T：打开新标签页。 Command-W：关闭最前面的窗口。要关闭 App 的所有窗口，请按下 Option-Command-W。 Option-Command-Esc：强制退出 App。 Command-空格键：显示或隐藏“聚焦搜索栏。要从“访达”窗口执行“聚焦”搜索，请按 Command–Option–空格键。 Control-Command-空格键：显示字符检视器，你可以从中选取表情符号和其他符号 Control-Command-F：全屏使用 App（如果 App 支持）。 空格键：使用“快速查看来预览所选项目。 Command-Tab：在打开的 App 中切换到下一个最近使用的 App。 **Command-重音符 (`)：**在你当前所用 App 的各个窗口之间切换。（第二个按键上的字符因键盘而异，通常是在 Tab 键上方，数字 1 的左侧。） Shift-Command-5：在 macOS Mojave 或更高版本中，拍摄截屏或录制屏幕。也可以使用 Shift-Command-3 或 Shift-Command-4 来拍摄截屏。 **Shift-Command-N：**在“访达”中创建一个新文件夹。 Command-逗号 (,)：打开最前面的 App 的偏好设置。 睡眠、退出登录和关机快捷键 在这些快捷键中，你可能需要按住其中一些快捷键稍长时间。这样有助于避免无意中使用了这些快捷键。\n电源按钮：按下可将 Mac 开机或将 Mac 从睡眠状态唤醒。按住这个按钮 1.5 秒可使 Mac 进入睡眠状态*。继续按住则会强制 Mac 关机。 Option-Command-电源按钮* 或 Option-Command-介质推出键 ：将 Mac 置于睡眠状态。 Control-Shift-电源按钮* 或 Control-Shift-介质推出键 : 将显示器置于睡眠状态。 Control-电源按钮* 或 Control-介质推出键 ：显示一个对话框，询问你要让 Mac 重新启动、睡眠还是关机。 Control-Command-电源按钮*：强制 Mac 重新启动，系统不会提示你存储任何已打开且未存储的文稿。 Control-Command-介质推出键 ：退出所有 App，然后重新启动 Mac。如果任何打开的文稿有未存储的更改，系统会询问你要不要存储这些更改。 Control-Option-Command-电源按钮* 或 Control-Option-Command-介质推出键 ：退出所有 App，然后将 Mac 关机。如果任何打开的文稿有未存储的更改，系统会询问你要不要存储这些更改。 Control-Command-Q：立即锁定屏幕。 Shift-Command-Q：退出登录你的 macOS 用户帐户。系统将提示你确认。要在不确认的情况下立即退出登录，请按下 Option-Shift-Command-Q。 访达和系统快捷键 Command-D：复制所选文件。 Command-E：推出所选磁盘或宗卷。 Command-F：在“访达”窗口中开始“聚焦”搜索。 Command-I：显示所选文件的“显示简介”窗口。 Command-R：(1) 如果在“访达”中选择了某个替身：显示所选替身对应的原始文件。(2) 在某些 App（如“日历”或 Safari 浏览器）中，刷新或重新载入页面。(3) 在“软件更新”中，再次检查有没有软件更新。 Shift-Command-C：打开“电脑”窗口。 Shift-Command-D：打开“桌面”文件夹。 Shift-Command-F：打开“最近使用”窗口，其中会显示你最近查看或更改过的所有文件。 Shift-Command-G：打开“前往文件夹”窗口。 Shift-Command-H：打开当前 macOS 用户帐户的个人文件夹。 Shift-Command-I：打开 iCloud 云盘。 Shift-Command-K：打开“网络”窗口。 Option-Command-L：打开“下载”文件夹。 **Shift-Command-N：**新建文件夹。 Shift-Command-O：打开“文稿”文件夹。 Shift-Command-P：在“访达”窗口中显示或隐藏预览面板。 Shift-Command-R：打开“隔空投送”窗口。 Shift-Command-T：显示或隐藏“访达”窗口中的标签页栏。 Ctrl-Shift-Command-T：将所选的“访达”项目添加到“程序坞”（OS X Mavericks 或更高版本） Shift-Command-U：打开“实用工具”文件夹。 Option-Command-D：显示或隐藏“程序坞”。 Control-Command-T：将所选项添加到边栏（OS X Mavericks 或更高版本）。 Option-Command-P：隐藏或显示“访达”窗口中的路径栏。 Option-Command-S：隐藏或显示“访达”窗口中的边栏。 Command–斜线 (/)：隐藏或显示“访达”窗口中的状态栏。 Command-J：显示“显示”选项。 Command-K：打开“连接服务器”窗口。 Control-Command-A：为所选项制作替身。 Command-N：打开一个新的“访达”窗口。 Option-Command-N：新建智能文件夹。 Command-T：在当前“访达”窗口中有单个标签页开着的状态下显示或隐藏标签页栏。 Option-Command-T：在当前“访达”窗口中有单个标签页开着的状态下显示或隐藏工具栏。 Option-Command-V：将剪贴板中的文件从原始位置移动到当前位置。 Command-Y：使用“快速查看”预览所选文件。 Option-Command-Y：显示所选文件的快速查看幻灯片显示。 Command-1：以图标方式显示“访达”窗口中的项目。 Command-2：以列表方式显示“访达”窗口中的项目。 Command-3：以分栏方式显示“访达”窗口中的项目。 Command-4：以画廊方式显示“访达”窗口中的项目。 Command-左中括号 ([)：前往上一个文件夹。 Command-右中括号 (])：前往下一个文件夹。 Command-上箭头：打开包含当前文件夹的文件夹。 Command-Control-上箭头：在新窗口中打开包含当前文件夹的文件夹。 Command-下箭头：打开所选项。 右箭头：打开所选文件夹。这个快捷键仅在列表视图中有效。 左箭头：关闭所选文件夹。这个快捷键仅在列表视图中有效。 Command-Delete：将所选项移到废纸篓。 Shift-Command-Delete：清倒废纸篓。 Option-Shift-Command-Delete：清倒废纸篓而不显示确认对话框。 Command-调低亮度：当 Mac 连接到多台显示器时，打开或关闭视频镜像功能。 Option-调高亮度：打开“显示器”偏好设置。这个快捷键可与任一亮度键搭配使用。 Control-调高亮度或 Control-调低亮度：更改外接显示器的亮度（如果显示器支持）。 Option-Shift-调高亮度或 Option-Shift-调低亮度：以较小的幅度调节显示器亮度。如果你的显示器支持，可以将 Control 键添加到此快捷键，以便在外接显示器上进行调节。 Option-调度中心：打开“调度中心”偏好设置。 Command-调度中心：显示桌面。 Control-下箭头：显示最前面的 App 的所有窗口。 Option-调高音量：打开“声音”偏好设置。这个快捷键可与任一音量键搭配使用。 Option-Shift-调高音量或 Option-Shift-调低音量：以较小的幅度调节音量。 Option-键盘调高亮度：打开“键盘”偏好设置。这个快捷键可与任一键盘亮度键搭配使用。 Option-Shift-键盘调高亮度或 Option-Shift-键盘调低亮度：以较小的幅度调节键盘亮度。 连按 Option 键：在单独的窗口中打开项目，然后关闭原始窗口。 连按 Command 键：在单独的标签页或窗口中打开文件夹。 按住 Command 键拖移到另一个宗卷：将拖移的项目移到另一个宗卷，而不是拷贝它。 按住 Option 键拖移：拷贝托移的项目。拖移项目时，指针会发生变化。 拖移时按住 Option-Command：为拖移的项目制作替身。拖移项目时指针会发生变化。 按住 Option 键点按开合三角：打开所选文件夹内的所有文件夹。这个快捷键仅在列表视图中有效。 按住 Command 键点按窗口标题：查看包含当前文件夹的文件夹。 了解如何使用 Command 键或 Shift 键在“访达”中选择多个项目。 点按“访达”菜单栏中的“前往”菜单查看用于打开许多常用文件夹（如“应用程序”、“文稿”、“下载”、“实用工具”和“iCloud 云盘”）的快捷键。 文稿快捷键 这些快捷键的行为可能因你使用的 App 而异。\nCommand-B：以粗体显示所选文本，或者打开或关闭粗体显示功能。 Command-I：以斜体显示所选文本，或者打开或关闭斜体显示功能。 Command-K：添加网页链接。 Command-U：对所选文本加下划线，或者打开或关闭加下划线功能。 Command-T：显示或隐藏“字体”窗口。 Command-D：从“打开”对话框或“存储”对话框内选择“桌面”文件夹。 Control-Command-D：显示或隐藏所选字词的定义。 Shift-Command-冒号 (:)：显示“拼写和语法”窗口。 Command-分号 (;)：查找文稿中拼写错误的字词。 Option-Delete：删除插入点左边的字词。 Control-H：删除插入点左边的字符。也可以使用 Delete 键。 Control-D：删除插入点右边的字符。也可以使用 Fn-Delete。 Fn-Delete：在没有向前删除 键的键盘上向前删除。也可以使用 Control-D。 Control-K：删除插入点与行或段落末尾处之间的文本。 Fn-上箭头：Page Up：向上滚动一页。 Fn-下箭头：Page Down：向下滚动一页。 **Fn-左箭头：**Home：滚动到文稿开头。 Fn-右箭头：End：滚动到文稿末尾。 Command-上箭头：将插入点移至文稿开头。 Command-下箭头：将插入点移至文稿末尾。 Command-左箭头：将插入点移至当前行的行首。 Command-右箭头：将插入点移至当前行的行尾。 Option-左箭头：将插入点移至上一字词的词首。 Option-右箭头：将插入点移至下一字词的词尾。 Shift-Command-上箭头：选中插入点与文稿开头之间的文本。 Shift-Command-下箭头：选中插入点与文稿末尾之间的文本。 Shift-Command-左箭头：选中插入点与当前行行首之间的文本。 Shift-Command-右箭头：选中插入点与当前行行尾之间的文本。 Shift-上箭头：将文本选择范围扩展到上一行相同水平位置的最近字符处。 Shift-下箭头：将文本选择范围扩展到下一行相同水平位置的最近字符处。 Shift-左箭头：将文本选择范围向左扩展一个字符。 Shift-右箭头：将文本选择范围向右扩展一个字符。 Option-Shift-上箭头：将文本选择范围扩展到当前段落的段首，再按一次则扩展到下一段落的段首。 Option-Shift-下箭头：将文本选择范围扩展到当前段落的段尾，再按一次则扩展到下一段落的段尾。 Option-Shift-左箭头：将文本选择范围扩展到当前字词的词首，再按一次则扩展到下一字词的词首。 Option-Shift-右箭头：将文本选择范围扩展到当前字词的词尾，再按一次则扩展到下一字词的词尾。 Control-A：移至行或段落的开头。 Control-E：移至行或段落的末尾。 Control-F：向前移动一个字符。 Control-B：向后移动一个字符。 Control-L：将光标或所选内容置于可见区域中央。 Control-P：上移一行。 Control-N：下移一行。 Control-O：在插入点后新插入一行。 Control-T：将插入点后面的字符与插入点前面的字符交换。 Command-左花括号 ({)：左对齐。 Command-右花括号 (})：右对齐。 Shift-Command-竖线 (|)：居中对齐。 Option-Command-F：前往搜索栏。 Option-Command-T：显示或隐藏 App 中的工具栏。 Option-Command-C：拷贝样式：将所选项的格式设置拷贝到剪贴板。 Option-Command-V：粘贴样式：将拷贝的样式应用到所选项。 Option-Shift-Command-V：粘贴并匹配样式：将周围内容的样式应用到粘贴在该内容中的项目。 Option-Command-I：显示或隐藏检查器窗口。 Shift-Command-P：页面设置：显示用于选择文稿设置的窗口。 Shift-Command-S：显示“存储为”对话框或复制当前文稿。 Shift-Command-减号 (-)：缩小所选项。 Shift-Command-加号 (+)：放大所选项。Command-等号 (=) 可实现相同的功能。 Shift-Command-问号 (?)：打开“帮助”菜单。 辅助功能快捷键 要使用以下视觉辅助功能快捷键，请先选取苹果菜单  \u0026gt;“系统设置”（或“系统偏好设置”），然后点按“键盘”。点按“键盘快捷键”，在左侧选择“辅助功能”，然后在右侧选择“反转颜色”和“对比度”。\nControl-Option-Command-8：反转颜色。\nControl-Option-Command-逗号 (,) 和 Control-Option-Command-句点 (.)：降低对比度和增强对比度。\n使用以下快捷键可更改键盘焦点。要使用其中的某些快捷键，请先选取苹果菜单  \u0026gt;“系统设置”（或“系统偏好设置”），然后点按“键盘”。点按“键盘快捷键”，在左侧选择“键盘”，然后在右侧选择相应快捷键的设置。\nControl-F2 或 **Fn-Control-F2：**将焦点移到菜单栏。随后，你可以使用箭头键来浏览菜单，按下 Return 键来打开选中的菜单或选取选中的菜单项，或键入菜单项的名称以跳转到选中菜单中的这个项目。 Control-F3 或 Fn-Control-F3：将焦点移到程序坞。 Control-F4 或 Fn-Control-F4：将焦点移到活跃窗口或下一个窗口。 Control-F5 或 Fn-Control-F5：将焦点移到窗口工具栏。 Control-F6 或 **Fn-Control-F6：**将焦点移到浮动窗口。 Control-Shift-F6：将焦点移到上一个面板。 Control-F7 或 Fn-Control-F7：更改 Tab 键移动焦点的方式 - 浏览屏幕上的所有控制，或仅浏览文本框和列表。 Control-F8 或 Fn-Control-F8：将焦点移到菜单栏中的状态菜单 Command–重音符 (`)：激活前台 App 中下一个打开的窗口。 Shift–Command–重音符 (`)：激活前台 App 中上一个打开的窗口 Option–Command–重音符 (`)：将焦点移到窗口抽屉。 Tab 和 Shift-Tab：移到下一个控制，移到上一个控制。 Control-Tab：选定文本栏时移到下一个控制。 Control-Shift-Tab：移到上一组控制。 箭头键：移到列表、标签组或菜单中的相邻项，或移动滑块和调整器（上箭头键可增大值，下箭头键可减小值） Control–箭头键：移到与文本栏相邻的控制。 其他辅助功能快捷键：\nOption-Command-F5 或连按三下触控 ID：显示“辅助功能快捷键”面板。 “旁白”命令 放大或缩小 使用键盘上的“鼠标键”来控制指针 如果你正在使用“旁白”，可能需要先让“旁白”忽略下一个按下的键，然后才能使用这篇文章中介绍的某些快捷键。\n其他快捷键 Safari 浏览器快捷键 “聚焦”快捷键 “邮件”快捷键 “照片”快捷键 “磁盘工具”快捷键 “预览”快捷键 “音乐”App 快捷键 启动快捷键 如需了解更多快捷键，请查看 App 菜单中显示的快捷键缩写。每个 App 都有自己的快捷键，在一个 App 中可用的快捷键可能在另一个 App 中不可用。 进一步了解 使用表情符号和其他符号 创建自己的快捷键，以及解决快捷键之间的冲突 更改功能键或修饰键的行为 使用键盘快捷键的语音命令 ","permalink":"https://aming.xyz/post/macbook%E5%BF%AB%E6%8D%B7%E9%94%AE/","tags":null,"title":"MacBook键盘快捷键"},{"categories":null,"contents":"单机 文件系统 (现实中的物体) 应用程序 计算机 写字板 绘画板 网络 网络计算机 网络站点 网络绘画处理 ","permalink":"https://aming.xyz/post/%E7%A8%8B%E5%BA%8F%E5%91%98%E8%A6%81%E5%AD%A6%E4%B9%A0%E7%9A%84%E9%A1%B9%E7%9B%AE/","tags":null,"title":"程序员要学习的项目"}]